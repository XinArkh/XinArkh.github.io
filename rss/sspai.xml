<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>少数派</title><link>https://sspai.com</link><description>少数派RSS Feed-文章完整抓取版</description><language>zh-CN</language><managingEditor>contact@sspai.com (少数派)</managingEditor><lastBuildDate>Wed, 11 Oct 2023 08:00:07 GMT</lastBuildDate><generator>RSSEngine powered by PyRSS2Gen-1.1.0</generator><image><url>https://i0.hdslb.com/bfs/face/bbe80dc05f67e9543a33b067764227b02504bfa0.jpg</url><title>icon</title><link>https://i0.hdslb.com/bfs/face/bbe80dc05f67e9543a33b067764227b02504bfa0.jpg</link></image><item><title>返璞归真，又迎一春：小评《刺客信条：幻景》</title><link>https://sspai.com/post/83488</link><description>&lt;div&gt;&lt;p&gt;本文首发于 &lt;a href="https://www.gcores.com/articles/171791" target="_blank"&gt;机核网&lt;/a&gt; ，作者 &lt;a href="https://www.gcores.com/users/62278/content" target="_blank"&gt;@雪豆&lt;/a&gt;，少数派经授权转载，仅对文章格式略作调整。&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;《刺客信条：幻景》在今天已经正式发售，在一个月前我曾经前往上海育碧总部提前玩到了部分内容，感谢育碧的邀请，这次趁着十一长假，我完整体验到了本作的全部内容。&lt;/p&gt;&lt;p&gt;作为系列十五周年的纪念之作，去年就已经公布的《幻景》在宣传之时就定下了「回归初心」的基调 —— 虽说这种说辞在当下有种「陈腔滥调」的嫌疑，然而从整个系列的变迁来看，将「潜入+暗杀」这一主题能够再次完整地带给玩家，我还真觉得是系列新作的「当务之急」。 &lt;/p&gt;&lt;p&gt;于是《幻景》做出了一个很好的「还原」：它去掉了更加复杂的成长机制，将玩法系统刻意地做出了简化，却传承了系列发展中总结出来的一些优秀特色 —— 你仍然可以体验到最原汁原味的计划、潜行、暗杀等情节，也可以将一切抛之脑后，欣赏黄金时代下的巴格达的美丽景色。&lt;/p&gt;&lt;figure&gt;&lt;img alt="图片" data-original="https://cdn.sspai.com/2023/10/11/article/d471ce164949879da09698b36f4de04d" src="https://cdn.sspai.com/2023/10/11/article/d471ce164949879da09698b36f4de04d"/&gt;&lt;/figure&gt;&lt;p&gt;事实上，我觉得《幻景》没有任何进步、也没有任何改变，说是一部看起来非常保守的作品也不为过。但它依然充满了系列最原始的那种扮演刺客的魅力，并让我沉浸数十个小时无法自拔。&lt;/p&gt;&lt;p&gt;通俗点说，那就是味儿对了。&lt;/p&gt;&lt;h2&gt;关于本次体验内容的一些注意事项&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;总游戏时间约 20 小时左右，出于时间的关系，除了主线剧情之外，我未能达成全收集以及全部支线任务的目标。&lt;/li&gt;&lt;li&gt;为了保证各位玩家的体验，本篇文章中将不包含讲述剧情相关的内容，请放心阅读。&lt;/li&gt;&lt;li&gt;本次所体验的平台版本为 Windows，使用 Xbox 手柄。在 RTX3080 显卡的加持下，游戏全程稳定在 60FPS，未出现明显的掉帧和拖慢现象。&lt;/li&gt;&lt;li&gt;我所体验的版本并未实装首日补丁，游戏的最终表现请以正式版为准。&lt;/li&gt;&lt;/ul&gt;&lt;figure&gt;&lt;img alt="图片" data-original="https://cdn.sspai.com/2023/10/11/article/505ed4f5c1437ba397dabda4adba3a10" src="https://cdn.sspai.com/2023/10/11/article/505ed4f5c1437ba397dabda4adba3a10"/&gt;&lt;/figure&gt;&lt;h2&gt;去 RPG 化，好&lt;/h2&gt;&lt;p&gt;《幻景》给我的最直观的感受就是 —— 一切都变得简单了。&lt;/p&gt;&lt;p&gt;不知道还有多少玩家记得《起源》中的等级，以及《英灵殿》中纷繁复杂的技能加点。在《幻景》中这些都不复存在。主人公巴辛姆的血量和耐力的上限值并不会受到经验值的影响 —— 或许应该这么说 —— 本作中不存在经验值这个东西。&lt;/p&gt;&lt;p&gt;这让原本聚焦于角色本身的成长体系被分配到了武器和天赋树这两个部分上。虽说部分武器通过强化可以提升伤害，但武器与防具更多的则是强化「角色的某项技能效果」，例如「减少暗杀时的噪音」或是「击杀敌人时提供 X 秒的时间减缓」等等。甚至有些武器获得时就是满强化的效果，找到一套趁手的武器，然后全程用到通关也是没问题的。&lt;/p&gt;&lt;p&gt;而天赋树则简简单单地分为了三个分支：「幻影」侧重于暗杀与正面战斗时的辅助能力、「骗徒」则是可以增强暗杀时使用道具的效果、「猎手」则是提供猎鹰等侦查手段的花样。像是「连续暗杀多名敌人」这种非常便利的天赋我个人自然是推荐优先点出来的，而其余的则可以根据自己的喜好随意选择。更方便的是，这些天赋可以随时重置，就算是点到了自己不常用的天赋也不必担心。&lt;/p&gt;&lt;figure&gt;&lt;img alt="图片" data-original="https://cdn.sspai.com/2023/10/11/article/294ae68711748cf50079fcf43487cd31" src="https://cdn.sspai.com/2023/10/11/article/294ae68711748cf50079fcf43487cd31"/&gt;&lt;/figure&gt;&lt;p&gt;这样的简化让游戏一下子变得「通俗易懂」了起来，不用费劲巴力地研究什么天赋流派，也不需要在探索的时候时刻注意敌人的等级以免被碾压。毕竟巴辛姆不是上一部的狂战士，不需要什么多姿多彩的战斗方式，灵巧的回避和各种辅助逃跑潜行的副武器才是他最拿手的技能。所以就算是一不小心暗杀失败暴露了自己，玩家也只要熟练掌握轻重攻击、回避和非常宽松的弹反，那就足以令他在巴格达游刃有余。&lt;/p&gt;&lt;p&gt;不过说没有任何的成长要素显然是不客观的：伴随着不断推进任务流程以及探索巴格达内隐藏的各种谜团，玩家可以提升巴辛姆的评价等级。但这个评价等级更像是一种引导，指导玩家在当前的阶段可以在哪个区推进任务，确认目前的游戏进度。实际上就算完全无视也不会对角色行动造成什么影响。另外评价等级还会解锁背后的挂饰，仅此而已。&lt;/p&gt;&lt;figure&gt;&lt;img alt="图片" data-original="https://cdn.sspai.com/2023/10/11/article/335c5ca46d2d2e8bc8bad71ff07a6241" src="https://cdn.sspai.com/2023/10/11/article/335c5ca46d2d2e8bc8bad71ff07a6241"/&gt;&lt;/figure&gt;&lt;p&gt;这种去 RPG 化的设计我觉得就像是一种「育碧在绞尽了脑汁想要做出点什么新花样之后，突然某天夜里把电脑里的各种策划文档突然一删，然后把老祖宗藏在阁楼里的笔记本又翻出来」的一种表现 —— 我能在《幻景》中找到在其他系列游戏中所验证过的那些成功的机制，但这些机制又不会影响到《刺客信条》这一系列中最原始，也是最有意思的「暗杀」这一玩法。&lt;/p&gt;&lt;p&gt;更不如说，之所以要为了做出这些简化，它的目的，就是为了要让「刺客」的味道更加纯粹。&lt;/p&gt;&lt;h2&gt;简单的刺杀与战斗，很好&lt;/h2&gt;&lt;p&gt;回想初代操纵阿泰尔在乱军中取目标首级的游戏体验，以及二代艾奇奥那种经过强化后的，优雅而又神秘的「传统」玩法，《刺客信条》系列在之后的设计思路就开始往一种令我有点「接受不了」的方向开始发展 —— 就比如《黑旗》让各位玩家称道的航海与探险跟「刺客」八竿子打不着；《枭雄》里增加了各种街头破坏的内容让暗杀变得没啥存在的意义；《英灵殿》连主副手装备都给你做出了详细的区别，就是想让你往狂暴战那个方向直接转职。&lt;/p&gt;&lt;p&gt;我的意思并不是说这些作品中就没有「暗杀」这一选项，而是觉得在这些作品中，暗杀只是一种「选择」 。你暗杀也行，不暗杀一路进去叮咣五四一通乱砸也行。说真的，虽然这设计玩起来是自由度拉满，但也挺不「刺客信条」的。&lt;/p&gt;&lt;figure&gt;&lt;img alt="图片" data-original="https://cdn.sspai.com/2023/10/11/article/b9407347523a1c23b73e73fd1b15a507" src="https://cdn.sspai.com/2023/10/11/article/b9407347523a1c23b73e73fd1b15a507"/&gt;&lt;/figure&gt;&lt;p&gt;尤其是当这种开发思路开始贯穿到之后的作品中，一次尝试我可以接受，两次尝试我可以理解，但它的名字叫《刺客信条》 —— 再加上后来《起源》中那种「装备跟等级绑定」类似的我非常不喜欢的设计，我曾经在很长一段时间还反思自己，是不是像真正的刺客那样「从黑影中来，在黑影中消失」的游戏体验已经跟不上时代潮流了？&lt;/p&gt;&lt;p&gt;然而《幻景》跳出来给了我一个大嘴巴子。正如它所宣传的那样，《刺客信条》的最新作变成了像初代那样的，着重「暗杀体验」的游戏模式。&lt;/p&gt;&lt;figure&gt;&lt;img alt="图片" data-original="https://cdn.sspai.com/2023/10/11/article/c7ce5d795f3dfeb34a1ce1b30484e6b7" src="https://cdn.sspai.com/2023/10/11/article/c7ce5d795f3dfeb34a1ce1b30484e6b7"/&gt;&lt;/figure&gt;&lt;p&gt;当故事剧情带领玩家开启一轮新的刺杀任务时，玩家并不是像往常那样，直接被给予了暗杀的目标。系统将原本的一个个任务，设计成了一个看似体量非常庞大的「调查」面板。玩家先根据故事的提示，潜入各个区域去搜集相关信息，亦或是从一些小头目身上套取情报，从而如抽丝剥茧一般，最终确定你需要暗杀的目标。到底要先干什么后干什么，自己去面板里查就完事儿了。&lt;/p&gt;&lt;p&gt;获取情报的过程实际上是非常随意的 —— 比如说某个道具在NPC的手上，你可以跟他交易、直接杀掉目标抢夺、亦或是使用惯用的偷窃伎俩来获得；潜入某个地方时，你可以选择是花点货币让门口的雇佣兵捣乱从而趁机进入，亦或者用你的猎鹰“恩奇都”仔细探查周围，找到下水道或是墙上的裂缝进行一次传统的潜入。甚至连一些任务的推进顺序也是可以由玩家来自由决定的，先做A还是先做B，最终结果所导向的发展也都是一致的。毕竟少了等级的制约，玩家能去的地方也就更多了。&lt;/p&gt;&lt;figure&gt;&lt;img alt="图片" data-original="https://cdn.sspai.com/2023/10/11/article/373b94da818ff34ebb65280b81480031" src="https://cdn.sspai.com/2023/10/11/article/373b94da818ff34ebb65280b81480031"/&gt;&lt;/figure&gt;&lt;p&gt;在故事的开始我们可以得知，这次巴辛姆所要面对的敌人都是蒙着面，也不知道真实身份的神秘人物，而这些「大人物」都隐藏在守卫森严的特殊堡垒或是区域中。玩家要做的就是在各种敌人之中穿梭，在令人焦躁的等待中，找到出手的一刹那时机。&lt;/p&gt;&lt;p&gt;这让我不由得想起了隔壁后脑勺纹条形码的大哥 —— 对比过来二者都是强调「暗杀」的魅力，但前者可以各种花样杀陷阱杀甚至是栽赃嫁祸的狼人杀，《幻景》这次却变成了一件特别简单的事儿：无论从哪个地方，玩家所要做的就是潜行到敌人背后，给他/她来上一刀，然后在混乱之际攀爬跳跃跑酷再配上几颗烟雾弹逃出生天即可。&lt;/p&gt;&lt;p&gt;看起来特别质朴，可身为古代刺客的真实体验，就是这样简单而干脆。&lt;/p&gt;&lt;p&gt;可以说，本作的核心玩法全是构筑在了如此简单的暗杀玩法上。《幻景》将玩法的重点放在了「调查暗杀目标开始，找到各种蛛丝马迹，在确定暗杀目标身份之后制定暗杀计划」这样的过程上，并在体验过程中给了许多选项，让玩家自己选一条最合适自己游戏习惯的玩法即可。花样真没那么多，最多也就是爬进屋子看看有没有吊灯或者油瓶什么的，辅助击杀 BOSS 一下。&lt;/p&gt;&lt;p&gt;就连本作中为巴辛姆设计的大招「专注刺杀」也是基于「暗杀」这一系统上：玩家需要通过暗杀来积累专注值，再用专注值来一瞬间秒杀任何敌人。不管你是身高马大的重甲兵，还是身份显贵的重要人物，「专注刺杀」都可以轻松让玩家达成目标 —— 当然，想要发动这样的强力技能，也需要巴辛姆处于未被发现的状态才可以。&lt;/p&gt;&lt;figure&gt;&lt;img alt="图片" data-original="https://cdn.sspai.com/2023/10/11/article/edc6ef4a01d74571f947f5f1e1a056cc" src="https://cdn.sspai.com/2023/10/11/article/edc6ef4a01d74571f947f5f1e1a056cc"/&gt;&lt;/figure&gt;&lt;p&gt;当然，换个角度来看，这种设计也确实是显得太过于传统了。「眼前一亮」这种东西在《幻景》中可以说是非常少见 —— 因为游戏提供了一种「非常纯粹「的游戏体验。它纯粹到就算一不小心暗杀失败了要不得已处理大批大批敌人时，玩家除了逃跑，所能做的也就只有回避、格挡和攻击（还把轻重攻击做到了一个键位上）这几个简单的应对手段而已。除了需要留神的「无法格挡只能回避」的红光攻击以外，大部分情况下都可以通过判定非常宽松的格挡来轻松化解各种难题。&lt;/p&gt;&lt;figure&gt;&lt;img alt="图片" data-original="https://cdn.sspai.com/2023/10/11/article/38c0a9546a09d27518402dc8fc7197ff" src="https://cdn.sspai.com/2023/10/11/article/38c0a9546a09d27518402dc8fc7197ff"/&gt;&lt;/figure&gt;&lt;p&gt;不过《幻景》中加入了「体力条」这种限制玩家翻滚癌的设计，不难猜测是希望玩家尽量不要采用「硬碰硬」的玩法策略来体验本作。一些重甲敌人的红光攻击节奏也非常难抓，关键时候还是用烟雾弹保命更有效一些。&lt;/p&gt;&lt;p&gt;总的来说，这种战斗体验一下子就让我回到了初代的时候「一个格挡能杀一地图的敌人」这种简单而粗暴的战斗体验 —— 玩起来是没啥新鲜感，但话又说回来，《刺客信条》真的需要那么多花里胡哨的玩意儿吗？&lt;/p&gt;&lt;p&gt;一切的核心玩法都围绕着抽丝剥茧般的「暗杀」体验来展开，其他的作为「锦上添花」来增添找补。我觉得《幻景》终于理清楚了一件事儿，那就是「返璞归真」才是美。&lt;/p&gt;&lt;figure&gt;&lt;img alt="图片" data-original="https://cdn.sspai.com/2023/10/11/article/0eb8e11f831a8c17bfcb9fb50eda5519" src="https://cdn.sspai.com/2023/10/11/article/0eb8e11f831a8c17bfcb9fb50eda5519"/&gt;&lt;/figure&gt;&lt;h2&gt;巴格达的魅力，太好了&lt;/h2&gt;&lt;p&gt;要说通过玩游戏来学知识的典型，我就佩服俩游戏：一个《三国无双》，一个《刺客信条》。&lt;/p&gt;&lt;p&gt;《刺客信条》系列中所包含的文化属性是一种完善到足以令人匪夷所思的程度 —— 什么「巴黎圣母院拿游戏来做重建参考」「上课直接作为课件进行实际演示」什么的新闻早已经是玩家之间口口相传的「好人好事」了。&lt;/p&gt;&lt;p&gt;就怎么来形容《刺客信条》这种事无巨细的文化关怀呢？哪怕是这游戏没有半点的可玩之处，它还能牢牢坚持着「旅游模拟器」这一最后的操守，成为各位一次次当着父母的面正大光明地打开游戏机说「学历史」的最好借口。&lt;/p&gt;&lt;p&gt;毫无疑问，《幻景》所带来的公元九世纪的阿拔斯王朝，又一次成为了我们学习阿拉伯历史的最好教材。这个时代离我们很遥远，所以体验《幻景》所带来的那种神秘却又朦胧的气质，成为了我漫步在这个灼热大地上的另外一个理由。&lt;/p&gt;&lt;figure&gt;&lt;img alt="图片" data-original="https://cdn.sspai.com/2023/10/11/article/caa0a1e31e889bfac9be9b46a5046054" src="https://cdn.sspai.com/2023/10/11/article/caa0a1e31e889bfac9be9b46a5046054"/&gt;&lt;/figure&gt;&lt;p&gt;「伊斯兰黄金时代」是一个穆斯林文化影响全世界的时代。除了我们所熟知的《一千零一夜》以外，世界上的艺术家、工程师、学者、诗人、哲学家、地理学家及商人，在巴格达的「智慧宫」里相互碰撞，带来了艺术、农业、经济、工业、法律、文学、航海、哲学、科学、社会学、科技各方面的飞速进步：原始的资本主义市场自那时涌现、阿拉伯农业革命引进了大量伊斯兰世界以外的农作物、巴格达建立了第一所天文台并创造了标准星盘、大型清真寺拔地而起使得伊斯兰建筑更具特色……&lt;/p&gt;&lt;p&gt;作为故事发生的舞台巴格达，正是这样一个庞大且由各种文化符号互相影响而形成的宏伟都市。立体的结构不但给巴辛姆提供了更加灵活自由的移动路线，更是让这些虚拟的游戏画面变成了我们回顾历史的真实途径。我曾经在前瞻文章中提到过，选定巴格达是很讨巧的一件事 —— 毕竟作为当时三大国际都市之一，它注定是可以提供充足的鸟瞰点、可以作为刺客据点的房屋、以及足够宏伟的历史建筑的。&lt;/p&gt;&lt;figure&gt;&lt;img alt="图片" data-original="https://cdn.sspai.com/2023/10/11/article/dbdb36cf8668e796e212d18c2967b67c" src="https://cdn.sspai.com/2023/10/11/article/dbdb36cf8668e796e212d18c2967b67c"/&gt;&lt;/figure&gt;&lt;p&gt;更让我觉得印象深刻的是，《幻景》中的巴格达作为港口，还融合了罗马、中国、印度、希腊等多个国家的文化元素。比如在街头就可以听到亲切的唐人行商叫卖的声音。《幻景》中那些大量的真实存在的历史文化遗迹，变成了一个个可以供玩家进行收集的「历史古迹」条目。光是那些详细的说明文字，就足以花上几个小时去细细品味。但感到遗憾的是《起源》和《英灵殿》中的教育模式「发现之旅」并没有在初期就实装到游戏中，希望在之后能再补充进来吧。&lt;/p&gt;&lt;figure&gt;&lt;img alt="图片" data-original="https://cdn.sspai.com/2023/10/11/article/58343d1c6df0868b5f601116dbb727ab" src="https://cdn.sspai.com/2023/10/11/article/58343d1c6df0868b5f601116dbb727ab"/&gt;&lt;/figure&gt;&lt;p&gt;将文化的展现以电子游戏的形式展现给玩家这种事是育碧的拿手好戏，所以放一万个心，这次的《幻景》也绝对不可能在这方面失手。但话又说回来，不停地观光总有一天也会腻，《幻景》这种恰到好处的简单游戏体验会让那种早已习惯「罐头游戏」的各位玩家们会有一种「哎？青菜好像还挺好吃的来着？」这种很微妙的惊喜感。&lt;/p&gt;&lt;figure&gt;&lt;img alt="图片" data-original="https://cdn.sspai.com/2023/10/11/article/3f13f20bad38f21f02929e94c9482b26" src="https://cdn.sspai.com/2023/10/11/article/3f13f20bad38f21f02929e94c9482b26"/&gt;&lt;/figure&gt;&lt;h2&gt;一些杂七杂八的想法，不够好&lt;/h2&gt;&lt;p&gt;得益于巴格达在当时历史上的地位，巴辛姆可以花费一些特殊硬币来雇佣来自各个国家的三教九流达成目标 —— 就比如可以雇佣外籍佣兵捣乱来吸引敌人的注意，亦或者贿赂当地的宣讲官来降低敌人的警觉度，但我很少用这个系统，一般都比较喜欢亲力亲为；&lt;/p&gt;&lt;figure&gt;&lt;img alt="图片" data-original="https://cdn.sspai.com/2023/10/11/article/b5d755f2e107eb271a8fff7a36cb89cd" src="https://cdn.sspai.com/2023/10/11/article/b5d755f2e107eb271a8fff7a36cb89cd"/&gt;&lt;/figure&gt;&lt;p&gt;警觉度高了会被市民喊卫兵过来，满值了还会出现阿拉伯暴恐机动队来天诛你（没那么夸张），撕布告可以直接降低一个警戒度，也太过于有效了点儿……我曾经问过开发团队为啥这样设计，他们说就是不想让玩家太过于花精力在消除负面效果上，贴心。&lt;/p&gt;&lt;p&gt;硬币的获取大部分是通过本作中的「偷窃系统」获得的 —— 本质上是一个简单的 QTE。偷窃可以从其他 NPC 上获取金钱或道具，灵活使用偷窃系统，可以在一定程度上影响到玩家完成刺杀潜入的进程，另外觉得 QTE 很烦的玩家还可以开启菜单中的「必定成功」选项。对自已好一点，因为有些时候偷窃的判定真的太小了；&lt;/p&gt;&lt;p&gt;不知为啥，《幻景》的移动手感其实挺一般的，比如一些需要跑酷的情节里，方向的判断并不够灵敏，掉到河里或是爬错方向的情况比较常见，感觉有点祖传手感的味道；&lt;/p&gt;&lt;p&gt;游戏中的引导做的也不够明显，比如一些室内场景中的出口需要仔细观察才能发现，没有小地图只有方位显示真的挺折磨人；&lt;/p&gt;&lt;p&gt;另外我真的很讨厌“反锁的门”这样让你绕远的设计，《幻景》中多的也太过分了；&lt;/p&gt;&lt;p&gt;在之前试玩的时候我发现暗杀敌人的判定会比视觉的距离要远上一个身位左右，但在正式版中，我发现暗杀的动作会根据所处的位置不同而有所区别 —— 例如草丛中离敌人太远时触发暗杀就会让尸体停留在原地而不是拖进草丛，不是很严谨。&lt;/p&gt;&lt;figure&gt;&lt;img alt="图片" data-original="https://cdn.sspai.com/2023/10/11/article/988a2596decacfdcf6705080204b1f5a" src="https://cdn.sspai.com/2023/10/11/article/988a2596decacfdcf6705080204b1f5a"/&gt;&lt;/figure&gt;&lt;p&gt;敌人蠢到令人吃惊，蹲草丛里是真的可以靠口哨把整个巡逻队一个个骗进来杀掉而不被发现。都 2023 年了大哥！能不能学学《MGS 2》里面那种 CAUTION 状态下小队地毯式搜索的 AI 的表现啊。&lt;/p&gt;&lt;p&gt;本作的副武器在每一个阶段都可以进行三选一的性能强化，这种打造独一无二的设计思路我很喜欢，不过说回来我最常用的也就是飞刀、烟雾弹这两样。天赋中副武器上限可以不用着急点，反正敌人的营地里啥都有，摸一圈全回来了。&lt;/p&gt;&lt;p&gt;虽说不能剧透，但我觉得…… 剧情还是挺中规中矩的。偷的东西干的事儿，只要你想猜，没有你猜不到的。&lt;/p&gt;&lt;p&gt;Bug 确实有，但我遇到的也顶多是穿模的小事，卡关的情况没有发现过。&lt;/p&gt;&lt;p&gt;除去主线任务以外，流程中包含了若干名为「巴格达传奇」的支线任务。做不做都行，有一些货币奖励之类的，但挑战的内容都挺有意思，比如「不被发现」「无伤击败敌人」，不难做，调剂一下胃口很合适。&lt;/p&gt;&lt;figure&gt;&lt;img alt="图片" data-original="https://cdn.sspai.com/2023/10/11/article/b36d43cf9b4f02ad291dc3ac96739e7e" src="https://cdn.sspai.com/2023/10/11/article/b36d43cf9b4f02ad291dc3ac96739e7e"/&gt;&lt;/figure&gt;&lt;p&gt;猎鹰的使用方式与《起源》类似，需要先解决掉弓箭手才能探明据点，基本上找任务目标全靠它了。&lt;/p&gt;&lt;p&gt;整体画面没有美到「惊艳」的程度，正常水平吧，拍拍照还是挺出图的。&lt;/p&gt;&lt;p&gt;买了豪华版的玩家记得领领给的特殊装备、马和鹰。主要是装备，挺好使。&lt;/p&gt;&lt;p&gt;另外如果在育碧自家平台购买的话，还可以用账号升级给的奖励币在平台菜单里免费换取阿泰尔和艾奇奥在《启示录》里的经典装扮。&lt;/p&gt;&lt;figure&gt;&lt;img alt="图片" data-original="https://cdn.sspai.com/2023/10/11/article/5c26f60e730d745dc6f559b51f6200b9" src="https://cdn.sspai.com/2023/10/11/article/5c26f60e730d745dc6f559b51f6200b9"/&gt;&lt;/figure&gt;&lt;h2&gt;结语&lt;/h2&gt;&lt;p&gt;《幻景》最终的感觉就是一款显得很「保守」的游戏。它没有那么多花里胡哨的新系统，反倒是把之前系列中那些不错的想法敛了一波，又融合了一下。所以如果你是本身对《刺客信条》系列不是很感兴趣的玩家，在本作中其实也挺难找到快乐的。因为本来的《刺客信条》它就是一个质朴的穷小子，没啥光鲜亮丽的地方，但就是有一种简单的真诚和美好。&lt;/p&gt;&lt;figure&gt;&lt;img alt="图片" data-original="https://cdn.sspai.com/2023/10/11/article/9ffdbaba2ff308dae519216a47f80047" src="https://cdn.sspai.com/2023/10/11/article/9ffdbaba2ff308dae519216a47f80047"/&gt;&lt;/figure&gt;&lt;p&gt;在《幻景》理同样可以大杀四方，也同样可以爬到楼顶啥都不做看看夕阳，它有着绝对是《刺客信条》最应该有也最完好保留下来的玩法体验，并且这次也没胡搞乱搞，稳稳当当的落地。虽说游戏也有小毛病，但骂归骂，玩还是要玩，并且我玩的还挺有像第一次在大学宿舍用 Xbox 玩《刺客信条 1》的时候那种感觉，似乎比初恋还值得回味。&lt;/p&gt;&lt;p&gt;而且最重要的是，《幻景》挺便宜的，我真的没啥理由不玩它。&lt;br/&gt; &lt;/p&gt;&lt;/div&gt;</description><author>机核GCORES</author><guid>https://sspai.com/post/83488</guid><pubDate>Wed, 11 Oct 2023 07:00:00 GMT</pubDate></item><item><title>用开源项目，你也能训练自己的 AI 语音模型</title><link>https://sspai.com/post/83487</link><description>&lt;div&gt;&lt;h2&gt;前言&lt;/h2&gt;&lt;p&gt;Stable Diffusion 比较火的时候玩过一阵子 AI 绘图，那个时候就感受到了人工智能的巨大潜力。后来刷 B 站的时候一直刷到各种 AI 模型的视频，其中就有许多 AI 翻唱歌曲的内容。出于好奇，去 Github 上搜了一下，发现了不少开源的 AI 语音模型项目，训练门槛也不高，就入坑玩了一阵子。初时只是出于好奇，实际体验过后却被其逼真的效果所震撼，于是把以前训练时的一些笔记整理了一下，和大家分享一下训练的心得体会。&lt;/p&gt;&lt;h2&gt;应用场景&lt;/h2&gt;&lt;h3&gt;个人应用&lt;/h3&gt;&lt;p&gt;先简单谈谈我自己的训练成果和应用场景。&lt;/p&gt;&lt;p&gt;训练过一个自己音色的唱歌模型，虽然高音还是唱不上去，但是起码在调上了，也算圆了自己的一个唱歌梦，不跑调就是胜利。还训练了几个女声模型，最后挑了两个融了个略带烟嗓的女声模型，效果相当的不错，一篇几千字的文章，最多出现一两处电音或变调，我个人完全可以接受。&lt;/p&gt;&lt;p&gt;目前比较喜欢用这个混合模型来生成一些近现代文学作品的音频，就是那种直接看可能看不下去，但是听的话还能投入进去的文章。以前上学的时候还挺喜欢看看出版书籍的，各种散文、名著都能耐下性子研读，现在变得比较浮躁，沉不下心，但是又想接受一下文学的熏陶，这种矛盾的心情不知道各位能不能理解。如果是普通 TTS 转换出来的朗读效果我个人不太能接受，完全不会有想听下去的欲望，所以特地花了一个礼拜调出了目前使用的音色，等哪一天听腻了就准备再花点时间换个口味，反正成本也不高，几晚上的电费而已。&lt;/p&gt;&lt;p&gt;为了用起来更方便一点，我特地看了一下音色推理部分的源码，临时写了一个脚本，可以一键把指定文件夹中的 txt 文件转为音频文件，还会同时生成 vtt 格式的字幕文件。因为我特意把微软 TTS 的语速调慢了 20%，所以一般 3000 字的文章转成音频后会有 15 分钟左右，对我来说刚刚好。&lt;/p&gt;&lt;p&gt;电脑上听的话我一般是用 PotPlayer，这个播放器可以自动加载同文件夹下的同名字幕文件，比较省心，播放的显示效果如下：&lt;/p&gt;&lt;figure&gt;&lt;img alt="V7AMbk3suoQwrSxGiDTckSyrnjh" data-original="https://cdn.sspai.com/editor/u_/ckj0b7db34tdh3ari810" src="https://cdn.sspai.com/editor/u_/ckj0b7db34tdh3ari810"/&gt;&lt;/figure&gt;&lt;p&gt;除此之外还训练过几个用来实时转换音色的模型，说简单点就是 AI 版的变声器。以男声变女声为例，以往的变声器除了需要打开变声功能外，还需要说话人用尖细的音调说话才能达到以假乱真的程度，但是 AI 变声器完全不需要，普通语气讲话即可。目前的 AI 变声器还存在两个不大的缺陷，第一是如果显卡不行的话延迟会比较高；第二是类似鼓掌、敲桌子之类行为发出的非人声也会被转换。游戏里用 AI 变声器开麦说话效果非常炸裂，偶尔玩玩还挺有意思。&lt;/p&gt;&lt;h3&gt;更多应用&lt;/h3&gt;&lt;p&gt;其实这些模型也可以接入我家的智能家居系统 HomeAssistant 里面，但是比较麻烦，因为我不想在 HomeAssistant 的虚拟机里安装过多的依赖，所以如果要接进去的话最好的办法就是封装一个 API 接口的 docker 容器，想想还是算了，等什么时候训练出来一个熟人的音色想整活的时候可以考虑写一个玩玩。&lt;/p&gt;&lt;p&gt;思维如果发散一下，应用场景其实非常丰富，如果稍微懂点编程就能玩出花来。简单点的，根据类似「甲：…… 乙：…… 旁白：……」这样格式的文本，写个脚本自动识别角色匹配不同的语音模型来批量化自制广播剧。复杂点的，搭配 Stable Diffusion 这样的 AI 绘图软件批量制作有声书短视频。难度再高点的话，可以配合 Ren&amp;#x27;Py 这种简单的视觉小说引擎自制一个文字游戏，亦或是将跑团群中的文字跑团游戏可视化为影音游戏的形式留念。&lt;/p&gt;&lt;p&gt;当然，虽然我在这里列举了这么多的应用方式，但是并不建议大家轻易尝试，训练出来自己玩玩就好。如果你真的想&lt;strong&gt;发布分享&lt;/strong&gt;的话，那么建议在行动之前看一下国家今年 7 月份开始公布施行的《&lt;strong&gt;生成式人工智能服务管理暂行办法&lt;/strong&gt;》以及其他的一些相关法律，包括但不限于《中华人民共和国宪法》《刑法》《民法典》《合同法》。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;《民法典》&lt;/p&gt;&lt;p&gt;第一千零一十九条&lt;/p&gt;&lt;p&gt;任何组织或者个人不得以丑化、污损，或者利用信息技术手段伪造等方式侵害他人的肖像权。未经肖像权人同意，不得制作、使用、公开肖像权人的肖像，但是法律另有规定的除外。未经肖像权人同意，肖像作品权利人不得以发表、复制、发行、出租、展览等方式使用或者公开肖像权人的肖像。对自然人声音的保护，参照适用肖像权保护的有关规定。&lt;/p&gt;&lt;p&gt;第一千零二十四条&lt;/p&gt;&lt;p&gt;【名誉权】民事主体享有名誉权。任何组织或者个人不得以侮辱、诽谤等方式侵害他人的名誉权。&lt;/p&gt;&lt;p&gt;第一千零二十七条&lt;/p&gt;&lt;p&gt;【作品侵害名誉权】行为人发表的文学、艺术作品以真人真事或者特定人为描述对象，含有侮辱、诽谤内容，侵害他人名誉权的，受害人有权依法请求该行为人承担民事责任。行为人发表的文学、艺术作品不以特定人为描述对象，仅其中的情节与该特定人的情况相似的，不承担民事责任。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2&gt;语音模型分类&lt;/h2&gt;&lt;p&gt;这里我就不说什么非常专业的名词了，我自己也不是专门做这个的，理解也算不上深刻。就我目前能找到的开源项目而言，主要分为两类。一是文字转语音，类似常见的 TTS 功能；一是语音转语音，就是进行音色上的转换。许多这类开源项目的初衷是希望让自己喜爱的虚拟角色唱自己喜欢的歌，所以一般主要功能都是唱歌，顺带也可以支持正常说话。&lt;/p&gt;&lt;p&gt;文字转语音的模型想要自己训练一般会比较困难，困难的点主要是数据集，因为要实现文字与语音之间的一一对应，数据集制作时不仅需要大量干声素材，还需要对每一条干声素材进行文本标注。虽然标注的过程可以借用别的 AI 模型进行简化，但是一条条地人工校验 AI 标注的结果也是一种折磨。当然，也可以选择不校验，但是最后训练出来的模型质量就无法保证了。&lt;/p&gt;&lt;p&gt;语音转语音的模型则要亲民许多，一般只要保证有足够时长的高质量干声素材即可，我个人主要训练的就是这种模型。想用这种模型实现 TTS 功能也是可以的，就是需要多一步转化。可以先使用微软免费的在线 TTS 服务将文本转换为语音，然后再通过训练出来的音色模型将其转化为目标音色。听上去比较复杂，其实上写个 Python 脚本调用 edge-tts 库即可轻松完成。&lt;/p&gt;&lt;p&gt;单从 TTS 的效果而言，效果比直接自己训练的文本转语音模型还要好。因为微软的 TTS 模型真的很强大，相信大家都在电影解说视频中听到过「这个男人叫小帅」的开场白，这个配音用的就是微软 TTS 服务中的「云希」。虽然现在「云希」各种泛滥，导致大家听到之后都有点厌烦，但不可否认，语音效果确实算是最强的一档。&lt;/p&gt;&lt;h2&gt;开源项目推荐&lt;/h2&gt;&lt;p&gt;AI 语音类的开源项目非常多，这里只推荐两个我自己用下来觉得训练方便、效果显著的。&lt;/p&gt;&lt;h3&gt;so-vits-svc&lt;/h3&gt;&lt;p&gt;&lt;a href="https://github.com/svc-develop-team/so-vits-svc/" target="_blank"&gt;SoftVC VITS Singing Voice Conversion&lt;/a&gt; 是一个音色转换项目，之前网上比较流行的 AI 孙燕姿模型很多都是用这个项目训练出来的。除了唱歌，也可以用在正常说话的语音上，音色还原度以及咬字清晰度都是开源项目中的佼佼者。&lt;/p&gt;&lt;p&gt;唯一不好的地方是因为一些法律原因，之前这个项目删库重建过一次，之后项目组就不再发布官方训练底模了，想找个合适的底模比较麻烦。&lt;/p&gt;&lt;h3&gt;Retrieval-based-Voice-Conversion-WebUI&lt;/h3&gt;&lt;p&gt;&lt;a href="https://github.com/RVC-Project/Retrieval-based-Voice-Conversion-WebUI" target="_blank"&gt;RVC-Project&lt;/a&gt; 项目可以用更少的素材和训练步数达到一个不错的音色还原度，而且实时转换的效率也比较高，如果是想要作为变声器使用的话，更推荐使用这个项目。&lt;/p&gt;&lt;h2&gt;开源模型社区&lt;/h2&gt;&lt;p&gt;大家如果没法自己训练模型但是又想体验的话，其实有一个最简单的办法，就是部署好环境之后直接去开源模型社区下载现成的模型，这里推荐使用 &lt;a href="https://huggingface.co/" target="_blank"&gt;Hugging Face&lt;/a&gt;，基本所有的开源项目都能在这里找到相关模型，有些项目的底模找不到也可以在这里碰碰运气。&lt;/p&gt;&lt;h2&gt;本地训练门槛&lt;/h2&gt;&lt;p&gt;这里讲的是本地训练的门槛，对于租借云端显卡进行训练的方案就不讨论了。&lt;/p&gt;&lt;h3&gt;6 GB 显存的英伟达显卡&lt;/h3&gt;&lt;p&gt;训练大部分 AI 模型都需要用到高显存的 N 卡，语音模型算是里面比较亲民的，最低显存要求不算太高，一般的游戏显卡都能满足。&lt;/p&gt;&lt;h3&gt;充足且清晰的单人音频素材&lt;/h3&gt;&lt;p&gt;这里充足的概念是指符合目标项目中提到的最低音频时长要求，不同的 AI 项目想要达到目标效果所需的素材时长是不同的。相较于音频时长，其实更关键的是音频的&lt;strong&gt;质量&lt;/strong&gt;，低质量的素材最后训练出来的模型也必然不会完美。我这里没有强调必须是干声素材，因为背景音大部分情况下都可以通过人声分离软件进行剔除，后面会有更详细的讲解。&lt;/p&gt;&lt;h3&gt;基础的 Python 编程知识&lt;/h3&gt;&lt;p&gt;并不是说不会 Python 就没法自己训练 AI 模型，毕竟网上有一大堆所谓的整合包，下载解压后一键就可以开始训练。但是没有这部分基础知识，训练过程中碰到问题就很被动。更关键的是，训练出来也无法自如应用到更多的场景。&lt;/p&gt;&lt;p&gt;举个稍微复杂点的例子，让服务器每天爬取当天的天气预报，如果出现下雨或极端天气就自动生成一段提醒文本，然后自动调用语音模型将其转换为音频，最后通过 DLNA 传输的方式让房间中的音箱播报这段音频。这种场景很美好，就是得靠一定编程知识才好搞定。&lt;/p&gt;&lt;h2&gt;语音模型项目本地部署&lt;/h2&gt;&lt;p&gt;我并不想针对单一的 AI 语音项目来出一个具体的教程，如今 AI 发展呈井喷之势，可能过一阵子就会因为一篇新算法的发表而出现更加优秀的训练项目。「授人以鱼不如授人以渔」，所以下面的内容更多的是分享一些解决问题的思路。&lt;/p&gt;&lt;p&gt;这里仅考虑使用 Windows 的情况。当然，如果实在不想折腾，也可以直接去 B 站上搜对应项目的整合包，一般都能找到，开箱即用。&lt;/p&gt;&lt;h3&gt;前期准备&lt;/h3&gt;&lt;p&gt;相比直接安装 Python，其实我个人更推荐使用集成工具 &lt;a href="https://www.anaconda.com/" target="_blank"&gt;Anaconda&lt;/a&gt;。它的优势是方便部署虚拟环境，可以很方便地为每个项目配置单独的运行环境，配置好环境后只需要将整个项目文件打包就可以放在任何其他电脑上运行，自己创建所谓的整合包。&lt;/p&gt;&lt;p&gt;Anaconda 安装起来非常简单，去官网下载最新的安装包，然后按照指引完成安装即可。如果对于安装过程存在疑惑的话，网上随便搜一个教程即可，我就不讲了。因为这些开源项目一般都是发布在 Github，下载太慢可以用 &lt;a href="https://github.com/BeyondDimension/SteamTools" target="_blank"&gt;Watt Toolkit&lt;/a&gt; 试试，或者用 &lt;a href="https://doget.nocsdn.com/#/" target="_blank"&gt;Doget&lt;/a&gt; 对下载链接转换后再下载。也可以在 &lt;a href="https://gitee.com/" target="_blank"&gt;Gitee&lt;/a&gt; 上新建仓库从 Github 上导入。&lt;/p&gt;&lt;h3&gt;项目部署&lt;/h3&gt;&lt;h4&gt;查看文档&lt;/h4&gt;&lt;p&gt;想要部署一个项目，最先要做的就是看一下项目根目录下的 readme.md。这个文件会默认显示在 Github 中该仓库的主页。&lt;/p&gt;&lt;p&gt;主要看哪些东西呢？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;项目实现的功能。确定项目符合自己的需求。&lt;/li&gt;&lt;li&gt;训练模型需要的硬件配置。如果文档中没有特别强调，一般 6 GB 显存的 N 卡也就够用了；如果电脑配置不满足却还是想要尝试，可以使用类似谷歌 Colab、百度飞桨等云计算平台。&lt;/li&gt;&lt;li&gt;支持的 Python 版本。目前开源的 AI 模型基本都是依托于 PyTorch 这一机器学习库编写的，如果文档中没有提及版本问题，可以使用较为稳妥的 3.8 版本。&lt;/li&gt;&lt;li&gt;训练用音频素材的要求。首先是音频格式及其采样率，大部分情况下是单声道 44K 采样率的 WAV 格式文件，虽然项目中可能有重采样的预处理程序，但是最好初始输入的音频就符合项目要求。另一个是音频素材的单个时长及总时长，单个时长一般 3~20 秒都是可以的，最好是控制在 5~15 秒，具体以项目文档为准；总时长个人经验并不是越长越好，正常两个小时左右就能达到不错的效果，部分特化的项目甚至只需要几分钟，不要太长的另一个原因主要是考虑到训练速度，如果素材总大小超过电脑内存上限的话，就无法一次将数据读取到内存中，训练速度会受到硬盘读取速度的限制，GPU 占用率会因为读盘的操作而经常下降。&lt;/li&gt;&lt;li&gt;训练的命令。大项目都会有比较详细的训练步骤介绍。&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;拉取项目&lt;/h4&gt;&lt;p&gt;接着自然是把项目文件拉取到本地，不管是用上面提到的哪种办法，只要能下载到本地即可。&lt;/p&gt;&lt;h4&gt;搭建环境&lt;/h4&gt;&lt;p&gt;进入项目根目录，在此处打开 CMD 窗口，确保 CMD 窗口中显示的路径为当前项目根目录，如果不是就用 cd 命令切换过来。注意这里&lt;strong&gt;一定不要用 PowerShell&lt;/strong&gt;，不然会无法激活下面创建的虚拟环境。&lt;/p&gt;&lt;p&gt;然后使用 Anaconda 在当前目录创建虚拟环境：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;conda create -p .\env python=3.8
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;命令中 Python 的版本可以根据需要自行更改。我比较喜欢指定环境安装位置在项目根目录，方便后期打包备份。如果不准备在其他电脑上运行也可以用 -n 参数创建一个命名环境，这个环境一般会保存在当前电脑用户的文件夹下。&lt;/p&gt;&lt;figure&gt;&lt;img alt="D4zQbuixRoPnsmxTPsFcP9h0nBb" data-original="https://cdn.sspai.com/editor/u_/ckj0b7lb34tditeq6uag" src="https://cdn.sspai.com/editor/u_/ckj0b7lb34tditeq6uag"/&gt;&lt;/figure&gt;&lt;p&gt;创建好 Python 虚拟环境后需要在命令行中激活：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;conda activate .\env
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;激活后命令行前面会有一个小括号包裹的环境路径，一定要确保激活环境后再进行后面的操作。&lt;/p&gt;&lt;figure&gt;&lt;img alt="GTuMbfQ75oQjl0xORzDcQqkMnWZ" data-original="https://cdn.sspai.com/editor/u_/ckj0b7tb34tditeq6ub0" src="https://cdn.sspai.com/editor/u_/ckj0b7tb34tditeq6ub0"/&gt;&lt;/figure&gt;&lt;p&gt;接下来输入下面的命令查看自己电脑的 CUDA 版本：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;nvidia-smi
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img alt="BXuXbC0V1oK497xrxm5cjnRbnwb" data-original="https://cdn.sspai.com/editor/u_/ckj0b7tb34tdh3ari81g" src="https://cdn.sspai.com/editor/u_/ckj0b7tb34tdh3ari81g"/&gt;&lt;/figure&gt;&lt;p&gt;之后登录 PyTorch 的官网，官网上可以直接查看符合自己系统的安装命令，我一般直接选择 Pip 安装方式。在之前的命令窗中输入网页上的安装命令，等待下载安装完成。第一次安装可能会比较慢，后面如果创建别的虚拟环境就可以直接用系统内的缓存，安装速度会快很多。&lt;/p&gt;&lt;figure&gt;&lt;img alt="KK8dbzfk4osdgzx6wcWc2OsbnSf" data-original="https://cdn.sspai.com/editor/u_/ckj0b85b34tdhbcubb8g" src="https://cdn.sspai.com/editor/u_/ckj0b85b34tdhbcubb8g"/&gt;&lt;/figure&gt;&lt;p&gt;这里可以看一下安装命令，不难发现安装了 torch、torchvision、torchaudio 这三个包，把它们的名字记一下，后面可能用到。&lt;/p&gt;&lt;figure&gt;&lt;img alt="NWznb96cOoQWKGxHaSdclue5nbf" data-original="https://cdn.sspai.com/editor/u_/ckj0b8db34tdhbcubb90" src="https://cdn.sspai.com/editor/u_/ckj0b8db34tdhbcubb90"/&gt;&lt;/figure&gt;&lt;p&gt;除了安装 PyTorch 外，想要让项目正常运行，还需要安装 requirements.txt 文件中规定的所以库才行。正常支持 Windows 的项目会有一个额外的 requirements_win.txt 文件，有的话就用这个文件，没有就用 requirements.txt。在安装之前最好先打开这个文件，看看里面的库名是否包含之前安装过的那三个包，如果包含的话就先手动删去，避免重新安装到错误的版本。准备工作完成后运行如下命令：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;pip install -r requirements_win.txt -i https://mirrors.aliyun.com/pypi/simple/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果安装过程不报错那就皆大欢喜，但是报错了也不用慌，大部分都是包的版本问题，解决起来不算难，下面举几个例子作为参考。&lt;/p&gt;&lt;h4&gt;常见错误 1&lt;/h4&gt;&lt;figure&gt;&lt;img alt="PReIbQkmloVHG6xsGSLcKWHPnVh" data-original="https://cdn.sspai.com/editor/u_/ckj0b8lb34tdivk90qug" src="https://cdn.sspai.com/editor/u_/ckj0b8lb34tdivk90qug"/&gt;&lt;/figure&gt;&lt;p&gt;这个错误是因为 gradio 没有符合要求的版本号，解决办法很简单，把 txt 文件中这个包的版本号删去，让包管理器自动寻找最新版本即可。&lt;/p&gt;&lt;figure&gt;&lt;img alt="IPHebeG67oRJKoxJSEicmv4Dny5" data-original="https://cdn.sspai.com/editor/u_/ckj0b8tb34tdhbcubb9g" src="https://cdn.sspai.com/editor/u_/ckj0b8tb34tdhbcubb9g"/&gt;&lt;/figure&gt;&lt;h4&gt;常见错误 2&lt;/h4&gt;&lt;figure&gt;&lt;img alt="TvrMbTupToMM9nxXSRic15Uqnjb" data-original="https://cdn.sspai.com/editor/u_/ckj0b8tb34tdivk90qv0" src="https://cdn.sspai.com/editor/u_/ckj0b8tb34tdivk90qv0"/&gt;&lt;/figure&gt;&lt;p&gt;这个错误是因为多个不同的包对 numpy 版本的要求不同，包管理器无法找到符合所有包需求的 numpy 版本。解决方法其实报的错误信息里已经写了，就是删去这些库的版本号，可以逐个删除尝试，尽可能少的修改 txt 文件。&lt;/p&gt;&lt;h4&gt;常见错误 3&lt;/h4&gt;&lt;figure&gt;&lt;img alt="QcjnbtLHmoAb2IxtZRicQdQTnDe" data-original="https://cdn.sspai.com/editor/u_/ckj0b95b34tdh3ari820" src="https://cdn.sspai.com/editor/u_/ckj0b95b34tdh3ari820"/&gt;&lt;/figure&gt;&lt;p&gt;这个错误发生的原因很多，解决办法也相应比较多，可以按照错误提示中说的，试试看升级 Pip，或者是安装 Rust 编译器。除此之外还有一种解决办法就是限制一下对应包的版本号，比如我碰到的这个问题只需要将 transformers 的版本号限定在 3.4 即可。&lt;/p&gt;&lt;figure&gt;&lt;img alt="GWZ6bH7laokCgoxfCrKcSJnHnzh" data-original="https://cdn.sspai.com/editor/u_/ckj0b9db34tdh3ari82g" src="https://cdn.sspai.com/editor/u_/ckj0b9db34tdh3ari82g"/&gt;&lt;/figure&gt;&lt;p&gt;下面放一张&lt;strong&gt;安装成功&lt;/strong&gt;的截图，希望各位都能一次成功。&lt;/p&gt;&lt;figure&gt;&lt;img alt="Hjyhb0qdnoldmcxRem8cHzMBnSc" data-original="https://cdn.sspai.com/editor/u_/ckj0b9lb34tdh3ari830" src="https://cdn.sspai.com/editor/u_/ckj0b9lb34tdh3ari830"/&gt;&lt;/figure&gt;&lt;h3&gt;运行命令&lt;/h3&gt;&lt;p&gt;之前项目部署那里提到过部分内容，比方说激活虚拟环境的命令：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;conda activate .\env
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;激活环境后就可以按照项目文档中写的训练命令来依次执行了，不过如果是简单的 Python 命令的话也可以不激活环境，直接写出解释器的路径也可以调用，比如：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;.\env\python webUI.py
效果等同于
conda activate .\env

python webUI.py
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;有时候部分命令需要频繁使用，每次都打开 CMD 窗口输入命令未免过于麻烦，这时候我们可以编写一个 bat 后缀的文件来简化操作。&lt;/p&gt;&lt;p&gt;创建的方法也很简单，右击新建一个文本文档，也就是 txt 文件，然后将其重命名为 bat 拓展名的文件即可。双击这个文件就会自动在当前路径执行其中的命令。如果是想要修改其中的命令，右击文件后点击编辑即可。下面给出一个通用的模板：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;@echo off
call conda activate .\env
python webUI.pypy

pause
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;简单解释一下各个语句的意思，第一行表示关闭命令行输出，第二行表示激活当前环境，第三行写上任意想要运行的命令，第四行表示运行完成后等待用户确认再关闭命令行窗口。&lt;/p&gt;&lt;h2&gt;数据集准备&lt;/h2&gt;&lt;p&gt;学会上面这一套基本所有的开源 AI 项目就都可以自行部署到本地了，可以说是实现了整合包自由，看上哪个项目直接上手玩就是了。本节则是分享一下我个人处理语音数据集的经验。&lt;/p&gt;&lt;h3&gt;基础知识&lt;/h3&gt;&lt;p&gt;整理数据集之前，请&lt;strong&gt;务必先搞清楚&lt;/strong&gt;自己训练语音模型的&lt;strong&gt;用途&lt;/strong&gt;，明确是唱歌用还是说话用，一个人唱歌和说话时的音色是有很大差别的。&lt;/p&gt;&lt;p&gt;唱歌用数据集的要求一般更高一些，除了时长的要求，音域也需要尽可能全覆盖，说简单点就是高音、低音最好都有，不然最后出来的模型就会在数据集缺失的音域产生哑音或音色失真之类的缺陷。&lt;/p&gt;&lt;p&gt;我本人五音不全，也曾经训练过自己音色的唱歌模型，结果只能说惨不忍睹，事实证明你本来唱不上去的调，换成 AI 还是唱不上去。唱歌数据集如果时长实在有限，可以适当添加一些音色相近的说话素材，但不能太多，质量大部分时候都比数量更重要。说话数据集就简单许多，尽量选用音色相近的正常语音素材即可。&lt;/p&gt;&lt;h3&gt;获取音频素材&lt;/h3&gt;&lt;p&gt;这里其实分几种情况，主要是根据训练模型的&lt;strong&gt;目的&lt;/strong&gt;来划分。&lt;/p&gt;&lt;p&gt;第一种是只想要一个听着舒服的音色来进行 TTS 文本转语音，第二种是想先随便找点素材练练手看看效果。这两种需求最简单的素材获取方式就是去类似喜马拉雅、蜻蜓 FM 的音频网站上找一个主播，直接把他所有的音频下载下来，简单处理之后就可以开始训练。&lt;/p&gt;&lt;p&gt;第三种是想要训练自己或朋友的 AI 语音模型，这个有两种常见的处理手法，一种是用 Au 之类的录音软件专门录制干声，一种是使用 Voicemeeter 之类的虚拟声卡软件将平常微信或 QQ 电话的音频录制下来。当然，如果是训练朋友的模型，请务必取得他的同意。如果是想要训练唱歌用的模型，可以安装一些 K 歌类的软件，大多都可以将音频保存下来，平常没事的时候唱几首，时长够了也就可以开始动手训练了。&lt;/p&gt;&lt;p&gt;第四种是想训练某个明星或主播的模型，歌星的话直接用他歌曲的人声部分即可；主播的话麻烦一点，得找直播切片提取出音轨；影视明星更加麻烦，得慢慢找视频素材单独切出角色语音，不是真爱或者闲得蛋疼不推荐尝试。&lt;/p&gt;&lt;h3&gt;处理素材&lt;/h3&gt;&lt;p&gt;这里讲一些常用的素材处理技巧，可以极大地提高处理效率。&lt;/p&gt;&lt;h4&gt;人声分离&lt;/h4&gt;&lt;p&gt;很多素材都会有背景音乐，人工去除难度太大，此时需要借助一些专用软件。我这里只推荐使用 &lt;a href="https://ultimatevocalremover.com/" target="_blank"&gt;UVR5&lt;/a&gt;，目前市面上最强的免费声音分离软件。使用起来也非常简单，直接去官网下载安装好之后打开保持默认，勾选上 Vocals Only 选项，点击开始转换即可。&lt;/p&gt;&lt;figure&gt;&lt;img alt="URI9bKEwJo4LGUxoRt6cQdgVnyc" data-original="https://cdn.sspai.com/editor/u_/ckj0b9tb34tdh3ari83g" src="https://cdn.sspai.com/editor/u_/ckj0b9tb34tdh3ari83g"/&gt;&lt;/figure&gt;&lt;p&gt;Vocals Only 选项就是只输出人声音轨，不输出伴奏音轨。图中的这套配置可以轻松去除纯音乐的背景音，不过如果 BGM 是带有人声的歌曲就无能为力了，歌曲中的人声也会被保留。我本人对这个软件也没啥深入的研究，更多需求大家自行研究一下。&lt;/p&gt;&lt;h4&gt;文件重命名&lt;/h4&gt;&lt;p&gt;这个步骤非常关键，主要是很多项目都不支持中文文件名，所以素材在切片之前最好先重命名一下。文件数量少的话手工改一下问题不大，数量太多的话就比较头疼了。目前市面上批量重命名的工具不少，大家各显神通即可。我本人比较习惯用 Python 脚本，这里简单分享一个，大家会用就用。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import glob
import os

if __name__ == &amp;#x27;__main__&amp;#x27;:
    index = 1
    for file in glob.glob(&amp;quot;*.wav&amp;quot;):
        os.rename(file, &amp;quot;{:04d}.wav&amp;quot;.format(index))

        index += 1
&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;批量切除部分片段&lt;/h4&gt;&lt;p&gt;有时候一些音频会有一个统一时长的开场白或结束语，手动切除就会很麻烦，这里同样给出一个 Python 脚本。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import glob
import os

from pydub import AudioSegment


def cut_one(input, output):
    audio = AudioSegment.from_file(input, format=&amp;quot;mp3&amp;quot;)
    # 切除开头 8 秒
    audio = audio[8000:]
    audio.export(output, format=&amp;quot;mp3&amp;quot;)


if __name__ == &amp;#x27;__main__&amp;#x27;:
    for file in glob.glob(&amp;quot;*.mp3&amp;quot;):
        out = os.path.join(&amp;quot;cutted&amp;quot;, os.path.split(file)[-1])

        cut_one(file, out)
&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;合并短音频&lt;/h4&gt;&lt;p&gt;这个需求比较少见——比如有时候会用到一些游戏的角色语音来作为训练素材，但是这些素材可能单条都只有几秒钟时间，不太符合训练切片的时长要求。这时候可以使用 Au 这样的图形化软件手动拼接，也可以借用脚本，同样给出一个示例。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import glob

from pydub import AudioSegment


if __name__ == &amp;#x27;__main__&amp;#x27;:
    index = 1
    for file in glob.glob(&amp;quot;dirname/*.ogg&amp;quot;):
        if index == 1:
            audio = AudioSegment.from_ogg(file)
        else:
            audio += AudioSegment.from_ogg(file)
        print(index)
        index += 1

    audio.export(&amp;quot;merged.wav&amp;quot;, format=&amp;quot;wav&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;音量统一&lt;/h4&gt;&lt;p&gt;很多项目会有内置的脚本进行音量处理，如果没有就只能自己动手了，因为这个步骤是&lt;strong&gt;必不可少&lt;/strong&gt;的，不然最终训练出来的模型也会出现类似的问题。想要达到最好的效果肯定是使用 Au 这样的专业软件进行调整，但是如果怕麻烦的话也可以使用脚本解决。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import glob
import os

from pydub import AudioSegment

if __name__ == &amp;#x27;__main__&amp;#x27;:
    # 统一化的音量大小，单位 dB
    target_db = -10
    os.makedirs(&amp;quot;normalized&amp;quot;, exist_ok=True)
    for file in glob.glob(&amp;quot;dirpath/*.wav&amp;quot;):
        basename = os.path.basename(file)
        audio = AudioSegment.from_file(file)
        current_db = audio.dBFS
        db_diff = target_db - current_db
        normalized_audio = audio + db_diff
        normalized_audio.export(
            os.path.join(&amp;quot;normalized&amp;quot;, basename),
            format=&amp;quot;wav&amp;quot;

        )
&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;批量切片&lt;/h4&gt;&lt;p&gt;切片是准备数据集必不可少的步骤，大部分项目对单条音频的时长都有限制，大多为 5~15 秒，手工切是肯定不可能的，毕竟几千条能把人累死，目前用的最多的是 &lt;a href="https://github.com/flutydeer/audio-slicer" target="_blank"&gt;audio-slicer&lt;/a&gt;，有带图形化界面的版本，使用的时候保持默认设置即可。&lt;/p&gt;&lt;figure&gt;&lt;img alt="VjaobjlnKo9txYxfYwbcH4J0nfd" data-original="https://cdn.sspai.com/editor/u_/ckj0b9tb34tdivk90qvg" src="https://cdn.sspai.com/editor/u_/ckj0b9tb34tdivk90qvg"/&gt;&lt;/figure&gt;&lt;h4&gt;删去过长过短音频&lt;/h4&gt;&lt;p&gt;这个操作非常简单，为了处理过程的完整性简单提一下。将切片好的文件夹属性设置为常规文件，然后根据数据大小排序，依照顺序删去过长或过短的音频即可。&lt;/p&gt;&lt;h4&gt;需要标注文本的音频&lt;/h4&gt;&lt;p&gt;之前提过，训练文本转语音模型需要对音频进行文本标注。因为不同的项目对文本的标注格式会有些许差别，仔细看项目文档就是了，大部分项目会给出标注建议和相关工具，依照指示操作即可。&lt;/p&gt;&lt;h2&gt;训练进度查看&lt;/h2&gt;&lt;p&gt;对于很多新手朋友来说，训练模型时最大的疑惑可能就是怎么样算是训练完成了？如何判定训练进度是一件非常重要的事，不然闷头训练很容易浪费时间。要知道，&lt;strong&gt;模型并不是训练的时间越长效果越好&lt;/strong&gt;。训练步数过多很有可能出现过拟合的情况，纸面参数好看结果却完全不如低步数时的效果。&lt;/p&gt;&lt;p&gt;目前大部分模型的训练代码中都会添加 tensorboard 的相关支持，借由 tensorboard 我们就可以在训练的过程中实时跟踪关键训练参数。判断一个项目是否支持 tensorboard 很简单，直接看之前搭建环境时提到的 requirements.txt 文件即可，里面如果有这个包的名称就是支持的。&lt;/p&gt;&lt;p&gt;怎么打开参数面板也很简单，首先找到模型训练时保存 checkpoints 和日志的文件夹，一般就叫 logs，在里面找到带有 &lt;strong&gt;events&lt;/strong&gt; 打头文件的文件夹，这里要注意，这种文件只有在开始训练模型并在命令行产生输出后才会生成。&lt;/p&gt;&lt;figure&gt;&lt;img alt="R9gzb99BTogiCjxcnMFcqT94n5g" data-original="https://cdn.sspai.com/editor/u_/ckj0ba5b34tdhbcubba0" src="https://cdn.sspai.com/editor/u_/ckj0ba5b34tdhbcubba0"/&gt;&lt;/figure&gt;&lt;p&gt;找到后记下其所在文件夹的路径，无论是绝对路径还是相对路径皆可，然后再开一个命令行窗口激活虚拟环境后输入下面的命令：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;tensorboard --logdir dirname
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;命令中的 dirname 自行替换，如果出现如下输出则代表运行成功：&lt;/p&gt;&lt;figure&gt;&lt;img alt="MmotbwDCdo5DZ4xhuOCcq1cjnCD" data-original="https://cdn.sspai.com/editor/u_/ckj0badb34tdh3ari840" src="https://cdn.sspai.com/editor/u_/ckj0badb34tdh3ari840"/&gt;&lt;/figure&gt;&lt;p&gt;打开命令行中的本地链接后就可以看到监测面板：&lt;/p&gt;&lt;figure&gt;&lt;img alt="HFTrbJhzXoaMAPxy9GUciLEbn7c" data-original="https://cdn.sspai.com/editor/u_/ckj0balb34tdhbcubbag" src="https://cdn.sspai.com/editor/u_/ckj0balb34tdhbcubbag"/&gt;&lt;/figure&gt;&lt;p&gt;里面的数据根据不同的项目会有差别，有的详细，有的可能只有 loss 这一部分。看不懂没有关系，会看曲线就行。其实大部分情况只看一张 loss 的图就够用了，有些叫 total，有些叫 reference loss，简单理解就是总偏差，一般这张图的曲线趋于平稳之后就可以结束训练了。&lt;/p&gt;&lt;p&gt;训练结束后就是纯主观的听音环节了，如果面板上有 AUDIO 选项卡的话可以进入其中试听不同步数下的转换效果，框定一个大致的步数范围，然后可以挑选几个听下来不错的模型，找一些音频素材让其实际转换一下，再细品一下到底把哪个模型文件作为最终成品。很多时候并不是步数最高的模型效果最好，我就碰到过一个好玩的例子，特地训练了一个烟嗓的女声模型，结果训练到后面把烟嗓给训练没了，反倒是步数少的模型更加原汁原味。&lt;/p&gt;&lt;h2&gt;训练参数设置&lt;/h2&gt;&lt;p&gt;最后再提两个训练的小技巧，如果你的硬盘空间足够大的话，建议把训练参数中保留的 checkpoints 数量调大一点，像我一般直接调成 100，这样挂一晚上之后所有的记录点模型都在，不会出现训练过头导致真正效果好的模型被删除而只能从头再来的折磨。另一个技巧就是如果参数中支持将训练数据一次性全部加载到内存中的话，在内存容量足够的情况下请务必开启这一功能，可以大大提高训练速度。&lt;/p&gt;&lt;figure&gt;&lt;img alt="LGy6bu90VoZ99DxNNzfcjFesnXc" data-original="https://cdn.sspai.com/editor/u_/ckj0balb34tdh3ari84g" src="https://cdn.sspai.com/editor/u_/ckj0balb34tdh3ari84g"/&gt;&lt;/figure&gt;&lt;p&gt;还有一个注意点，如果不是特殊需求的话，最好训练单人模型，因为单人模型后期进行音色融合的话更加简单灵活。我自己现在常用的就是两个音色融合之后的模型。&lt;/p&gt;&lt;h2&gt;批量转换脚本&lt;/h2&gt;&lt;p&gt;我本人现在用的是 so-vits-svc-4.1-Stable，最开始的个人应用中提到的批量转换脚本如下，放在项目根目录就可以运行。因为是临时写的，也没有仔细优化过，代码写的比较乱，看不懂就只改最前面几个大写的参数。实在不会用就算了，用项目自带的网页工具手动转换也一样。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import asyncio
import edge_tts
import glob
import librosa
import numpy as np
import os
import re
import soundfile

from inference import infer_tool
from inference.infer_tool import Svc

# 微软 TTS 参数
# 音色，云希虽然是男声，但是说话节奏是最好的，不建议修改
VOICE = &amp;quot;zh-CN-YunxiNeural&amp;quot;
# 说话速率，根据喜好来
RATE = &amp;quot;-20%&amp;quot;
# 音量增强，根据喜好来
VOLUME = &amp;quot;+50%&amp;quot;

# 模型参数
# 模型文件路径
MODEL = &amp;quot;trained/female_RuiQian/female_RuiQian.pth&amp;quot;
# 模型对应配置文件路径
CONFIG = &amp;quot;trained/female_RuiQian/config.json&amp;quot;
# 说话人名称
SPEAKER = &amp;quot;female_RuiQian&amp;quot;


async def generate_one(filepath) -&amp;gt; None:
    # 读取 txt 文件内容
    with open(filepath, &amp;quot;r&amp;quot;, encoding=&amp;quot;utf-8&amp;quot;) as f:
        text = f.read().replace(&amp;quot;　&amp;quot;, &amp;quot;&amp;quot;).replace(&amp;quot; &amp;quot;, &amp;quot;&amp;quot;).replace(&amp;quot;\n&amp;quot;, &amp;quot;&amp;quot;).replace(&amp;quot;\t&amp;quot;, &amp;quot;&amp;quot;).replace(&amp;quot;\a&amp;quot;, &amp;quot;&amp;quot;)
    # 微软 TTS 生成语音和字幕的保存路径
    base_name = os.path.basename(filepath)
    name = os.path.splitext(base_name)[0]
    media = os.path.join(&amp;quot;results&amp;quot;, &amp;quot;raw_{}.mp3&amp;quot;.format(name))
    subtitle = os.path.join(&amp;quot;results&amp;quot;, &amp;quot;{}.vtt&amp;quot;.format(name))
    # 创建并保存微软 TTS 语音和字幕文件，需要联网，速度较慢
    communicate = edge_tts.Communicate(text=text, voice=VOICE, rate=RATE, volume=VOLUME)
    submaker = edge_tts.SubMaker()
    with open(media, &amp;quot;wb&amp;quot;) as file:
        async for chunk in communicate.stream():
            if chunk[&amp;quot;type&amp;quot;] == &amp;quot;audio&amp;quot;:
                file.write(chunk[&amp;quot;data&amp;quot;])
            elif chunk[&amp;quot;type&amp;quot;] == &amp;quot;WordBoundary&amp;quot;:
                # 向字幕文件中加入标点符号
                chunk_text = chunk[&amp;quot;text&amp;quot;].replace(&amp;quot; &amp;quot;, &amp;quot;&amp;quot;)
                pattern = &amp;quot;^&amp;quot; + chunk_text.replace(&amp;quot;&amp;quot;, &amp;quot;.*?&amp;quot;).rstrip(&amp;quot;.*?&amp;quot;) + r&amp;quot;&amp;quot;&amp;quot;[，。”：；、？）》}】！,.&amp;#x27;&amp;quot;;:?)&amp;gt;}\]]*&amp;quot;&amp;quot;&amp;quot;
                chunk_text = re.match(pattern, text).group()
                print(chunk_text)
                text = text[len(chunk_text):]
                submaker.create_sub((chunk[&amp;quot;offset&amp;quot;], chunk[&amp;quot;duration&amp;quot;]), chunk_text)

    with open(subtitle, &amp;quot;w&amp;quot;, encoding=&amp;quot;utf-8&amp;quot;) as file:
        file.write(submaker.generate_subs())

    # 音频数据预处理，将 TTS 生成的 mp3 文件转为 wav
    target_sr = 44100
    y, sr = librosa.load(media)
    resampled_y = librosa.resample(y, orig_sr=sr, target_sr=target_sr)
    processed_audio = os.path.join(&amp;quot;results&amp;quot;, f&amp;quot;processed_{name}.wav&amp;quot;)
    soundfile.write(processed_audio, resampled_y, target_sr, subtype=&amp;quot;PCM_16&amp;quot;)

    # 加载语音模型
    model = Svc(MODEL,
                CONFIG,
                device=None,
                cluster_model_path=&amp;quot;&amp;quot;,
                nsf_hifigan_enhance=False,
                diffusion_model_path=&amp;quot;&amp;quot;,
                diffusion_config_path=&amp;quot;&amp;quot;,
                shallow_diffusion=False,
                only_diffusion=False,
                spk_mix_enable=False,
                feature_retrieval=&amp;quot;&amp;quot;
                )
    # 模型推理参数
    kwarg = {
        &amp;quot;raw_audio_path&amp;quot;: processed_audio,
        &amp;quot;spk&amp;quot;: SPEAKER,
        &amp;quot;tran&amp;quot;: 0,
        &amp;quot;slice_db&amp;quot;: -40,
        &amp;quot;cluster_infer_ratio&amp;quot;: 0,
        &amp;quot;auto_predict_f0&amp;quot;: True,
        &amp;quot;noice_scale&amp;quot;: 0.4,
        &amp;quot;pad_seconds&amp;quot;: 0.5,
        &amp;quot;clip_seconds&amp;quot;: 0,
        &amp;quot;lg_num&amp;quot;: 0,
        &amp;quot;lgr_num&amp;quot;: 0.75,
        &amp;quot;f0_predictor&amp;quot;: &amp;quot;rmvpe&amp;quot;,
        &amp;quot;enhancer_adaptive_key&amp;quot;: 0,
        &amp;quot;cr_threshold&amp;quot;: 0.05,
        &amp;quot;k_step&amp;quot;: 100,
        &amp;quot;use_spk_mix&amp;quot;: False,
        &amp;quot;second_encoding&amp;quot;: False,
        &amp;quot;loudness_envelope_adjustment&amp;quot;: 1
    }
    # 音色转换推理
    audio = model.slice_inference(**kwarg)
    model.clear_empty()
    res_path = os.path.join(&amp;quot;results&amp;quot;, &amp;quot;{}.wav&amp;quot;.format(name))
    # 保存最终音频
    soundfile.write(res_path, audio, model.target_sample)


async def generate():
    # 提前在根目录创建一个 text 文件夹，把要转换的 txt 文件放在里面
    for file in glob.glob(&amp;quot;text/*.txt&amp;quot;):
        await generate_one(file)


if __name__ == &amp;quot;__main__&amp;quot;:
    loop = asyncio.get_event_loop_policy().get_event_loop()
    try:
        loop.run_until_complete(generate())
    finally:

        loop.close()
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;后记&lt;/h2&gt;&lt;p&gt;目前 AI 发展的势头非常迅猛，说是日新月异也不为过。之前就看到过有人被 AI 工具换脸变声后的视频通话骗取大量财物的新闻，有人可能觉得这样的诈骗成本很高，自己一个普通人不可能碰到，但是事实上，这样的诈骗效果使用目前市面上那些开源的项目就能基本实现。别的不说，单就声音而言，如果你依照文中的内容实际体验过训练过程的话就会知道，克隆一个人的声音并不困难。如果你看了本篇文章但是并不想训练语音模型，也请更加注重自身隐私数据的保护，提高防范意识。&lt;/p&gt;&lt;p&gt;&amp;gt; 下载 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;少数派 2.0 客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，解锁全新阅读体验 📰&lt;/p&gt;&lt;p&gt;&amp;gt; 实用、好用的 &lt;a href="https://sspai.com/mall" target="_blank"&gt;正版软件&lt;/a&gt;，少数派为你呈现 🚀&lt;/p&gt;&lt;/div&gt;</description><author>炜智能</author><guid>https://sspai.com/post/83487</guid><pubDate>Wed, 11 Oct 2023 03:50:50 GMT</pubDate></item><item><title>派早报：PS5 新机型公布、Google 在与 Sonos 的专利纠纷中胜诉等</title><link>https://sspai.com/post/83484</link><description>&lt;div&gt;&lt;h2&gt;你可能错过的新鲜事&lt;/h2&gt;&lt;h3&gt;PS5 新机型公布&lt;/h3&gt;&lt;p&gt;10 月 10 日，索尼宣布为旗下游戏主机 PlayStation 5 推出体积更小、重量更轻、光驱可单独拆卸的新型号。&lt;/p&gt;&lt;figure&gt;&lt;img alt="Iu0KbKiKzofxynxUsjCc3xe2nkd" data-original="https://cdn.sspai.com/editor/u_/ckioabtb34tditeq6td0" src="https://cdn.sspai.com/editor/u_/ckioabtb34tditeq6td0"/&gt;&lt;figcaption&gt;数字版可扩展安装蓝光驱动器&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;与当前国内正在销售的旧型号相比，新款 PS5 体积减少了 30% 以上、重量最多减少了 24%；外观设计方面采用四块独立盖板，其中顶部盖板采用高亮表面、底部盖板则为哑光设计；新的 PS5 数字版还支持扩展安装 PS5 专用的超高清蓝光光盘驱动器，驱动器的单独售价为 79.99 美元；除此之外，索尼还推出了与所有 PS5 型号兼容的新款立式底座，定价 29.99 美元。&lt;/p&gt;&lt;figure&gt;&lt;img alt="AQZBbhbsqosLaExZTJTctcKXnfd" data-original="https://cdn.sspai.com/editor/u_/ckioabtb34tdh3ari7d0" src="https://cdn.sspai.com/editor/u_/ckioabtb34tdh3ari7d0"/&gt;&lt;figcaption&gt;新款水平底座&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img alt="Yc2XbgL1joS5FFxvgKWcBQDMnJv" data-original="https://cdn.sspai.com/editor/u_/ckioac5b34tdh3ari7dg" src="https://cdn.sspai.com/editor/u_/ckioac5b34tdh3ari7dg"/&gt;&lt;figcaption&gt;新款立式底座&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;索尼表示，一旦旧款型号的 PS5 库存售罄，新款 PS5 将成为唯一可用的型号。&lt;a href="https://blog.playstation.com/2023/10/10/new-look-for-ps5-console-this-holiday-season/" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Google 在与 Sonos 的专利纠纷中胜诉&lt;/h3&gt;&lt;p&gt;10 月 9 日，美国加州北区地方法院法官驳回了此前 Sonos 针对 Google 提出的专利诉讼案的判决结果，认定 Google 在其智能设备中使用的技术并不构成对 Sonos 多房间音频控制专利的侵权，早前法院判决的 3250 万美元罚款也将被撤销。&lt;/p&gt;&lt;p&gt;这位法官指出，Sonos 通过将相关专利技术与该公司早期专利「不恰当」关联、刻意推迟相关专利申请长达十余年等方式来获取优势。2022 年 Sonos 胜诉后，美国国际贸易委员会曾就部分中国生产的 Google 硬件设备下达有限进口禁令，Google Pixel 机型中的智能音箱音量调节功能也曾一度因为该诉讼遭到移除。&lt;a href="https://www.reuters.com/legal/litigation/google-wins-reprieve-325-mln-verdict-sonos-patent-fight-2023-10-09/" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;ChatGPT 移动版收入创下新高&lt;/h3&gt;&lt;p&gt;TechCrunch 报道称，2023 年 9 月，ChatGPT 移动版在 iOS、Android 双平台下载量已达 1560 万次，收入 458 万美元。但根据市场情报公司 Appfigures 的数据，ChatGPT 的收入增长速度也已从早期的 30% 左右放缓至 20%。&lt;a href="https://techcrunch.com/2023/10/09/chatgpts-mobile-app-hit-record-4-58m-in-revenue-last-month-but-growth-is-slowing/" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Unity CEO 离职&lt;/h3&gt;&lt;p&gt;在经历此前的收费模式变更风波后，知名游戏引擎开发商 Unity 的 CEO John Riccitiello宣布即日起从公司离职，由前 IBM 总裁 Jim Whitehurst 暂时接任 CEO 一职。&lt;/p&gt;&lt;p&gt;John Riccitiello 此前曾就职于 EA，2013 年加入 Unity 董事会，并于 2014 年下旬出任 CEO。在职期间内推行了从永久授权到订阅制收费模式的转变，同时还将 Unity 引擎推广至了电影制作、建筑、汽车设计等游戏之外的领域。但今年 9 月他主导推行的「Unity 税」政策招致了开发者的强烈不满和抗议，成为了其离职最主要的导火索。&lt;a href="https://www.ign.com.cn/tech/46351/news/unity-ceo-john-riccitiello-ji-ri-qi-chi-zhi-qian-ibm-zong-cai-lin-shi-jie-ren" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;《割绳子 3》将于 10 月 13 日推出&lt;/h3&gt;&lt;p&gt;经典益智游戏新作《割绳子 3》于 10 月 10 日公布最新&lt;a href="https://www.youtube.com/watch?v=_O89I6XQtvU" target="_blank"&gt;预告&lt;/a&gt;，宣布游戏将于 2023 年 10 月 13 日登陆 Apple Arcade，目前游戏已开启预约。&lt;a href="https://www.gcores.com/articles/172033" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;看看就行的小道消息&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;OnLeaks 联合 smartprix 公布了 Google Pixel 8a 的非官方渲染图并公布了部分配置信息。&lt;a href="https://www.smartprix.com/bytes/google-pixel-8a-exclusive-first-look/" target="_blank"&gt;来源&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure&gt;&lt;img alt="YAD1bJlPPoy403xAPc7c7XpQnxe" data-original="https://cdn.sspai.com/editor/u_/ckioacdb34tditeq6tdg" src="https://cdn.sspai.com/editor/u_/ckioacdb34tditeq6tdg"/&gt;&lt;figcaption&gt;图自新闻源&lt;/figcaption&gt;&lt;/figure&gt;&lt;ul&gt;&lt;li&gt;华尔街日报的一份报道指出，自推出以来，微软在 GitHub Copilot 上一直亏损惨重，报道援引一位知情人士的消息称，早前平均每个 GitHub Copilot 用户能让微软每月亏损超过 20 美元，有些用户甚至每月能为微软带来高达 80 美元的成本开销。&lt;a href="https://www.wsj.com/tech/ai/ais-costly-buildup-could-make-early-products-a-hard-sell-bdd29b9f" target="_blank"&gt;来源&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;少数派的近期动态&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;国庆去了哪儿，留下了哪些回忆？用一张照片为夏天的尾巴做个「总结」！&lt;a href="https://s.weibo.com/weibo?q=%23%E8%BF%99%E4%B8%AA%E5%A4%8F%E5%A4%A9%E6%88%91%E5%9C%A8%E8%BF%99%23" target="_blank"&gt;#这个夏天我在这#&lt;/a&gt; 照片征集活动仍在进行，每周都有「出行礼包」送出。&lt;a href="https://weibo.com/u/1914010467" target="_blank"&gt;&lt;strong&gt;微博参与&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;《iOS 蓝皮书》已开启年度更新，内容适配 iOS 17，首发加入少数派会员。年度会员可&lt;a href="https://sspai.com/series/277" target="_blank"&gt;&lt;strong&gt;直接畅读&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;不能说走就走，但想去哪儿就去哪儿总是可以的！规划、路线、必备好物、心得经验、踩雷避坑……分享你的自驾游故事和心得。&lt;a href="https://sspai.com/bullet/1695717562" target="_blank"&gt;&lt;strong&gt;参与讨论&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;你可能错过的好文章&lt;/h2&gt;&lt;p&gt;&amp;gt; 关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，解锁全新阅读体验 📰&lt;/p&gt;&lt;p&gt;&amp;gt; 实用、好用的 &lt;a href="https://sspai.com/mall" target="_blank"&gt;正版软件&lt;/a&gt;，少数派为你呈现 🚀&lt;/p&gt;&lt;/div&gt;</description><author>少数派编辑部</author><guid>https://sspai.com/post/83484</guid><pubDate>Wed, 11 Oct 2023 00:00:00 GMT</pubDate></item><item><title>社区速递 015 | 自驾游、智能推窗器和博客搭建</title><link>https://sspai.com/post/83475</link><description>&lt;div&gt;&lt;p&gt;除了首页时间流和侧栏的精选展位，少数派 Matrix 社区还有很多优秀内容因条件所限无法得到有效曝光，因此我们决定重启 Matrix 周报，并在此基础上添加更多社区内容、作者投稿新玩意以及社区产品动态呈现给大家。&lt;/p&gt;&lt;p&gt;希望这份「社区速递」能帮你发现更多有趣的内容分享。如果你有任何栏目内容或首页改版建议，也欢迎在评论区留言反馈。&lt;/p&gt;&lt;hr/&gt;&lt;h2&gt;本周精选&lt;/h2&gt;&lt;h3&gt;工具分享&lt;/h3&gt;&lt;p&gt;在《&lt;a href="https://sspai.com/post/83249" target="_blank"&gt;打电脑，也要保持好坐姿(顶瓜瓜现已支持 MacOS)&lt;/a&gt;》中，&lt;strong&gt;中年程序猿汪二&lt;/strong&gt; 分享了他去年发布的坐姿提醒 App -《顶瓜瓜》，该应用使用iPhone/iPad的TrueDepth深感相机来检测用户的头部位置，以提醒坐姿。文章介绍了应用的新颖功能，如使用 AirPods 运动传感器来检测坐姿。此外，文章还提到了随着 macOS Sonoma（14.0）的发布，顶瓜瓜已经支持macOS 14，并介绍了其在macOS上的状态栏工具功能。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/10/ed4299c492db07ed8ff9dc16c4e23c47.gif" src="https://cdn.sspai.com/2023/10/10/ed4299c492db07ed8ff9dc16c4e23c47.gif"/&gt;&lt;/figure&gt;&lt;p&gt;在《&lt;a href="https://sspai.com/post/83316" target="_blank"&gt;每年都在抢iPhone，有没有新的打开方式？-「AS备货追踪」&lt;/a&gt;》里，&lt;strong&gt;水里的碳酸钙&lt;/strong&gt; 介绍了抢购 iPhone 的种种热度和问题，并提供了一个备货追踪的方法，以帮助读者更早获得新品。如果你是苹果粉丝或者计划购买 iPhone 的用户，不妨一读。&lt;/p&gt;&lt;p&gt;在《&lt;a href="https://sspai.com/post/83245" target="_blank"&gt;MyerList 新增自定义模板功能：创造独特的「实时活动」样式&lt;/a&gt;》一文中，&lt;strong&gt;JuniperPhoton&lt;/strong&gt; 分享了 MyerList 近期的更新，包括了新增的自定义模板功能。这个功能允许用户创造独特的「实时活动」样式的提醒事项，灵感来自 iOS 16 和 iPhone 14 Pro 系列的功能。JuniperPhoton 解释了为什么这个功能对用户有价值，以及如何使用这个功能来提高提醒事项的个性化。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/09/27/1ef60b3978bae49fdcb4afc23cb3aca5.png" src="https://cdn.sspai.com/2023/09/27/1ef60b3978bae49fdcb4afc23cb3aca5.png"/&gt;&lt;/figure&gt;&lt;p&gt;在《&lt;a href="https://sspai.com/post/83238" target="_blank"&gt;在 2023 年，你应该试试这样搭建博客&lt;/a&gt;》里，&lt;strong&gt;Alecyrus&lt;/strong&gt; 向我们介绍了博客搭建的新选择，《THORN》，一款个人写作和建站工具。他还指出近年来新工具如 Notion 和 Framer 的兴起为个人博客搭建提供了更多可能性，但 THORN 提供了另一种选择。THORN 具备可视化管理、现代化框架、自定义域名、站点搜索、站点导出、站点分析等功能，为用户提供了灵活多样的建站方式。&lt;/p&gt;&lt;p&gt;在《&lt;a href="https://sspai.com/post/83002" target="_blank"&gt;我用 7 天时间做了一个APP，《画历》帮你把艺术装进日子里&lt;/a&gt;》中，&lt;strong&gt;每天写代码的MC&lt;/strong&gt; 分享了他在短短 7 天内开发的 App《画历》。作者被一篇文章中美丽的电子日历吸引，尽管具备挑战性的技术要求，但作者和他的妻子决定自己制作一个类似的日历应用。他们在发现大都会博物馆的免费高清藏品图片后，开始了产品开发。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/09/17/article/6d062a185a62edf56aac3847ce037373" src="https://cdn.sspai.com/2023/09/17/article/6d062a185a62edf56aac3847ce037373"/&gt;&lt;/figure&gt;&lt;h3&gt;经验与思考&lt;/h3&gt;&lt;p&gt;在《&lt;a href="https://sspai.com/post/83193" target="_blank"&gt;Windows Copilot：操作系统层面的 AI 助手？》&lt;/a&gt;一文中，&lt;strong&gt;张子豪John&lt;/strong&gt; 探讨了微软发布的最新操作系统更新以及其中的 AI 功能。文章介绍了 Windows 11 的多项更新，尤其是 Windows Copilot 和 AI 功能的应用。微软似乎不断将人工智能引入其产品，为用户带来更便捷的体验。如果你关心最新的操作系统发展和人工智能应用，这篇文章值得一读。&lt;/p&gt;&lt;p&gt;在《&lt;a href="https://sspai.com/post/83231" target="_blank"&gt;学海无涯但不用苦做舟：打造我的学习能力与通路系统&lt;/a&gt;》中，&lt;strong&gt;EricYoung&lt;/strong&gt; 分享了他如何在工作繁忙的同时，建立了一套学习能力与信息流的系统，还讨论了为什么学习对每个人都很重要，以及如何在不浪费时间的情况下高效学习。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/09/26/3d46ae807dc839cd5e91a3d34ea6ce2c.jpg" src="https://cdn.sspai.com/2023/09/26/3d46ae807dc839cd5e91a3d34ea6ce2c.jpg"/&gt;&lt;/figure&gt;&lt;h3&gt;多彩生活&lt;/h3&gt;&lt;p&gt;在《&lt;a href="https://sspai.com/post/83362" target="_blank"&gt;后大厂时代：写在离职半年整这一天&lt;/a&gt;》中，&lt;strong&gt;后厂女工小王&lt;/strong&gt; 分享了她在工作八年、大厂七年、前司六年的经历，特别是她离职半年来的感悟。文章涵盖了她的成功和失败经验，以及对工作、生活平衡以及职场 PUA 的思考。她坚持强调工作与生活的区别，呼吁年轻人努力工作，将时间投入到创造更好的东西中。文章以幽默、实用的语气探讨了职场生活，适合各类职场人士阅读。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/04/a7229f884b9f3adecaa93c0b5733c611.jpg" src="https://cdn.sspai.com/2023/10/04/a7229f884b9f3adecaa93c0b5733c611.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;在《&lt;a href="https://sspai.com/post/82671" target="_blank"&gt;野孩子指北 ：贵州秋季徒步线路测评（上）&lt;/a&gt;》里，&lt;strong&gt;爱斯基摩虹&lt;/strong&gt; 带领我们探索了贵州秋季徒步线路的美妙之处。文章介绍了云雾山、千坎菁、摆桑营盘等多个徒步线路，每一条线路都有独特的风景和挑战。作者通过生动的语言和详细的描述，带领读者感受了置身巍峨峡谷中的壮丽，探索了秋季山林的神秘。这篇文章不仅是一次徒步线路的测评，更是一次自然之旅的精彩分享。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/09/12/1b843939c6be1d844708758d59e530d7.jpg" src="https://cdn.sspai.com/2023/09/12/1b843939c6be1d844708758d59e530d7.jpg"/&gt;&lt;/figure&gt;&lt;h3&gt;社区摘要&lt;/h3&gt;&lt;h2&gt;一派热议&lt;/h2&gt;&lt;p&gt;在上期第 123 期一派讨论《&lt;a href="https://sspai.com/bullet/1695717562" target="_blank"&gt;自驾游探秘心得：路上的精彩冒险与美食发现&lt;/a&gt;》中，共有 83 名派友热情参与，十分感谢！&lt;/p&gt;&lt;p&gt;&lt;strong&gt;KElee01 &lt;/strong&gt;(+37) 五一去川西，因为从马尔康到炉霍的 317 国道堵车，天黑了提前住在半路上，第二天早上出发上 227 国道，结果一路上猴子特别多，还好前一天没有冒险摸黑继续走。&lt;/p&gt;&lt;p&gt;这只猴子停在路中间差点撞上，结果完全不怕人，在车上带着开了好一段路。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/09/26/23c67044bc931de1e87875ed66e4ffa7.jpeg" src="https://cdn.sspai.com/2023/09/26/23c67044bc931de1e87875ed66e4ffa7.jpeg"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;kyzyaa &lt;/strong&gt;(+17) 聊一下去年的一趟旅途。7 天时间，武汉电车自驾大理丽江香格里拉。&lt;/p&gt;&lt;p&gt;在武汉从事室内设计工作，暑期属于我们的淡季了，身边的朋友也老是说怎么买电车，跑不远（尤其是品 xx 人生）。正好没去过祖国的西边，于是和老婆拎包就跑。对于我们来说，这路上的困难也就几个。&lt;/p&gt;&lt;p&gt;2000 公里高速，为了赶路必须夜宿服务区。&lt;/p&gt;&lt;p&gt;这次也算是探索到了电车的使用边界，当时正直 8 月，沿途服务区露宿的大多油车，开窗户。。。蚊子居多，尤其是路过贵州，电车关窗空调开着后排放平直接躺。&lt;/p&gt;&lt;p&gt;这趟旅途除了大理到贵州路段的充电站有且只有一个（在当时，还是 30kw 功率）。错过这个要么下高速去陌生小县城，要么等救援（蔚来奶妈车），不过这些点在今年的这个时候应该没问题了&lt;/p&gt;&lt;p&gt;全程辅助驾驶，一天干 1200+km 这在燃油车的年代无法想象。。。。我上台车最长也就一天 600km 就想吐了。辅助驾驶对于缓解驾驶疲劳无疑是降维打击。&lt;/p&gt;&lt;p&gt;今年十一，准备武汉自驾青甘环线～&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/09/26/3906e0e0291976f4baacbc1ed411cd4f.jpeg" src="https://cdn.sspai.com/2023/09/26/3906e0e0291976f4baacbc1ed411cd4f.jpeg"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;7pm &lt;/strong&gt;(+15) 第一次自驾是东欧环线，当时的男朋友现在的老公在韩国一个月速成国际驾照。取车的时候找了半天怎么开灯，第一天到酒店，倒进停车位倒了半个小时。在雪天开过急弯下坡，也在雾蒙蒙的早晨被高速上别的车逼着开到 120，总之就是，有惊无险。&lt;/p&gt;&lt;p&gt;今年 1 月从深圳沿广西四川开回甘肃，最刺激的是开到一半发现秦岭下暴雪，夜晚八点的服务区，积雪十公分，没有车路过，第一次听到下雪的声音，听到所谓的万籁俱寂。&lt;/p&gt;&lt;p&gt;前阵子开了北疆环线，路直车少，风景看到最后也没有审美疲劳，因为真的每个区域的美太不一样了。&lt;/p&gt;&lt;p&gt;如果只是为了快速到达另一个地方，那高铁和飞机都是更好的选择。自驾的好处就是，一路上，狭小的车厢里，我和他可以畅所欲言，唱荒腔走板的歌，看意料之外的风景。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;一只索狗 &lt;/strong&gt;(+5) 今年十一在新西兰进行了自驾，可以说是开车生涯的最大挑战，第一次海外驾驶 + 右驾，着实给我的压力不少。&lt;/p&gt;&lt;p&gt;实际开下来的感受是新西兰对于道路路权的遵守，会让整体的通行体验非常好，驾驶员会执行严格的让行制度，包括转弯让直行、右转让左转等等，遇到 Give Way、Stop 等路牌是一定要停的，这些会让你在拥有路权的道路行驶过程中十分通畅。&lt;/p&gt;&lt;p&gt;另外就是道路建设，新西兰的高速公路既没有严格意义上出入口也没有收费站。超车需要在超车区或确保安全的情况下借道进行，由于路上车也少，开起来十分的简单轻松。&lt;/p&gt;&lt;p&gt;当然我觉得这两点对于国内没啥借鉴意义，很多情况下让行是应该的，但过于死板的路口让行通行效率反而有所降低，因为我们车多人多，一直让行你会永远过不去。另外高速单车道对于新西兰 80% 的情况是够用的，但遇到前方有卡车、慢车，需要借道超车的情况是真的有点危险。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/10/08/49fa4b63f458e92cc29bf4e8961b59e5.jpg" src="https://cdn.sspai.com/2023/10/08/49fa4b63f458e92cc29bf4e8961b59e5.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;Tlyer &lt;/strong&gt;(+4) 十一带着一家老小自驾了一趟湘西。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;车辆：租的大众探歌&lt;/li&gt;&lt;li&gt;路线：长沙→韶山→怀化→芷江→凤凰→吉首→茶峒→天门山镇→常德→岳阳→长沙&lt;/li&gt;&lt;li&gt;景点线：橘子洲→MZX 故居→抗日战争受降纪念馆→凤凰古镇→乾州古镇→茶峒古镇→天门洞→桃花源→岳阳楼&lt;/li&gt;&lt;li&gt;美食线：文和友→芷江炒鸭、米豆腐→炸糕→角角鱼（一锅吃三省）→擂茶宴→擂辣椒皮蛋、臭豆腐、茶颜悦色&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;出发的初衷源于对茶峒向往，想去看看沈从文先生笔下的边城。我本对假期出游这种事情非常抵触，人多严重影响体验。但随着娃年纪渐大，上学期间请假出去外这种事，我也不太敢尝试了。&lt;/p&gt;&lt;p&gt;因为怕人多，所以最终选择了自驾，选择了避开热门景区。&lt;/p&gt;&lt;p&gt;行程前半段，红色爱国主义教育路线。&lt;/p&gt;&lt;p&gt;行程后半段，文学素养培养路线。&lt;/p&gt;&lt;p&gt;出行心得：&lt;/p&gt;&lt;p&gt;1、关注当地高警的公众号，查阅官方发布的节假日交通预测。提前了解容易拥堵的路段。&lt;/p&gt;&lt;p&gt;2、自备行车记录仪，有视频有真相。&lt;/p&gt;&lt;p&gt;3、订完酒店后到出行前，可以再刷一下酒店的放假，有的时候反而会降价几十块。&lt;/p&gt;&lt;p&gt;4、不要钱的景点，人比较少。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/10/07/avatar/100e81f663035ea23936b99276992a03.jpeg" src="https://cdn.sspai.com/2023/10/07/avatar/100e81f663035ea23936b99276992a03.jpeg"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;interbossliu &lt;/strong&gt;(+3) 刚从甘南环线总计 8 天，总行程 4380 公里左右，虽然临时取消了几个点，总体顺利完成！&lt;/p&gt;&lt;ul&gt;&lt;li&gt;2023 年 9 月 22 日武汉 - 西安 770 公里&lt;/li&gt;&lt;li&gt;​2023 年 9 月 23 日西安 - 麦积山石窟 - 岷县 626 公里&lt;/li&gt;&lt;li&gt;​2023 年 9 月 24 日岷县 - 扎古录 - 洛克之路 - 扎尕那 237 公里&lt;/li&gt;&lt;li&gt;​2023 年 9 月 25 日扎尕那 - 小独库公路 - 漫泽塘湿地 - 阿坝 360 公里&lt;/li&gt;&lt;li&gt;​2023 年 9 月 26 日阿坝 - 莲宝业泽 - 玛曲 341 公里&lt;/li&gt;&lt;li&gt;​2023 年 9 月 27 日玛曲 - 郎木寺 - 郭莽湿地观景台 - 合作 232 公里&lt;/li&gt;&lt;li&gt;​2023 年 9 月 28 日合作 - 拉扑楞寺 - 八坊十三巷 - 中山桥 - 兰州 278 公里&lt;/li&gt;&lt;li&gt;​2023 年 9 月 29 日兰州 - 甘肃省博物馆 - 汉中 671 公里&lt;/li&gt;&lt;li&gt;​2023 年 9 月 30 日汉中 - 古汉台 - 武汉 865 公里&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;开始运气不算好，每天都是下雨洛克之路 3000 以上什么都看不见，以下还是很漂亮。最推荐还是小独库跟漫泽塘湿地，本来是没计划去漫则塘结果从小独库出来早了正好看到介绍漫泽塘正好在线路上又免费就去了，结果是意外的好看搞的家里人后面都懒得去美仁大草原了。麦积山石窟如果顺路也是推荐去下的，不同于之前去的龙门，整体在山上而且保存的相对好许多颜色都还在，值得一看。另外莲宝叶则也是推荐去的，不同于一路的草原风光，一座 4520 米的石头山还是让人感受到了不一样的风情。&lt;/p&gt;&lt;p&gt;这一路本来是为了进藏做个适应看看，所以只带了基本的装备冲衣服，加绒裤。为了高反预备了不少可乐、糖果补充，另外买了 4 瓶氧气瓶结果家里人都还好没有明显的高反没用上，最后还是回来的路上无聊吸了一瓶。&lt;/p&gt;&lt;p&gt;因为家里人吃不惯面食，一路上晚餐吃的最舒服的在阿坝的紫营川菜馆，最合胃口。&lt;/p&gt;&lt;p&gt;本次行程的兰州存粹是为了吃牛肉面特地绕去的，朋友推荐的吾穆勒是真的好吃。以后找机会直接飞过去在吃下。本来还想在兰州吃尕马子烤肉结果逛了中山桥时间比较晚了就去吃了正宁路的有奴思，味道也还可以个人觉得还不错。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;蝉心 &lt;/strong&gt;(+2) 最远是北京到敦煌，去的时候走山西陕西，回的时候走内蒙，对旅游点不是很满意，最喜欢的还是途中宁夏、甘肃、内蒙的风光，很舒适。&lt;/p&gt;&lt;p&gt;平常也很爱自驾到处跑，尤其喜欢内蒙那边，自驾的旅途本身就很有趣，目的地没那么重要。&lt;/p&gt;&lt;p&gt;所以通常建议，如果没什么特别原因，白天尽量不走高速，这样能更多地接触自然风光。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;姜寒 &lt;/strong&gt;(+1) 十一从杭州→石家庄，1200km。28 号当晚出发。&lt;/p&gt;&lt;p&gt;整个行程，就堵在江苏路段上面最久，而且回回都是江苏堵的很严重，好多车辆走应急通道上面发生多起事故，十几公里的路用了 3 个多小时，持续到凌晨一两点终于到一个最近出口，下去走国道才顺利逃离🥲。&lt;/p&gt;&lt;p&gt;另外就是不知道从什么时候起，国内的快车道好像一点不 「快」 了，一路基本上都是通过中间或者右侧车道超车，货车车道反而变得更顺畅。路况好的情况也遇到左侧车道甚至都不足 100 的时速，还很普遍🥲&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/10/10/avatar/e1ee90f4dfd7fee812ae591ea793c081.jpeg" src="https://cdn.sspai.com/2023/10/10/avatar/e1ee90f4dfd7fee812ae591ea793c081.jpeg"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;淡淡碎叶 &lt;/strong&gt;(+1) 我们大沂蒙山区也是超多美景的。随手拍下。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/10/08/748364d576048fa18cf3902c7efffbdd.jpg" src="https://cdn.sspai.com/2023/10/08/748364d576048fa18cf3902c7efffbdd.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;blythe110 &lt;/strong&gt;(+1) 今年国庆算是第一次长途自驾，从重庆走四姑娘山 - 小金 - 丹巴 - 塔公 - 新都桥 - 康定 - 雅安回的一条小环线。开的电车，中途其实只要有规划好充电的位置其实路上不太焦虑。&lt;/p&gt;&lt;p&gt;有个小插曲就是，从丹巴到塔公的路上，由于堵车结果切换导航到了一条小道上，最后开到了亿比措湿地的保护区里面去，用特斯拉走非铺装道路。。。过程很刺激，但是能全程远望草坪和亚拉雪山，感觉行程还是非常值得！&lt;/p&gt;&lt;p&gt;&lt;strong&gt;噼哩啪啦砰 &lt;/strong&gt;(+1) 有一年从北京去坝上草原团建，周五出发一路上都没啥车。快到目的地的时候看到前方高速是条一望无际的大直道，扫了眼地图没有探头。突然好奇心起来了，想看看我的买菜小排量 SUV 能跑多快，一直地板油加速，最后花了好长时间从 199 提到了 200 的时速。&lt;/p&gt;&lt;p&gt;到目的地以后，发现满满一车的虫胶，擦了大半天。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;黑无颜 &lt;/strong&gt;(+0) 国庆从厦门自驾到长沙，去程两天，途经赣州、衡阳，想上衡山结果有雾，返程两天，途经衡阳、瑞金。&lt;/p&gt;&lt;p&gt;湖南江西菜都很好吃，人均也不高才 30-40，辣椒炒肉不错，能吃辣不要错过。&lt;/p&gt;&lt;p&gt;自驾准备了尿袋，但是没大堵车，到服务区都解决了。服务区的商品价格贵品类少，吃的大多难以下咽，这方便还有升级空间，有条件还是自己准备一箱饮水（包括茶饮咖啡）。&lt;/p&gt;&lt;p&gt;自驾最大的收获是，能解锁一些不会特意去的非旅游城市，也能感受当地风土人情，常有计划外的惊喜。&lt;/p&gt;&lt;p&gt;📢：下期的一派讨论是姊妹篇，欢迎来聊：&lt;/p&gt;&lt;h2&gt;作者的新玩意&lt;/h2&gt;&lt;p&gt;为了让作者的投稿尽快与广大读者见面，我们调整了《新玩意》栏目中作者投稿部分的呈现方式和周期，作者投稿的「新玩意」后续会迁移至本 栏目。投稿渠道与奖励方式仍与以往完全一致，详情参见文末。我们相信新鲜火热出炉的分享更能赢得大家的喜爱，也欢迎广大读者朋友们踊跃投稿。&lt;/p&gt;&lt;hr/&gt;&lt;h3&gt;@Fairyex：不用充电不用改造的米家智能推窗器，意外好用&lt;/h3&gt;&lt;p&gt;前几天在用米家的时候不小心看到这个领普刚刚众筹完的智能推窗器，之前就一直很想弄个方便的推窗器，目前市面上的推窗器大部分都要对自己的窗改装打孔，安装要求高也麻烦。而且大部分推窗器功率不小，要么要接线，要么几个月就得充一次电。&lt;/p&gt;&lt;p&gt;然后领普这个推窗器优点全都满足我的要求：直接贴上就能用，太阳能补电不用充电，支持米家。于是直接进行一个单的下，今天刚好到手。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/03/35d6f3be7fd5f21f5be287ba57d330b8.jpg" src="https://cdn.sspai.com/2023/10/03/35d6f3be7fd5f21f5be287ba57d330b8.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;到手这玩意真的比想象中大，还好没有到夸张的大小，本地大概就是 500ML 保温杯大小，倒是挺有分量的，加上金属的支架有些坠手。它的原理就是本体后面会有一个粗糙的滚轮，通过滚动和外窗的摩擦力来带动内窗。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/03/83dabda41250a2a33ae7d740e86660ed.png" src="https://cdn.sspai.com/2023/10/03/83dabda41250a2a33ae7d740e86660ed.png"/&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/03/06e49a5c76fd079df9ed85b22547c94e.png" src="https://cdn.sspai.com/2023/10/03/06e49a5c76fd079df9ed85b22547c94e.png"/&gt;&lt;/figure&gt;&lt;p&gt;开箱之后用来安装的乱七八糟的配件非常多，除了本体和胶水，不仅有用来固定窗的窗挡和限位器，还有大部分情况都用不上的螺丝刀螺丝，扳手，Type-C 充电线，甚至还有一块擦镜布？和一瓶润滑油？定位磁铁和胶塞也有（用来封住 Type-C 口），真的完全不用自己准备任何东西就可以装了。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/03/c41cc1495523577b71eb25a9ec79a9f8.jpg" src="https://cdn.sspai.com/2023/10/03/c41cc1495523577b71eb25a9ec79a9f8.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;br/&gt;安装过程原本以为挺复杂的，没想到还挺简单。直接连着盒子里面的塑料支架拿出来，在侧面涂上附赠的强力胶，接着按在内窗的窗框上两分钟就可以。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/03/8368a5cfd2363c599068fc127978e52f.jpg" src="https://cdn.sspai.com/2023/10/03/8368a5cfd2363c599068fc127978e52f.jpg"/&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/03/1efd11945fa313242ae898e59c1a310e.jpg" src="https://cdn.sspai.com/2023/10/03/1efd11945fa313242ae898e59c1a310e.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;然后就是在关闭和打开到最大的窗户位置上贴上定位磁铁，连接米家就可以了。整个安装过程包括胶水风干也就 10 分钟左右。&lt;/p&gt;&lt;p&gt;至于使用效果，原本我以为靠摩擦力和小轮子来推窗效果应该比不上正经的电动窗，没想到实际效果还可以，速度和力道都挺大的，和正经的电动窗没啥区别。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/03/83f8cb54fcf9cb1cfa2c4968628c486b.gif" src="https://cdn.sspai.com/2023/10/03/83f8cb54fcf9cb1cfa2c4968628c486b.gif"/&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/03/68e33113e4162057192a334544041b8e.gif" src="https://cdn.sspai.com/2023/10/03/68e33113e4162057192a334544041b8e.gif"/&gt;&lt;/figure&gt;&lt;p&gt;而且最重要的是它支持米家，功能还不少，智能场景也没有问题，这让它的可玩性大大提高。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/10/03/c7954fc1890588debae5290a45b3ef20.png" src="https://cdn.sspai.com/2023/10/03/c7954fc1890588debae5290a45b3ef20.png"/&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/10/03/0f976a73f075b655634309eef0da80e3.png" src="https://cdn.sspai.com/2023/10/03/0f976a73f075b655634309eef0da80e3.png"/&gt;&lt;/figure&gt;&lt;p&gt;手动助力，安防模式，末端减速这些都有。我说一下我自己能用上的场景：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;不用开窗帘就可以开关窗，而且随时可以查看窗户的开关状态，不用担心忘记窗户有没有关。&lt;/li&gt;&lt;li&gt;定时通风换气，之前有考虑做新风，不过我这里空气质量太好了（AQI 常年小于 50），没必要而且没有新风的流量能比得上开窗，现在开着空调保持房间隔音的情况下也可以设定每一小时开窗 50% 换气 5 分钟再关窗。&lt;/li&gt;&lt;li&gt;下雨自动关窗，这个应该是最常见的需求了，配合雨水传感器可以做到下雨自动关窗。&lt;/li&gt;&lt;li&gt;配合智能场景实现开空调自动关窗，关空调自动开窗，也可以实现出门自动关窗（门窗传感器）。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;还有很多场景可以探索，目前我觉得唯一的缺点就是价格还是太贵（我 298 入手的），感觉合适的价格应该是 150 元左右，这个价格我会给家里所有门窗全部整上这个，本来灯光全自动，现在又可以加上门窗全自动，智能家居的爽谁用谁知道。&lt;/p&gt;&lt;h3&gt;@麦克威22：卡西欧F-91W&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;购入渠道：淘宝&lt;/li&gt;&lt;li&gt;购入价格：81 元&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;现如今手表早已不是单纯的看时间工具，而是服装配饰、玩具和健康工具的集合体，尤其是智能手表大量普及过后。本着逃离信息轰炸的初衷、骨子里的直男基因和偶然间刷到的视频推荐，我开始关注卡西欧的电子表，一类功能写死在电路板里但实用的表。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/09/26/e80d60999fab5e1467e3788604a608e4.png" src="https://cdn.sspai.com/2023/09/26/e80d60999fab5e1467e3788604a608e4.png"/&gt;&lt;figcaption&gt;Unboxing&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;在我购买 F-91W 之前，我有一块 Apple Watch S3、一块天梭卡森。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/08/a7e9b64fe25c0ccb070777b47eda6cd3.png" src="https://cdn.sspai.com/2023/10/08/a7e9b64fe25c0ccb070777b47eda6cd3.png"/&gt;&lt;/figure&gt;&lt;p&gt;刚毕业时本着对移动设备的狂热和保持运动的美好遐想，搞了块苹果 S3，但几年后它就变成了我眼中的信息轰炸，白天工作各类消息已经够多了好吗，更何况有些功能在我这变成玩玩可以，但大多数时候只是心理安慰，比如站立提醒。造型上 S3 与工作正装也不太搭。&lt;/p&gt;&lt;p&gt;于是又入了一块天梭的卡森臻我，一款搭载 Powermatic 80 机芯的机械表，这个没有信息轰炸了，也跟工作服搭了，但是它重，而且不抗造，磕碰一下很心疼。最重要的是，摩托车那种绵密的震动对于机械表来说是温水煮青蛙似的伤害，时间一久难免影响精度。虽然搭配正装了，但是日常出街又显得太过正式。&lt;/p&gt;&lt;p&gt;本着折腾了几年回归实用的精神，我将目光投向了卡西欧。在听闻了奥巴马和某组织的同款表故事后，我入手了功能简单够用、便宜耐造的 F-91W。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/bfb3ec3f6104393b525419715426fc04.png" src="https://cdn.sspai.com/2023/10/07/bfb3ec3f6104393b525419715426fc04.png"/&gt;&lt;/figure&gt;&lt;p&gt;这块表诞生自 1989 年，设计师是 &lt;i&gt;&lt;strong&gt;ryusuke moriai&lt;/strong&gt;&lt;/i&gt;。那个年代正是电子美学文化的黄金年代，以至于现在看起来这块表的设计充满了年代感。但与其说是复古，不如说是真古，因为这块表的设计 30 年没有变过。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/883f2a2ef43de576e326e653dd0916ae.HEIC" src="https://cdn.sspai.com/2023/10/07/883f2a2ef43de576e326e653dd0916ae.HEIC"/&gt;&lt;figcaption&gt;键盘是杜伽 Fusion，也是相同的设计语言&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;根据官网介绍，这块表的主要功能如下：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;自动日历&lt;/li&gt;&lt;li&gt;12/24 小时切换&lt;/li&gt;&lt;li&gt;每日闹钟（蜂鸣器）&lt;/li&gt;&lt;li&gt;整点报时（蜂鸣器）&lt;/li&gt;&lt;li&gt;秒表（1/100 秒，60 分钟计，带分段）&lt;/li&gt;&lt;li&gt;生活防水&lt;/li&gt;&lt;li&gt;每月误差正负 30 秒&lt;/li&gt;&lt;li&gt;7 年电池续航（松下 CR2016）&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;功能上基本涵盖了工具手表的大部分常用功能，我在使用过程中，基本也只用整点报时。续航方面，比同为卡西欧旗下的 G-Shock 系列强太多，按照网上其他用户的说法，这块表的表带自然损坏时这块表都还在走。由于结构简单，质量可靠，价格低廉（国内一般售价在 80 元人民币上下，日本官网含税售价为 2200 日元），另外网上也有不少针对这块表的改装作品。&lt;/p&gt;&lt;p&gt;防水方面，虽然没有 G-Shock 系列那样强悍的 200 米防水，但日常生活中佩戴手表的场景里遇水丝毫不用担心，诸如淋雨、冲洗、轻度泡水都不会造成损坏。&lt;/p&gt;&lt;p&gt;误差方面，从上次对时到现在，大约 22 天，目前的误差为正 8 秒，比标称的 30 秒优秀。&lt;/p&gt;&lt;p&gt;旅行的时候戴它显然是优于机械表的，轻便抗造，功能实用，不用过多的担心突发状况导致的遗失带来令人心痛的财产损失。&lt;/p&gt;&lt;p&gt;不足就是，它的背光着实太弱，只有在电影院等几乎全黑的场景下，才会发挥它的价值，屏幕右侧收到的光照很有限。另外在尺寸方面，过于轻薄和小巧，使得起在男性手腕上显得有一些袖珍。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/eadf621fc6a788509db90ca2f9228ce8.png" src="https://cdn.sspai.com/2023/10/07/eadf621fc6a788509db90ca2f9228ce8.png"/&gt;&lt;figcaption&gt;黄绿色 led 侧灯，光线很弱（地库有路灯场景）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;这是我的第一块数显电子表，之前从未拥有过类似的表款。在习惯了触屏操控的智能设备的操作逻辑后，开始上手操作 1989 年的电子手表，肯定是不习惯的。整块表只有三个按钮，如果需要实现不同的 mode，需要反复搭配按压操作。刚拿到表对时的时候，着实学习了一番说明书，后续的设置闹钟和整点报时同样如此。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/704caec9565aa4e7ac6706dcbaab3a27.png" src="https://cdn.sspai.com/2023/10/07/704caec9565aa4e7ac6706dcbaab3a27.png"/&gt;&lt;figcaption&gt;操作说明来自卡西欧官方网站 https://www.casio.com/jp/&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;简单来说，实现不同的功能需要全部三个按键搭配使用，习惯过后，操作还是很轻松的。mode 键实现模式切换：时间校准、秒表、闹钟及蜂鸣器设置，light 键和 24 小时切换键负责具体的参数选择和数值设置。&lt;/p&gt;&lt;p&gt;由于这块表上市时间早、年产量巨大（据说是 300 万块）且价格便宜，仿制品层出不穷，不过根据网上能查到的防伪辨别要点，几乎能肯定我手中这块是正品。主要辨别点如下：后盖的刻字偏小，且清晰，凹凸程度均匀、长按 24 小时切换键屏幕会出现 「CASIo」 字样、包装的标签纸印刷和型号代码（593）与正品一致、液晶屏幕偏转角度可视性高，清晰，没有过多的重影，再就是价格是正常的。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/08/9702273ed6513a4259df7fadd110cd25.png" src="https://cdn.sspai.com/2023/10/08/9702273ed6513a4259df7fadd110cd25.png"/&gt;&lt;/figure&gt;&lt;h4&gt;优点：&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;树脂材质 21g，轻便&lt;/li&gt;&lt;li&gt;树脂表带柔软，佩戴舒适&lt;/li&gt;&lt;li&gt;功能简单不冗余，走时准&lt;/li&gt;&lt;li&gt;续航时间长，长到若干年后会忘记它的存在&lt;/li&gt;&lt;li&gt;造型好看，数字复古&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;缺点：&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;背光弱&lt;/li&gt;&lt;li&gt;尺寸偏小，男性用户佩戴稍显不协调&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;@王百顺BS：海备思Switch便携底座采集卡&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;入手价格：189 RMB&lt;/li&gt;&lt;li&gt;入手渠道：淘宝旗舰店&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Switch 自带的视频录制功能只能录制 30 秒的视频还是压缩过的，想要录更长的视频就不得不用采集卡了，挑来挑去看了不少评测视频，最后选了海备思这款，正如名字那样既是采集卡又是便携底座。&lt;br/&gt;先上图看看：&lt;/p&gt;&lt;p&gt;有经典红蓝和黑白两种颜色外观，我喜欢简单一点的买了黑白款，和 Switch 的颜色接近。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/09/26/9c52716c6af9598e5287b9b45dcfe555.JPG" src="https://cdn.sspai.com/2023/09/26/9c52716c6af9598e5287b9b45dcfe555.JPG"/&gt;&lt;figcaption&gt;就长这样&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;这是作为便携底座的插线状态，一条 HDMI 线一条充电线。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/09/26/7ed7dda36494e992d86843fb68c31ec5.JPG" src="https://cdn.sspai.com/2023/09/26/7ed7dda36494e992d86843fb68c31ec5.JPG"/&gt;&lt;figcaption&gt;作为便携底座&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;这是作为采集卡加环出需要插的线，一条 HDMI 线，一条电源线，一条 Type-C 线采集视频。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/09/26/f4511a78b9a7bf2f9c032d13167d11d4.JPG" src="https://cdn.sspai.com/2023/09/26/f4511a78b9a7bf2f9c032d13167d11d4.JPG"/&gt;&lt;figcaption&gt;采集视频&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;附带一张官方的接口说明。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/09/26/b94b73649b0902c67212a012a6d0b41a.jpg" src="https://cdn.sspai.com/2023/09/26/b94b73649b0902c67212a012a6d0b41a.jpg"/&gt;&lt;figcaption&gt;图片来自产品详情&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;除了颜色还有 USB2.0 和 USB3.0 两个版本的区分，我买的是 USB3.0 的，用的 MS2130 芯片（这个我不懂，据说是在低价设备里表现不错），最高支持 1080p/60Hz 采集，参数不高但这已经是 Switch 的上限了（电子垃圾什么时候迭代啊）。&lt;/p&gt;&lt;p&gt;需要注意的是：想采集 1080p/60Hz 的视频需要采集线是 USB3.0 协议，包装盒里附带的 A to C 的线是 USB2.0 的，只能支持到 1080p/50Hz，USB3.0 版本的产品附带 USB2.0 的线这点不理解。&lt;/p&gt;&lt;p&gt;我用的是 OBS 录制视频，录制的视频还是比较满意的，采集预览和环出的显示器对比延迟还是可以感知的，尤其是场景切换时一边是黑了的加载界面另一边还是之前的游戏场景，非常明显。所以想把笔记本作为 Switch 便携屏的用户我不是很建议用，我不知道 Switch 上有什么软件是可以显示毫秒级计时的所以没办法测试具体的延迟时间。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/09/26/5b311a9351723e3af23be7acccd32b7f.PNG" src="https://cdn.sspai.com/2023/09/26/5b311a9351723e3af23be7acccd32b7f.PNG"/&gt;&lt;figcaption&gt;OBS 界面&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;除了在 Switch 上使用还支持带视频输出的 c 口设备，比如 Steam Deck、iPad Pro、手机等，或者作为 MacBook 的扩展无来连接显示器（这种场景最高支持到 4k，刷新率我倒是没测过，毕竟我的显示器才 4k60Hz），看到过把 Switch 连接到车机屏幕上使用的，很有趣但我不理解，可能乐在折腾的过程吧。&lt;/p&gt;&lt;p&gt;还可以作为一个 USB3.0 的扩展坞使用，具体是 USB3.0 的哪个版本就不清楚了，我除了一个 8t 的桌面硬盘需要用到 USBA，其他的都可以换成 Type-C 的线，就不折腾了。&lt;/p&gt;&lt;p&gt;作为二合一产品或者便携底座来看，我对它还是挺满意的，如果单纯作为采集卡来说，我还是比较喜欢 HDMI 作为视频输入那种，毕竟还是 Switch 插在底座上其他部分藏起来看着整洁，像这种在桌子上各种线一大滩实在说不上优雅。&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;如果你也想分享「新玩意」🔉：&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;获取 Matrix 社区写作权限并签署 &lt;a href="https://sspai.com/post/72089" target="_blank"&gt;Matrix 共创计划&lt;/a&gt;；&lt;/li&gt;&lt;li&gt;在少数派独家发布一篇文章，在标题中标注「新玩意」前缀；&lt;/li&gt;&lt;li&gt;用至少 800 字介绍产品，并配上 2-3 张产品的实拍图片；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;在网站个人信息中补充支付宝账号；&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;成功入选本栏目还可以得到 108 元的「剁手红包」🧧。如果你有兴趣参与，就赶紧来稿吧！&lt;/p&gt;&lt;p&gt;&amp;gt; 下载少数派 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，了解更多的新玩意 🆒&lt;/p&gt;&lt;p&gt;&amp;gt; 特惠、好用的硬件产品，尽在 &lt;a href="https://shop549593764.taobao.com/?spm=a230r.7195193.1997079397.2.2ddc7e0bPqKQHc" target="_blank"&gt;少数派 sspai 官方店铺 &lt;/a&gt;🛒&lt;/p&gt;&lt;/div&gt;</description><author>Matrix机器人</author><guid>https://sspai.com/post/83475</guid><pubDate>Tue, 10 Oct 2023 09:10:44 GMT</pubDate></item><item><title>Matrix Talk | 作为 iOS 用户，我为什么换到 / 新增 Android 设备？</title><link>https://sspai.com/post/83445</link><description>&lt;div&gt;&lt;p&gt;无论是少数派编辑还是作者们，都持有不止一个平台的设备，相信不少派友也曾在 iOS 和 Android 间反复横跳过，甚至购入了 Windows Phone、MeeGo……既然不同的平台都各有优劣，作为成年人的我们不如干脆选择「我全都要」。除了专业和工作上的需求，还有什么原因让你成为跨平台用户？&lt;/p&gt;&lt;p&gt;我们找了 4 位少数派作者，请他们来分享一下成为跨平台用户的契机，以及弥补了哪些单平台没能提供的需求与体验。&lt;/p&gt;&lt;h2&gt;@王百顺BS：iPhone 很好但不完美&lt;/h2&gt;&lt;p&gt;新增一台 Android 手机主要是为了弥补 iPhone 的功能不足，iPhone 的优点不赘述了，直接说一说哪些功能或者特性是 iPhone 不能满足我的需求的。&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;信号&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;这是长久存在的问题，一直有「iPhone + 联通 = 失踪的说法」，很不幸我就是联通用户，至于为什么不换运营商，29 元不限流量的套餐狠狠的捏住了我的软肋。在地铁、电梯这类场景看着别人刷短视频，我在微信发文字都费劲，换成 Android 之后情况好多的，微信也不转圈圈了。&lt;/p&gt;&lt;p&gt;除了移动数据，Wi-Fi 体验也不怎么好，在我家卫生间和楼层电梯门口这两个位置，Wi-Fi 总处于似断似连的状态，结果就是 Wi-Fi 和数据流量都用不了，想上网就得手动断开 Wi-Fi。以至于说我家 Wi-Fi 有没有死角取决于你用的是 Android 还是 iPhone。&lt;/p&gt;&lt;p&gt;同一 Wi-Fi 下六台设备，我用电脑下载文件时，只有果子会掉线，你行不行啊……（你只是谦让不是抢不过，堪比当代孔融）&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/09/article/d51373c0293aa2fbb24c80a2206f5fce" src="https://cdn.sspai.com/2023/10/09/article/d51373c0293aa2fbb24c80a2206f5fce"/&gt;&lt;/figure&gt;&lt;h3&gt;&lt;strong&gt;骚扰拦截&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;虽然我已经在运营商提供的骚扰拦截中设置了部分号码段的拦截，但最近总会有 11 位的看起来是普通用户的来点，热情的问你：游戏测试了解一下、小额贷款有需要吗、我是某某 app 的来送福利。手机静音又会误伤外卖、快递这样的正常电话，Android 的来电标识就很有用了，会提示你来电是快递外卖还是骚扰诈骗。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/09/article/8131a1aa7229ed662d3a3fee7e2cd9e6" src="https://cdn.sspai.com/2023/10/09/article/8131a1aa7229ed662d3a3fee7e2cd9e6"/&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/09/article/1df9df71717acdcb44a0e53950d96a9c" src="https://cdn.sspai.com/2023/10/09/article/1df9df71717acdcb44a0e53950d96a9c"/&gt;&lt;/figure&gt;&lt;p&gt;对比可以看的出来在通话记录方面 iPhone 只有号码和归属地，在 MIUI 上除了这两项还有一个「标记」来显示来电的类型，比如：广告推销、快递外卖、客服热线。像是运营商、银行这种官方来电，即使你没有存进通讯录也会被标记出来，一定程度上能避免被钓鱼。&lt;/p&gt;&lt;p&gt;短信方面 iPhone 用熊猫吃短信可以一定程度上让短信干净一些，但比起 MIUI 还是不太够看的，具体来说 iPhone 就是显示号码和内容，而 MIUI 则是自动备注发信人的头像、名称，同样可以在一定程度上避免被李鬼钓鱼。垃圾短信则是直接收进另一侧的推广栏眼不见心不烦。短信验证码则是收到一条会话里，可以一键清理很贴心。&lt;/p&gt;&lt;p&gt;这些功能并非 MIUI 独有的，国产安卓机基本都提供了类似的功能。&lt;/p&gt;&lt;h3&gt;通话录音&lt;/h3&gt;&lt;p&gt;除了防止纠纷扯皮之外，忘记了或者没听清通话的内容也可以通过录音回溯一下。国产安卓机通常都提供了接通自动录音的功能，甚至有的还提供了微信通话录音的功能，而 iPhone 这边，你举着 Apple Watch 录音的姿势很迷人。&lt;/p&gt;&lt;h3&gt;微信&lt;/h3&gt;&lt;p&gt;除了消息转圈圈之外，很大的问题就是语音视频的通知不及时，经常等对方挂断了才会给你弹个通知告诉你：刚才有人给你打视频通话你没接到。 CallKit 是个很好的功能，但指望它重新上线还不如买台 Android 更实在。&lt;/p&gt;&lt;h3&gt;安装非应用商店 app&lt;/h3&gt;&lt;p&gt;这个各有利弊吧，App Store 的 app 明显要比 Android 端的更安分，但偶尔需要一些未能上架或曾经上架又被下架的 app 是很难的事情（换新机也不可避免的会丢失一些 app），这点在 Android 上只需要找到 apk 安装包就能解决。&lt;/p&gt;&lt;p&gt;既然鱼和熊掌不能出现在一道菜里，那不妨点一道鱼一道熊掌，就是开销和占位置大了些。&lt;/p&gt;&lt;h2&gt;@Voyager_1：生态壁垒下，iOS 和 Android 各自优劣明显&lt;/h2&gt;&lt;p&gt;当你拥有一台 iPhone，并不意味着 iOS 的系统和应用生态被你独占。&lt;/p&gt;&lt;p&gt;被很多人忽视的点在于，iOS 的很多应用其实具备 Android 版本，功能相差无几，某些应用甚至在 Android 上呈现了「不应该存在」的优势——比如我爱使用的 Apple Music。&lt;/p&gt;&lt;h3&gt;在 Android 上用 Apple Music&lt;/h3&gt;&lt;p&gt;在 iOS 框架下，Apple Music 整个应用技术栈应该还有非原生开发的代码存在，所以 AM 用户应该很容易感受到其加载的卡顿。急着想放一首自己爱听的歌分享给别人，却非要先关一下 AM 再打开以重新加载的时候，心情总是跌宕起伏。如果这时候，你有一台 Android 设备，比如我手上这台 Pixel 3，就可以丝滑地打开并播放 AM 音乐，甚至比 iOS 更快。这其实也归功于 AM 技术栈的杂糅，让其在 Android 上有了访问速度和稳定性的优势。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/09/0b227c1301ade2fd059c61564feb8649.png" src="https://cdn.sspai.com/2023/10/09/0b227c1301ade2fd059c61564feb8649.png"/&gt;&lt;figcaption&gt;Pixel 3 几乎秒加载（左）iPhone 第一次播放总是加载（右）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Android AM 上还有一个杀手级的功能——睡眠定时，在听歌助眠时非常好用。这个功能，你甚至在 iOS AM 上遍寻不得，只能通过其他奇技淫巧实现。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/10/09/9f2339c8ddb3178afe8803afb09a2276.png" src="https://cdn.sspai.com/2023/10/09/9f2339c8ddb3178afe8803afb09a2276.png"/&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/10/09/c0f68b6b1236a6db6b69cb80951048e8.png" src="https://cdn.sspai.com/2023/10/09/c0f68b6b1236a6db6b69cb80951048e8.png"/&gt;&lt;/figure&gt;&lt;p&gt;如果你仔细留意，会发现 Android AM 上的菜单更加清晰易读，指向清晰，再配合 iOS 这辈子都不会支持的侧滑返回手势，AM 相比臃肿的国产音乐 App 的劣势得以补足，此刻用户体验达到巅峰。&lt;/p&gt;&lt;p&gt;当然，Android AM 并非十项全能，比如缺乏空间音频等 iOS 独占功能的支持就是一项弱势。对于交互细节没那么较真的用户而言，更细腻动态的歌词显示效果，无法第一时间尝鲜的动态封面其实都可以忽略，毕竟音频质量、均衡器调节这些常规功能两个平台几乎一致。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/09/06633fe4d9309a2f7a8f1848d380b41b.png" src="https://cdn.sspai.com/2023/10/09/06633fe4d9309a2f7a8f1848d380b41b.png"/&gt;&lt;/figure&gt;&lt;p&gt;更快捷的首播和切歌响应，手势返回交互，在 AM 相对混乱的菜单里找到播放列表并播放想要的那首歌，Android 版本 Apple Music 提供了 iOS AM 卡顿时足够好用的替代品。我会在午睡时分，或者想要用音箱播放音乐时，随手抄起 Pixel 投送播放，此时的 Pixel 我称之为卡拉 OK 切歌神器。&lt;/p&gt;&lt;h3&gt;Android 上的满血 Google 相册&lt;/h3&gt;&lt;p&gt;另一项我非常喜欢的功能，是 Android 上的满血 Google 相册。&lt;/p&gt;&lt;p&gt;出于对相册回忆保存的小心翼翼，我同时将照片云端在了 iCloud 和 Google 相册上（总不至于两家同时停服）。一方面是享受到了双重保护的心理安慰，另一方面 Google 相册的分享、回忆和编辑照片功能更让人心动。&lt;/p&gt;&lt;p&gt;比如分享功能，当需要将一张照片给朋友临时观看或将一部分公开照片资料在互联网共享时，稳定的分享功能让人安心。这一点上，Google 相册的服务比 iCloud 稳定很多。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/09/85ac8137f3085709a3d3d10447b63ca5.png" src="https://cdn.sspai.com/2023/10/09/85ac8137f3085709a3d3d10447b63ca5.png"/&gt;&lt;/figure&gt;&lt;p&gt;关于回忆这一块，倒并不是 iOS 的相册做得不好，而是 Google 相册会从另一个角度提供回忆的可能性让人惊喜，算是 iOS 提示不到「那年今日」时的补充。&lt;/p&gt;&lt;p&gt;不实际使用过 Pixel 的用户是无法体会到这个看起来「落后」的设备拍出来的照片竟然如此优秀的感觉，当然这只是使用 Pixel 的一部分理由（如果你常用人像且厌恶锐化一定要试试），更让人欣喜的是 Google 相册的滤镜和再编辑功能。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/09/99ac36003cddd2692cfca3544736f9b1.png" src="https://cdn.sspai.com/2023/10/09/99ac36003cddd2692cfca3544736f9b1.png"/&gt;&lt;/figure&gt;&lt;p&gt;在强大的 AI 和智能的使用引导下，Google 相册会成为一个探索回忆更多可能性的钥匙，你不需要针对性去拍摄想要进行某种后期的照片，只需要用你的相机记录下来，闲下来翻看编辑的时候就会有很多意外收获。比如这里我将过节亲戚会见的照片临时做了擦除，效果仍需调整但却给到照片不一样的可能性，这感觉让人意外舒适。&lt;/p&gt;&lt;p&gt;Google 相册在我这里，某种程度上就是 iOS 相册的第三方应用补充，让人对记录和编辑照片有更多欲望和可能。&lt;/p&gt;&lt;h2&gt;@Clyde：iOS 的通知也太落后了&lt;/h2&gt;&lt;p&gt;从 iPhone SE 到 iPhone 13 mini 再到 iPhone 13 Pro，我曾多次因为喜欢 Moze 记账 app 而试着接受 iOS 生态，但最后往往又因为同样的原因被劝退——通知。&lt;/p&gt;&lt;p&gt;每每点亮屏幕，扑面而来的必定是堆积成山的各种通知。倒不是说不好，毕竟 iOS 的通知推送是三星这样的厂商羡慕都羡慕不来的。iOS 的通知对我来说主要有两个问题。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;其一是难管理&lt;/strong&gt;。我看过同事写的&lt;a href="https://sspai.com/post/75895" target="_blank"&gt;文章&lt;/a&gt;，也请教过身边的果粉朋友，关于 iOS 的通知管理，很多人觉得最有用的方法竟然是「一刀切」，即全部关闭，然后为特定应用开启。在 Android 系统中这个问题从来都不是问题，因为我只需要在不想要的通知出现时对其长按，然后就能有针对性地关掉这条通知及其同类，而不用误伤该应用其他类别的通知，更不会影响其他应用的通知：&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/09/article/493aafb9677ed2a7fafa92004ac30c77" src="https://cdn.sspai.com/2023/10/09/article/493aafb9677ed2a7fafa92004ac30c77"/&gt;&lt;figcaption&gt;即时、灵活，甚至还有该通知对应的分类闪烁提醒&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;第二点则是太封闭。&lt;/strong&gt;对我来说这一点是决定性的。在 iOS 上尝试通过 last.fm 同步 YouTube Music 的听歌记录难如登天。要么使用 Apple Music 客户端，搭配 last.fm 官方客户端手动同步，要么选择 Spotify，事先将其与 last.fm 绑定。&lt;strong&gt;归根结底，last.fm 这类应用在 iOS 平台是没办法直接读取媒体通知、然后获取我们「听了哪些歌」这种信息的&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;这里可能就有果粉朋友出来反驳了：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;你对隐私数据安全一无所知，怎么可能把通知信息开放给非系统应用随便读取？它读你短信验证码了怎么办？！&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;你别急，还记得上面咱提到的通知分类吗？分类的好处其实有很多，比如下图是 &lt;a href="https://sspai.com/post/66715" target="_blank"&gt;Pano Scrobbler&lt;/a&gt; 在 Android 系统中的通知读取权限设置界面：&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/09/article/6470387daa66a82b2c6cfe90378e2e7e" src="https://cdn.sspai.com/2023/10/09/article/6470387daa66a82b2c6cfe90378e2e7e"/&gt;&lt;figcaption&gt;是的你可以控制应用能够读取哪些通知&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;有了能够获取媒体通知的自由，自然也就有了选择听歌方式的自由，不管是 Spotify、Apple Music、Spotify 还是各种本地播放器，只要能通过媒体通知发布播放信息（99% 的媒体应用都会），这些信息就能被 Pano Scrobbler 抓取并同步到 last.fm。这是不是才更像是现代智能设备应该有的体验？&lt;/p&gt;&lt;h2&gt;@ROB1N：为了折腾，为了不折腾&lt;/h2&gt;&lt;p&gt;在我正式成为完全的 iOS 用户前，我曾是多个平台的用户。但是 Android 设备成为我的主力机以前，我是一名 Windows Phone （以下简称 WP）用户。第一次接触 WP 设备还是在家里订阅的壹周刊上看到的广告。从 Nokia Lumia 700 的广告看到后来微软的 WP 广告，算是云见证了 WP 设备的历史。所以在大学后就正式投入到了这个平台。&lt;/p&gt;&lt;p&gt;初上手还是经验与硬件、系统的设计。但是在使用了三个月后，我终于还是忍不住购买了一台 Android 设备作为主力机，WP 设备则退居二线，作为副机使用。首先是移动支付问题，WP 设备上的移动支付几乎等于不可用，无论是扫码还是被扫码都有问题。其次是软件生态，大部分厂商并没有为 WP 系统投入专门的开发团队，更多的是让 Windows Store 的团队将已经投入的 UWP app 略微改动了一下便交给 WP 。我承认 WP 设备的 UI 好看、硬件设计非常有水平，但是在易用性面前，好看的皮囊不值分毫，反而成了喉咙里的一根刺。来到 Anroid 设备后，健康监测、移动支付、app 的易用性都有了长足的进步。终于不会再「这个 app 我的手机好像用不了」的情况了。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/09/25bd943d00362f7139603fe053544803.png" src="https://cdn.sspai.com/2023/10/09/25bd943d00362f7139603fe053544803.png"/&gt;&lt;figcaption&gt;旧手机找不到了，悲，&lt;a href="https://www.thomasmaurer.ch/2015/11/first-impressions-of-the-new-microsoft-lumia-950-xl-microsoft-did-not-compromise/" target="_blank"&gt;图源&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;随后我在 Android 上还发掘了新的乐趣，那就是「刷机」。刷机这件事可太有趣了，想要的模块现在的系统没有？刷！想要的系统组件没有？刷！光是大学几年，我的 Android 设备就经历了 MIUI 、Pixel Experience、Flyme等 UI/OS 。每种不同的系统都有着自己独特的魅力，MIUI 的万能、Flyme 的高颜值、PE 的原生体验，都是我换来换去没法固定在一个系统的原因。&lt;/p&gt;&lt;p&gt;不过在大三时彻底转到 iOS / macOS 平台后，离开了 Android 几年。最近又入手了一台 Android 设备作为副机，发现 Android 真香啊。&lt;/p&gt;&lt;p&gt;用了几天后我发现，我在 iOS 上切换商店区域的动作明显减少。仔细想想发现，这要归结于我多了一台 Android 设备，很多需要切换商店才有的 app 我可以直接在 GooglePlay 上获取。同时，我在 iOS 设备上的娱乐用 app 都转移到了 Android 设备上。无论是观看自媒体视频、刷社交软件，甚至是玩手游，我都是在 Android 设备上完成。而生活相关的支付、聊天、导航等，都交给了主力机 iPhone 。同时，由于系统的特性，Android 设备上的 app 大小普遍要比 iOS 平台的 app 小（微信除外）。所以我能有更多的空间去存储我的照片、文件。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/09/article/7793d2f4b89d47d25f0a8d9089c441da" src="https://cdn.sspai.com/2023/10/09/article/7793d2f4b89d47d25f0a8d9089c441da"/&gt;&lt;/figure&gt;&lt;p&gt;而拥有一台 Android 副机，也极大地方便了我在日常中区分娱乐与日常。当我拿起 iPhone 的时候，我能意识到我现在需要聊天或者需要工作，那我的状态也会随之改变；当我拿起 Android 设备，我知道接下来我需要放松一下，打开流媒体或者刷一下我的社交软件，看看有没有新剧新电影、有没有新的回复或者有朋友 @ 我。简单的设备交换就能够让我进行活动状态的切换。&lt;/p&gt;&lt;p&gt;除开这些 app 上的区别，还有硬件上的补充。iPhone 的摄像头大家都懂，这几年已经被 Android 厂商卷得没边了，也就是今年才上了一颗不错的摄像头。手里的红米 Note11T Pro+，有颗 6400w 像素的摄像头，比我的 iPhone14 要好上不少，能拍远景能拍微距。也是为了这，我将我的 DJI OSMO Mobile 5 和其绑定，有拍摄需求的时候就将他们组好拿出去拍素材。超广角、微距摄像头，搭配稳定器，能够拍出许多 iPhone 做不到的镜头，丰富了我视频的角度。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/09/article/dfc7988f8fa03dd6e5a9e2d16ef972a7" src="https://cdn.sspai.com/2023/10/09/article/dfc7988f8fa03dd6e5a9e2d16ef972a7"/&gt;&lt;/figure&gt;&lt;p&gt;Android 相比 iOS 的另一个比较有优势的地方在于，我可以为 app 单独设置隐私模式，每次打开 app 都需要进行密码或生物识别认证。iOS 上只能在某些 app 内设置，而无法做到从系统上为每一个 app 设置。比如我会为我的浏览器、相册、流媒体等 app 设置每次打开都需要验证指纹，防止别人动我的手机时会点开以上 app 窥探我的生活。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/09/article/5cb54a289a107e1bcd941c3608c391cb" src="https://cdn.sspai.com/2023/10/09/article/5cb54a289a107e1bcd941c3608c391cb"/&gt;&lt;/figure&gt;&lt;p&gt;说来说去，我其实已经没有再去折腾系统这些过去刚接触智能机时的冲动，更多的是为了「不折腾」才同时使用两种设备。用两种设备来区分我的生活，我觉得刚刚好。小朋友才做选择题，作为大人我当然是全都要了。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;🙋：是什么原因让你选择更换设备 or 成为跨平台用户？欢迎在评论区一起分享~&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&amp;gt; 下载少数派 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/link?target=https%3A%2F%2Fwww.xiaohongshu.com%2Fuser%2Fprofile%2F63f5d65d000000001001d8d4" target="_blank"&gt;少数派小红书&lt;/a&gt;，感受精彩数字生活 🍃&lt;/p&gt;&lt;p&gt;&amp;gt; 特惠、好用的硬件产品，尽在 &lt;a href="https://shop549593764.taobao.com/?spm=a230r.7195193.1997079397.2.2ddc7e0bPqKQHc" target="_blank"&gt;少数派 sspai 官方店铺&lt;/a&gt; 🛒&lt;/p&gt;&lt;/div&gt;</description><author>Matrix机器人</author><guid>https://sspai.com/post/83445</guid><pubDate>Tue, 10 Oct 2023 07:00:00 GMT</pubDate></item><item><title>不止 Obsidian，盘点我还在用的 All in One，最长 10 年</title><link>https://sspai.com/post/83315</link><description>&lt;div&gt;&lt;p&gt;&lt;strong&gt;Matrix 首页推荐&lt;/strong&gt; &lt;/p&gt;&lt;p&gt;&lt;a href="https://sspai.com/matrix" target="_blank"&gt;Matrix&lt;/a&gt; 是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。&lt;/p&gt;&lt;p&gt;文章代表作者个人观点，少数派仅对标题和排版略作修改。&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;当一个工具软件具备的功能越多，越符合刚需，对它的依赖性就越强，使用时间就会越长，使用频率也会越高。这次给大家盘点那些我一直在用，而且未来很长一段时间也会使用的软件工具。最久的一款差不多有 10 年，完全没有会被淘汰的迹象。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;为什么需要 All-in-One？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;我是&lt;a href="https://space.bilibili.com/11455098" target="_blank"&gt;《橙猫涉影》&lt;/a&gt;主理人，IT 出身，技术有限，只有 7 年，同时也是新媒体编导。在双重身份的加持下，知识既需要广度也需要深度，既有团队也有个人，事情的繁琐和时间的紧迫让我意识到优化工作流程的重要性。而在这个探索过程中，我会借助很多优秀的软件工具，其所具备的 All-in-One 属性就显得非常重要。&lt;/p&gt;&lt;p&gt;All-in-One 所能解决的问题，归根到底就是要减少「切换」带来的精力消耗，让查找、维护、汇总行为变得简单，化繁为简。&lt;/p&gt;&lt;h2&gt;Obsidian&lt;/h2&gt;&lt;p&gt;这两年我最喜欢的工具，当之无愧是 Obsidian。详细用途可看：&lt;/p&gt;&lt;span&gt; &lt;/span&gt;&lt;p&gt;在使用过程中，我会不断根据自身工作流程对笔记进行调整，这次更多是对一些新用途的补充，主要依赖插件 &lt;a href="https://github.com/Ellpeck/ObsidianCustomFrames" target="_blank"&gt;Custom Frame&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;官方介绍：&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;An Obsidian plugin that turns web apps into panes using iframes with custom styling. Also comes with presets for Google Keep, Todoist and more.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;功能很简单，就是在 Ob 中打开一个自定义网页，而不需要切换到浏览器上打开，我主要用于 Trello、Notion-like、Alist、Grafana、PhotoPrism。&lt;/p&gt;&lt;h3&gt;Custom Frames 用途&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Trello&lt;/strong&gt;：团队协作。&lt;/p&gt;&lt;p&gt;这半年我主要致力于团队的协作问题，视频制作周期以及每个环节的耗时等相关数据都需要采集优化。经过一番探索，Trello 的强大功能和免费使用，让我首先把它纳入到 Custom Frames 插件中，比起 Ob 的 KanBan 插件，Trello 更偏向团队，自带的 Power-Up（插件）和 Automation Button 功能非常强大，可轻松实现时间统计、费用统计、webhook 连通飞书等功能。&lt;/p&gt;&lt;figure&gt;&lt;img alt="image.png" data-original="https://cdn.sspai.com/2023/10/01/article/3163f1701667fe16f5f1f5eb4c0a2d44" src="https://cdn.sspai.com/2023/10/01/article/3163f1701667fe16f5f1f5eb4c0a2d44"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;Alist&lt;/strong&gt;：网盘聚合，方便把我的百度、阿里云对象存储、国外网盘等聚合在一起 。在电脑上安装 Alist 之后，感觉提供的文档配置好 Alist，利用 localhost + 端口的设置，从 Ob 中打开。&lt;/p&gt;&lt;figure&gt;&lt;img alt="Custom Frames中Alist的设置" data-original="https://cdn.sspai.com/2023/10/01/article/705094cefd71f720f51fe71d9844f843" src="https://cdn.sspai.com/2023/10/01/article/705094cefd71f720f51fe71d9844f843"/&gt;&lt;/figure&gt;&lt;p&gt;Alist 我早几个月已经安装完成，但使用率极低，确实很懒得去打开。但将它嵌入 Ob 之后，反而开始经常从中找素材，方便快捷。比较麻烦的是，需要每一台电脑都安装 Alist，因为它依赖本地安装，而不像 Trello 依赖网页。&lt;/p&gt;&lt;figure&gt;&lt;img alt="Custom Frames打开Alist" data-original="https://cdn.sspai.com/2023/10/01/article/b1b6473c27726f63fce1b4821e441807" src="https://cdn.sspai.com/2023/10/01/article/b1b6473c27726f63fce1b4821e441807"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;Notion/Flowus&lt;/strong&gt;：Notion 及 Notion-like，最早是使用 Notion 作为团队协作，但服务器在国外真的太麻烦，每个月总有几次抽风，非常影响体验。利用其 API 功能，更多用于存储数据备份数据，方便查看。Flowus 更多用于我的摄影付费课程定向开放，比起百度网盘，其 share to web 方便统一管理相关资料。国内网络访问 Flowus 也比 Notion 好太多，但功能确实也弱。&lt;/p&gt;&lt;figure&gt;&lt;img alt="image.png" data-original="https://cdn.sspai.com/2023/10/01/article/94b4ccdad8ab96f9153eb80ba76cedb3" src="https://cdn.sspai.com/2023/10/01/article/94b4ccdad8ab96f9153eb80ba76cedb3"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;Grafana&lt;/strong&gt;：部署在 VPS 上，作为团队内部的数字大屏，嵌入 Ob 中查看数据更方便，它还涉及数据库的操作，就不展开述说，对动手能力要求高。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/01/article/0b60357c13694364c7732649dc598425" src="https://cdn.sspai.com/2023/10/01/article/0b60357c13694364c7732649dc598425"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;PhotoPrism&lt;/strong&gt;：部署在我的绿联 NAS 上，主要用途就是相册，查找摄影作品以及作为讲解资料，主打一个方便快捷，不需要打开图片软件！&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/01/article/b8a7a7d52daeb243686f916a564bcd26" src="https://cdn.sspai.com/2023/10/01/article/b8a7a7d52daeb243686f916a564bcd26"/&gt;&lt;/figure&gt;&lt;h3&gt;All-in-One 收益&lt;/h3&gt;&lt;p&gt;这些 All-in-One 软件所带来的提升，我都习惯对它们进行评估，在流程上带来多少优化，为什么会提高使用率等等。&lt;/p&gt;&lt;p&gt;软件类以 Flowus 为例：&lt;/p&gt;&lt;figure&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;步骤&lt;/th&gt;&lt;th&gt;原始&lt;/th&gt;&lt;th&gt;Custom Frame&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;alt+space（启动器）&lt;/td&gt;&lt;td&gt;点击&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;输入Flowus&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;回车&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;网页类以 Trello 为例：&lt;/p&gt;&lt;figure&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;步骤&lt;/th&gt;&lt;th&gt;原始&lt;/th&gt;&lt;th&gt;Custom Frame&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;切换 Chrome&lt;/td&gt;&lt;td&gt;点击&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;找到标签&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;点击打开&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这类优化并没有带来多少时间上的收益，更多在于，减少做选择的次数从而减少精力消耗。据说平均每个成年人每天做出大约 35000 个选择，每一件小事就是一个选择，都可以成为最后一根稻草。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;上手难度&lt;/strong&gt;：⭐⭐&lt;/p&gt;&lt;p&gt;插件本身没有难度，难的是所嵌入的内容。例如 Trello、Notion，难点在学用它们。&lt;/p&gt;&lt;h2&gt;MacroDroid&lt;/h2&gt;&lt;p&gt;自从 Ob 的全平台适用后，我的工作内容也开始大量涉及手机操作，使用频率激增，就产生了一个想法：「把手机打造成生产力工具」，而不仅仅是以 PC 为第一生产力。毕竟手机的使用时间远比 PC 多，也方便携带。能帮我实现这个想法的工具，是从接触 MacroDroid 开始。从功能来说，MacroDroid 可以看成是 IFTTT、HTTP 快捷方式、通知滤盒等的组合，也就是 All-in-One。&lt;/p&gt;&lt;span&gt; &lt;/span&gt;&lt;p&gt;&lt;strong&gt;官方介绍：&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Make your phone truly smart with the number one automation app on Android&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;同类型还有 Automation、Task，但它们看着就没有想学的欲望。&lt;/p&gt;&lt;p&gt;第一次接触 MacroDroid 的时候，马上被吸引住了，一下子就能看懂所有功能版块，细节需要摸索，非常像智能家居的方式，只是操作对象不是家居而是手机本身。起码不是从完全陌生的领域开始，集成度高，完全可以做到零代码。学习知识从熟悉的开始，过渡陌生领域，再学习新领域，心理上不会排斥更容易接受。&lt;/p&gt;&lt;p&gt;MacroDroid 的大概原理是「什么情况触发怎样的行为」。&lt;/p&gt;&lt;figure&gt;&lt;img alt="image.png" data-original="https://cdn.sspai.com/2023/10/01/article/6199a226e683c7d841ec3a2d2f5fc6ae" src="https://cdn.sspai.com/2023/10/01/article/6199a226e683c7d841ec3a2d2f5fc6ae"/&gt;&lt;/figure&gt;&lt;h3&gt;时间记录&lt;/h3&gt;&lt;p&gt;最基本的使用就是通勤时间记录。有了 MacroDroid 记录起来相当简单，离开家里的 Wi-Fi 开始计时，连接公司的 Wi-Fi 结束计时，全程自动。可利用 MacroDroid 自身的计时器，也可以结合它的插件功能接入 aTimeLogger 或 TimeMeter 等。目前我是记录出门时间以及抵达时间，同时启停 aTimerLogger 记录，方便查看。&lt;/p&gt;&lt;figure&gt;&lt;img alt="xbtcbfe40ec6b758c99f76a63c03747636fe" data-original="https://cdn.sspai.com/2023/10/01/article/aee4872a78fe2fa37f2cddaaeedae79a" src="https://cdn.sspai.com/2023/10/01/article/aee4872a78fe2fa37f2cddaaeedae79a"/&gt;&lt;/figure&gt;&lt;p&gt;类似地，我还在做：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;利用通知栏记录 NFC 的公交打卡时间&lt;/li&gt;&lt;li&gt;利用通知栏记录美团单车骑行时间&lt;/li&gt;&lt;li&gt;非日常的特殊行为进行手动记录&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;大多数用于常规事件的记录，只要判断好触发条件，所有数据写入本地文件，最后汇总到 Ob 中，完成闭环。&lt;/p&gt;&lt;p&gt;写入本地文件这个操作，搭配 Markor 的 QuickNote.md，比起 Obsidian，它可以更快速写入打开和修改，日常编辑 md 也是用 Markor。&lt;/p&gt;&lt;h3&gt;快速记账&lt;/h3&gt;&lt;p&gt;记账这个事情，在 14-17 年左右，坚持过 3 年，发现每年支出都差不多，于是停止了记账。试过各种 App，甚至自己手写都有，最后还是因为过于无聊而停止。我想一件事情必须赋予它一定意义才坚持得下去，坚持越久意义越大，至少它有存在的价值。&lt;/p&gt;&lt;p&gt;现在记账的价值就是区分个人和自媒体上的支出，同时把它看作是自己身上的大数据，提炼出来，增强韧性。&lt;/p&gt;&lt;p&gt;记账功能主要利用了共享模板里面的宏「ID_ 找到 ID」，在这个基础上展开了识别的操作，写了微信、支付宝、拼多多相关的，淘宝相关内容也放入到支付宝中读取。&lt;br/&gt; &lt;/p&gt;&lt;p&gt;记账方式有两种：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;读取通知栏：通过读取支付成功后弹出的通知栏信息，实现记账，比较智能，但 MacroDroid 自身有 Bug，经常读取不到，微信支付也不是所有渠道都弹出通知，只适用于简单记录。&lt;/li&gt;&lt;li&gt;主动读屏：开启支付宝或微信记账本，直接读取账本中的支付详情。每支付一次，如果通知栏的方式没有记录，那我就会打开记账本的支付详情，直接读屏详细信息，写入到 Markor 的 QuickNote 中。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;每次支付完毕都要打开记账本是一个比较痛苦的操作，转念一想，这只不过是「用琐碎的时间去处理琐碎的事情」，一下子就舒服了。&lt;/p&gt;&lt;figure&gt;&lt;img alt="记账相关的宏" data-original="https://cdn.sspai.com/2023/10/01/article/f7eb3b89e3d8fc1abee1639f2e1f588a" src="https://cdn.sspai.com/2023/10/01/article/f7eb3b89e3d8fc1abee1639f2e1f588a"/&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/01/06bdddd679420d0b1c69f753817e1c2e.gif" src="https://cdn.sspai.com/2023/10/01/06bdddd679420d0b1c69f753817e1c2e.gif"/&gt;&lt;figcaption&gt;操作流程&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;设备控制&lt;/h3&gt;&lt;p&gt;一些日常使用习惯，将它写成自动化的流程，也能减少操作步骤。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;自动复制验证码：模板中有现成的，我对它进行了修改，通过饭碗警告、Bark 转发到其他人手上，实现自动化，避免团队中每次都有人来问验证码的问题&lt;/li&gt;&lt;li&gt;接入蓝牙耳机时，自动打开常用音乐 App&lt;/li&gt;&lt;li&gt;充满电，语音提示，记录充电时间等&lt;/li&gt;&lt;li&gt;关闭屏幕，自动清理通知&lt;/li&gt;&lt;/ul&gt;&lt;figure&gt;&lt;img alt="设备控制的宏" data-original="https://cdn.sspai.com/2023/10/01/article/3b52907ca027bafd75cbdb031447d1e1" src="https://cdn.sspai.com/2023/10/01/article/3b52907ca027bafd75cbdb031447d1e1"/&gt;&lt;/figure&gt;&lt;h3&gt;All-in-One 收益&lt;/h3&gt;&lt;p&gt;自动记录，手动整理，最后汇总到 Obsidian 中，减少了手指点击屏幕的次数，不需要记忆很多事情，希望对你有用。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;上手难度：&lt;/strong&gt;⭐⭐⭐⭐&lt;/p&gt;&lt;p&gt;学习难度真的很高，以至于我想简单说一下怎么用，都有点吃力。建议从最简单的功能开始，例如关屏清理通知、充满电语音提示等等很多模板里的功能，从现有功能去学习，比起从零开始，高效太多。&lt;/p&gt;&lt;p&gt;如果想学管理又苦于没机会，那么如何做好自身管理，就是一次机会，毕竟每个人都是行走的大数据，感受它的复杂和繁琐，并且解决它。&lt;/p&gt;&lt;p&gt;前面说提及的 MacroDroid 的宏我都导出了一份，可自行&lt;a href="https://flowus.cn/cmsy/share/506fe2d4-2a7b-4dc6-8a42-0a4a400e5a84" target="_blank"&gt;下载导入&lt;/a&gt;（免费版 MacroDroid 只能使用 5 个宏）。&lt;/p&gt;&lt;h2&gt;Sublime Text&lt;/h2&gt;&lt;p&gt;Sublime 和印象笔记基本是同年投入使用，到现在已经 10 年。当时是看中它在 Windows 上可实现断电可自动保存功能，从 Win7 到 Win11、Mac。印象笔记已换掉，但 Sublime 依然是每台电脑必装的软件。&lt;/p&gt;&lt;span&gt; &lt;/span&gt;&lt;p&gt;&lt;br/&gt;官方这样总结 Sublime：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Sublime Text is a sophisticated text editor for code, markup and prose.You&amp;#x27;ll love the slick user interface, extraordinary features and amazing performance.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;相比 VScode、Pycharm 这类 IDE，Sublime 是一个文本编辑器，满足大部分文字工作需求和轻量化 Python 用途。启动快、颜值高、跨平台、侧边栏舒服，可替代 TXT 类软件，启动快是我最经常用它的主要原因，「天下武功唯快不破」。&lt;/p&gt;&lt;figure&gt;&lt;img alt="image.png" data-original="https://cdn.sspai.com/2023/10/01/article/8a3e47e71e4b075eabfc56f75e5a493c" src="https://cdn.sspai.com/2023/10/01/article/8a3e47e71e4b075eabfc56f75e5a493c"/&gt;&lt;/figure&gt;&lt;h3&gt;安装步骤&lt;/h3&gt;&lt;p&gt;刚好前段时间新买了 Mac mini，记下了安装过程，供参考：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;下载 Python 安装包，&lt;a href="https://www.python.org/downloads/macos/" target="_blank"&gt;https://www.python.org/downloads/macos/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;安装后在终端窗口输入确认：python3 或 Python3 version&lt;/li&gt;&lt;li&gt;终端窗口指令安装 pip：python3 -m ensurepip --default-pip&lt;/li&gt;&lt;li&gt;终端窗口：pip3 --version确认安装成功&lt;/li&gt;&lt;li&gt;安装 Sublime&lt;/li&gt;&lt;li&gt;打开 Sublime 直接选择&lt;code&gt;工具-编译系统-Python&lt;/code&gt;，&lt;code&gt;视图-语法-python&lt;/code&gt;，完成即可正确显示 python&lt;/li&gt;&lt;li&gt;Sublime Text 新建一个 test.py 文件输入下面代码，Ctrl/Cmd+B 执行：&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;import sys

print (&amp;quot;Python Version {}&amp;quot;.format(str(sys.version).replace(&amp;#x27;\n&amp;#x27;, &amp;#x27;&amp;#x27;)))&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;文字类工作&lt;/h3&gt;&lt;p&gt;Sublime Text 自身拥有丰富功能，多列显示、文件对比、统计选中的字数行数、高颜值配色主题、正则查找替换（搜索&lt;code&gt;\n&lt;/code&gt;可选中所有换行符）、可多文件，多光标的批量处理等等。&lt;br/&gt;在 Obsidian 投入使用之前，我的大部分文案，首先在 Sublime 中写完，再移入笔记软件中，作为一款强化版的文本工具，现在主要用于：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;批量修改替换 md 的内容&lt;/li&gt;&lt;li&gt;打开特殊格式的系统文本，如 .config 之类的&lt;/li&gt;&lt;li&gt;临时记录信息&lt;/li&gt;&lt;li&gt;一些简单草稿文案，偏「缓存」的作用&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;它的快捷键很多，我能记住的就几个：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;多选行：Ctrl+A &amp;gt; Ctrl+Shift+L &amp;gt; Home&lt;/li&gt;&lt;li&gt;多光标：Ctrl+鼠标点击&lt;/li&gt;&lt;li&gt;搜索后：Alt+Enter选中全部搜索内容&lt;/li&gt;&lt;/ul&gt;&lt;figure&gt;&lt;img alt="image.png" data-original="https://cdn.sspai.com/2023/10/01/article/e0f0629f73311dec91b873e758abc53c" src="https://cdn.sspai.com/2023/10/01/article/e0f0629f73311dec91b873e758abc53c"/&gt;&lt;/figure&gt;&lt;h3&gt;代码类工作&lt;/h3&gt;&lt;p&gt;想自学 python，又不是从事代码类工作的，那它将是最好的选择。&lt;/p&gt;&lt;p&gt;目前我大部分用途是跑 python，我的 python 学习都是基于 Sublime。2018 年开始利用业余时间制作视频，发现这个过程中充斥着大量重复性有规律的操作，后来了解到非编软件 Pr、FCPX、达芬奇等都可以导出 xml，而编程语言基本都能处理 xml 的。借着这个契机，开始了 python 的学习。Sublime 从这个时候开始正式用于代码类工作，不再是一个强化版 TXT 或者代码查看器。早期写过的一些辅助制作视频的功能主要有：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;图片与视频的时间同步。针对摄影的照片和视频同步问题。之前出过一期视频发布过，但因为没时间维护，&lt;a href="https://www.bilibili.com/video/BV1Ta411676h/" target="_blank"&gt;分享的版本&lt;/a&gt;可能已经无法使用。&lt;/li&gt;&lt;li&gt;读取图片 Exif 信息生成字幕文件&lt;/li&gt;&lt;li&gt;字幕的格式转换与多国语言翻译处理。把 txt 转换为 srt，srt 转为 txt 等等，网上已经有很多现成的。&lt;/li&gt;&lt;li&gt;自动剪辑视频音频停顿静音部分。好像是剪映今年推出的功能，18 年当时就做了出来，但没有任何实用性，基本没投入使用。包括现在剪映的，对我而言，也不具备实用性。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这些功能至少为每期视频节省 30-50 分钟的制作时间。包括后来做运营，也依赖了大量 Python 工具辅助，webhook、Notion API 等等。&lt;/p&gt;&lt;h3&gt;插件类拓展&lt;/h3&gt;&lt;p&gt;一款优秀的工具，都少不了插件系统。&lt;br/&gt;分享一些我常用的，减少我的切换频率，需求增加时，可适当用插件满足，也是一个不错的功能。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Package Control：插件辅助&lt;/li&gt;&lt;li&gt;A file icon：给你的文件加图标，颜值即生产力&lt;/li&gt;&lt;li&gt;Markdown editing：辅助 md 格式的显示&lt;/li&gt;&lt;li&gt;Terminus：把系统的终端集成到软件中，常用于 Hexo 博客系统的维护&lt;/li&gt;&lt;li&gt;SFTP：用于访问 VPS&lt;/li&gt;&lt;li&gt;colorPick：颜色拾取器，纯粹只是不想再额外找软件&lt;/li&gt;&lt;li&gt;insert num：插入数字，多行光标时自动序列化&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Sublime 本身也有很多关于 markdown 的插件，但没必要，不如 Typora 或者 Ob。我的 Hexo 博客用 VSCode 搭建，但日常维护我直接用 Sublime，方便快捷。&lt;/p&gt;&lt;h3&gt;All-in-One 收益&lt;/h3&gt;&lt;p&gt;对于需要涉及代码又需要写文案的人来说，它的 All-in-One 收益是非常高。如果很多时候并不需要编写代码，那没必要去学习，或者只是当成 txt 阅读器替代即可。看到过有人建议学 Python，它能优化你的工作。但相比学习成本，如果不感兴趣，则不建议。效率低就低一点。学习一门语言本身就不容易，后续的维护和开发过程中的问题查找，会消耗非常大的精力。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;上手难度：&lt;/strong&gt;⭐⭐&lt;/p&gt;&lt;p&gt;软件本身不难，难的是 Python 以及正则表达式的学习，但简单的批量查找替换，基本上都很简单。&lt;/p&gt;&lt;h2&gt;腾讯轻联和集简云&lt;/h2&gt;&lt;p&gt;假如你所在的公司不关心内部流程的问题，软件跨度较大，流程繁琐，可以留意 Hiflow 腾讯轻联和集简云这两个低代码或零代码平台，让很多软件实现了互通，包括飞书、企微、金蝶云、Notion、抖音等非常多软件可自行研究。&lt;/p&gt;&lt;p&gt;腾讯轻联 Hiflow：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;将日常的重复工作快速实现流程自动化，提高工作效率，事半功倍。拖拉拽的图形化流程编辑界面，轻松实现 SaaS、企业应用、数据&amp;amp;云服务之间的连接自动化，打造高效、稳定、安全的集成平台。&lt;/p&gt;&lt;/blockquote&gt;&lt;figure&gt;&lt;img alt="image.png" data-original="https://cdn.sspai.com/2023/10/01/article/b579875dfc7b0eaa16707fbda71f05ed" src="https://cdn.sspai.com/2023/10/01/article/b579875dfc7b0eaa16707fbda71f05ed"/&gt;&lt;/figure&gt;&lt;p&gt;集简云：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;自动化业务流程可节省企业数万小时的人工成本无需代码开发，简单快捷，人人可用，自动化连接企业内部与外部数据，搭建企业的自动化业务流程。&lt;/p&gt;&lt;/blockquote&gt;&lt;figure&gt;&lt;img alt="image.png" data-original="https://cdn.sspai.com/2023/10/01/article/0fe64182308038f6321937dbbae59d4a" src="https://cdn.sspai.com/2023/10/01/article/0fe64182308038f6321937dbbae59d4a"/&gt;&lt;/figure&gt;&lt;p&gt;它们都是国内版的 Zapier，一开始想过用 Sublime 写 Python 来打造 Notion API 之类的功能，了解到这些自动化工具之后，果断放弃了自己写的想法，大多还是考虑到维护太累。&lt;/p&gt;&lt;figure&gt;&lt;img alt="加入云端工具之前" data-original="https://cdn.sspai.com/2023/10/01/article/7f7b80d1cbfede7655edb7037d0a7f67" src="https://cdn.sspai.com/2023/10/01/article/7f7b80d1cbfede7655edb7037d0a7f67"/&gt;&lt;/figure&gt;&lt;p&gt;免费版的差异是 Hiflow 限制软件，集简云使用次数特别少。我两个都在用，大部分在集简云上，因为没有软件的限制，而 webhook 在 Hiflow 上属于付费功能。&lt;/p&gt;&lt;p&gt;我用它们搭建了一套基于 Webhook 的通知系统，团队也好个人也好，都能定时收到推送，也可通过 MacroDroid、Trello 主动推送，用 Python 更新服务器的数据库时会发出通知，同时数据备份到 Notion。&lt;/p&gt;&lt;figure&gt;&lt;img alt="加入云端工具之后" data-original="https://cdn.sspai.com/2023/10/01/article/fb8e5e266d15b669ed81f2734466951a" src="https://cdn.sspai.com/2023/10/01/article/fb8e5e266d15b669ed81f2734466951a"/&gt;&lt;/figure&gt;&lt;ul&gt;&lt;li&gt;主动通知：MacroDroid（Webhook 功能），Trello（Automation Button）&lt;/li&gt;&lt;li&gt;接收通知：Android（饭碗警告）、iOS（Bark）、飞书（机器人）&lt;/li&gt;&lt;li&gt;集简云：集中处理，方便修改。更新数据到 VPS 后，集简云自动备份到 Notion。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;很多公司的流程跨软件多，利用云端工具打通是个不错的高效选择。&lt;/p&gt;&lt;h3&gt;All-in-One 收益&lt;/h3&gt;&lt;p&gt;不用购买服务器，不用自己去维护，如果有你需要的功能，它对效率的提升非常大。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;上手难度：&lt;/strong&gt;⭐⭐&lt;/p&gt;&lt;p&gt;学会了 MacroDroid 之后，再看这个，显得非常简单，它们的设计逻辑是类似的。一开始我是将手机上的 MacroDroid 当服务器来用，毕竟它也是 24 小时开机在跑，不过出于规范化，后来取消了，能移到云端工具就移上去。&lt;/p&gt;&lt;h2&gt;总结&lt;/h2&gt;&lt;p&gt;All-in-One 类都有一个共同的特点，就是有插件系统，覆盖面广，很多日常的需求都覆盖到，同时还能接入其他软件工具，从而简化流程。在实践过程中，我发现 All-in-One 软件工具之间实现互通，形成闭环，创造更多的价值，同时也让事情变得更简单。无论 Obsidian、MacroDroid、SublimeText、腾讯轻联和集简云，它们创造出来的东西，最后的汇总到 Obsidian 中展示回顾复盘等，All-in-One。&lt;/p&gt;&lt;p&gt;&amp;gt; 下载 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;少数派 2.0 客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，解锁全新阅读体验 📰&lt;/p&gt;&lt;p&gt;&amp;gt; 实用、好用的 &lt;a href="https://sspai.com/mall" target="_blank"&gt;正版软件&lt;/a&gt;，少数派为你呈现 🚀&lt;/p&gt;&lt;/div&gt;</description><author>橙猫涉影</author><guid>https://sspai.com/post/83315</guid><pubDate>Tue, 10 Oct 2023 03:47:30 GMT</pubDate></item><item><title>交通运输部发布《公路工程设施支持自动驾驶技术指南》</title><link>https://sspai.com/post/83458</link><description>&lt;p&gt;10 月 8 日，交通运输部发布《公路工程设施支持自动驾驶技术指南》。&lt;/p&gt;&lt;p&gt;《指南》中表示，不断提高交通运行效率、提升运输安全水平是公路交通发展的重要目标。自动驾驶技术的出现为这一目标的实现提供了新的思路和技术路径。借助自动驾驶和辅助驾驶技术，可减轻或避免一些由于人的疲劳、注意力不集中等带来的安全问题，提高运行车速、减少拥堵、提升公路设施运行效率，具有一定的实用价值。交通运输部高度重视自动驾驶技术的发展和应用，结合发展改革委、工业和信息化部和公安部等多个部委出台的政策法规，积极开展技术研发和试点示范等，全面推动自动驾驶技术的发展和应用。&lt;a href="https://xxgk.mot.gov.cn/2020/jigou/glj/202310/t20231008_3924624.html" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;联想将推出采用 Android 系统的 ThinkCentre M70a 一体机&lt;/h3&gt;&lt;p&gt;近期，联想宣布与 Esper 携手，对其台式一体机 ThinkCentre M70a 进行全新设计。这款一体机配备了 21.5 英寸 FHD 窄边框显示屏，目前版本将搭载 Intel 处理器，可选 i3 至 i9 芯片，系统方面将搭载 Windows 11 系统，未来亦会支持 Android 系统。联想表示，ThinkCentre M70a 主要针对企业客户，期望引起零售和酒店业的企业关注。此外，联想还筹划与 Esper 共同推出基于 Android 系统的 ThinkCentre M70q，以及 ThinkEdge SE30 和 ThinkCentre M90n-1 IoT。&lt;a href="https://www.techradar.com/computing/desktop-pcs/lenovo-shifts-direction-with-new-android-based-pcs-and-they-look-powerful" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;微软确认 Windows Copilot 目前未向所有地区开放&lt;/h3&gt;&lt;p&gt;微软近日确认，Windows Copilot 作为 Windows 11 的 9 月 26 日更新内容一部分，目前并未向所有人开放使用。目前，只有位于北美、英国、亚洲部分地区和南美某些国家的用户能够使用 Copilot。此外，考虑到欧洲地区的隐私保护法规，Copilot 也暂未在该地区开放使用。&lt;/p&gt;&lt;p&gt;对于尚未支持的地区，可以通过创建空白文件并将目标指向 &lt;code&gt;C:\Windows\explorer.exe“microsoft-edge:///?ux=copilot&amp;amp;tcp=1&amp;amp;source=taskbar”&lt;/code&gt;来尝试开启。&lt;a href="https://www.windowslatest.com/2023/10/09/microsoft-confirms-windows-copilot-isnt-available-for-everyone-on-windows-11/" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;微软撤销 OneDrive 相册占用存储配额的调整&lt;/h3&gt;&lt;p&gt;2023 年 10 月 16 日，微软决定撤销 OneDrive 相册图片占用存储配额的预定调整。微软原计划从 2023 年 10 月 16 日起，把用户在相册里储存的图片数据独立计入 OneDrive 的存储配额。然而，基于 OneDrive 用户的反馈，微软撤销了这个预定调整。即，微软会保持当前的图片相册不占用 OneDrive 存储空间的策略，不做改变。&lt;a href="https://mspoweruser.com/microsoft-backtracks-on-onedrives-changes/" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;看看就行的小道消息&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Mark Gurman 表示，Apple 未来的虚拟显示头盔可能会更小更轻，并可为视力损伤者提供定制。目前 Vision Pro 需要用户前往零售店，才能选配定制的 Zeiss 镜片；但这种捆绑方式存在着一些问题，如矫正可能需随时间调整，而且限制了头盔的共享或转售。而 Apple 已在 8 月份就已经申请了专利，显示 Apple 有兴趣制造可以调整并纠正某人视力的 VR 或 AR 头戴式显示器。&lt;a href="https://www.theverge.com/2023/10/8/23908349/apple-vision-pro-built-in-prescription-vr-ar-headset" target="_blank"&gt;来源&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Google 移动业务副总裁 Nanda Ramachandran 近期在接受奥地利当地报纸《标准报》的采访时表示，Google 目前没有计划推出低价 Pixel 手机。他表示：要想以 200 欧元/200 美元的价格提供新的人工智能功能、强大的摄像头和相应的安全框架，就需要做出太多的妥协。近期刚刚发布的 Pixel 8 和 Pixel 8 Pro 比前代产品贵了 100 美元，起价分别为 700 美元和 1000 美元。&lt;a href="https://www.androidpolice.com/google-wont-make-low-cost-pixel-phones/" target="_blank"&gt;来源&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;少数派的近期动态&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;国庆去了哪儿，留下了哪些回忆？用一张照片为夏天的尾巴做个「总结」！&lt;a href="https://s.weibo.com/weibo?q=%23%E8%BF%99%E4%B8%AA%E5%A4%8F%E5%A4%A9%E6%88%91%E5%9C%A8%E8%BF%99%23" target="_blank"&gt;#这个夏天我在这#&lt;/a&gt; 照片征集活动仍在进行，每周都有「出行礼包」送出。&lt;a href="https://weibo.com/u/1914010467" target="_blank"&gt;&lt;strong&gt;微博参与&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;《iOS 蓝皮书》已开启年度更新，内容适配 iOS 17，首发加入少数派会员。年度会员可&lt;a href="https://sspai.com/series/277" target="_blank"&gt;&lt;strong&gt;直接畅读&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;不能说走就走，但想去哪儿就去哪儿总是可以的！规划、路线、必备好物、心得经验、踩雷避坑……分享你的自驾游故事和心得。&lt;a href="https://sspai.com/bullet/1695717562" target="_blank"&gt;&lt;strong&gt;参与讨论&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;你可能错过的好文章&lt;/h2&gt;&lt;p&gt;&amp;gt; 下载 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;少数派 2.0 客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，解锁全新阅读体验 📰&lt;/p&gt;&lt;p&gt;&amp;gt; 实用、好用的 &lt;a href="https://sspai.com/mall" target="_blank"&gt;正版软件&lt;/a&gt;，少数派为你呈现 🚀&lt;/p&gt;</description><author>少数派编辑部</author><guid>https://sspai.com/post/83458</guid><pubDate>Tue, 10 Oct 2023 01:00:00 GMT</pubDate></item><item><title>派评 | 近期值得关注的 App</title><link>https://sspai.com/post/83450</link><description>&lt;div&gt;&lt;p&gt;欢迎收看本期《派评》。你可以通过文章目录快速跳转到你感兴趣的内容。如果发现了其它感兴趣的 App 或者关注的话题，也欢迎在评论区和我们进行讨论。&lt;/p&gt;&lt;h2&gt;值得关注的新 App&lt;/h2&gt;&lt;p&gt;虽然少数派一直在为大家发现和介绍各平台上的优质 App，但仍有不少设计、功能、交互、体验都非常优秀的 App，还没有被我们发掘和介绍。它们可能是一款老 App，也可能是近期上架的新 App，我们会在这里介绍给你。&lt;/p&gt;&lt;h3&gt;Microsoft 开放使用 Lists 和 Designer 客户端&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;平台：Android / iOS&lt;/li&gt;&lt;li&gt;关键词：微软、笔记、AI&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href="https://sspai.com/u/69zxdqx8" target="_blank"&gt;@Noah_Choi&lt;/a&gt;：微软分别在 2020 年和 2022 年发布了 Lists 和 Designer 服务，前者是一种「Notion-like」类型的笔记本，后者则可以利用生成式人工智能创作海报。&lt;/p&gt;&lt;p&gt;Microsoft Lists 在发布之初仅面向与商业和企业用户，后来向普通用户提供了受限的预览服务。而在近日，微软放开了使用限制，普通用户也可以通过手机 App 使用该服务了。在功能方面，网页版大多数功能都能实现，包括筛选、分组等，但 App 仅支持列表视图，切换日历、卡片视图时则会提示暂不支持。&lt;/p&gt;&lt;figure&gt;&lt;img alt="GLJubUkeIoDsCtxqtyJcIP2Fnt0" data-original="https://cdn.sspai.com/editor/u_/ckhsmvtb34tdivk90ltg" src="https://cdn.sspai.com/editor/u_/ckhsmvtb34tdivk90ltg"/&gt;&lt;/figure&gt;&lt;p&gt;Microsoft Designer 是微软在 GPT 爆火时趁热打铁推出的设计工具，并在今年 9 月底的时候推出了手机 App 预览版。使用时只需要输入相关描述后即可生成多幅海报，而且我们还能够查看到生成过程。如果你不满意，可以直接修改某幅图像。值得一提的是，在修改文本内容时也支持由 AI 生成文本描述。&lt;/p&gt;&lt;figure&gt;&lt;img alt="EMVobml0aoDusIxl2lKc1bROnTf" data-original="https://cdn.sspai.com/editor/u_/ckhsn0db34tdivk90lu0" src="https://cdn.sspai.com/editor/u_/ckhsn0db34tdivk90lu0"/&gt;&lt;/figure&gt;&lt;p&gt;经过测试，Microsoft Designer 能够识别中文内容，生成的图片也能够贴合主题。但由于中文字体渲染原因，在图片中添加文字的话效果可能会不太好。&lt;/p&gt;&lt;p&gt;现在，你可以在 Google Play（&lt;a href="https://play.google.com/store/apps/details?id=com.microsoft.lists.public&amp;amp;hl=en_US" target="_blank"&gt;Lists&lt;/a&gt;、&lt;a href="https://play.google.com/store/apps/details?id=com.microsoft.designer&amp;amp;hl=en_US" target="_blank"&gt;Designer&lt;/a&gt;）和 App Store（仅上架 &lt;a href="https://apps.apple.com/us/app/microsoft-lists/id1530637363" target="_blank"&gt;Lists&lt;/a&gt;）免费下载，或通过浏览器使用网页版 &lt;a href="http://designer.microsoft.com" target="_blank"&gt;Designer&lt;/a&gt; 和 &lt;a href="https://www.microsoft.com/en-us/microsoft-365/microsoft-lists" target="_blank"&gt;Lists&lt;/a&gt;。&lt;/p&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;h3&gt;VSCO Studio：老牌修图工具推出桌面版&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;平台：Web&lt;/li&gt;&lt;li&gt;关键词：图像处理、图片编辑&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href="https://sspai.com/u/liuxiaofengone" target="_blank"&gt;@化学心情下2&lt;/a&gt;：手机摄影已经成为我们拍照的主要方式，而除了想拍出构图光线俱佳的精致作品之外，我们也希望通过后期编辑的形式，让画面呈现出更好的质感——加上滤镜、调整曝光，让照片从视觉上迥异于本来的风格。&lt;/p&gt;&lt;p&gt;说到手机上的照片编辑类 App，自然少不了无论是应用本身设计还是出片都质量极高的 VSCO，丰富的调整项和各式滤镜搭配，让你的摄影作品可以借此媲美「商业大片」。只不过一直以来 VSCO 都只是一款手机端 App，无论是屏幕大小、操作以及效率上，桌面端都有着手机端不可比拟的优势，因此在经过仅两个多月的测试后，VSCO 正式为其 Pro 会员推出了桌面网页端编辑器：VSCO Studio。&lt;/p&gt;&lt;figure&gt;&lt;img alt="CKohbxVDfo1rZtx8mA8cky2OnJj" data-original="https://cdn.sspai.com/editor/u_/ckhsn0tb34tditeq6peg" src="https://cdn.sspai.com/editor/u_/ckhsn0tb34tditeq6peg"/&gt;&lt;/figure&gt;&lt;p&gt;和手机端的操作界面类似，桌面端的 VSCO Studio 在用户界面上也颇具设计感，Pro 订阅用户打开浏览器并登录 &lt;a href="https://studio.vsco.co/" target="_blank"&gt;VSCO Studio&lt;/a&gt; 就可以直接使用。如果你的账户中尚未添加照片，首先则是想要上传编辑的图片，上传完成后就可以在桌面上看到你上传的照片以及进入到编辑页面了。&lt;/p&gt;&lt;figure&gt;&lt;img alt="Mjcabc8kno8715xeo97c9tGInhf" data-original="https://cdn.sspai.com/editor/u_/ckhsn15b34tdh3ari370" src="https://cdn.sspai.com/editor/u_/ckhsn15b34tdh3ari370"/&gt;&lt;/figure&gt;&lt;p&gt;进入 VSCO Studio 的编辑页面，首先会进入的是 Presets，这里有不同风格的滤镜直接可以选择套用，无需选中，鼠标移动到某个滤镜标签上就会实时渲染出画面效果，比如我拍摄的这张在香港海边公路取景的照片选择了 M5 PRO 这个滤镜，呈现出古早的怀旧风格。&lt;/p&gt;&lt;figure&gt;&lt;img alt="Jv8nbvA3colZtWx7SdNcwoZ4nKd" data-original="https://cdn.sspai.com/editor/u_/ckhsn1db34tditeq6pf0" src="https://cdn.sspai.com/editor/u_/ckhsn1db34tditeq6pf0"/&gt;&lt;/figure&gt;&lt;p&gt;选中滤镜之后你可以对里面的参数进行细致的调整，比如说 Strength、Contrast、Color 以及 Tone 都可以进行精确的数值调整。设置完成后点击最右侧工具栏中的第二个工具 Tools 进入第二阶段的调整，这里可以调整的内容包括 Exposure、Contrast、Saturation、Temperature、Tint、Fade 以及 Skin Tone，并且你还可以直接输入数字实现精准调节，当然你也可以认为这是桌面端进行图片编辑的一大优势。&lt;/p&gt;&lt;figure&gt;&lt;img alt="X7JzbzvQ4oevGHxz8NFcRRoengf" data-original="https://cdn.sspai.com/editor/u_/ckhsn1lb34tditeq6pfg" src="https://cdn.sspai.com/editor/u_/ckhsn1lb34tditeq6pfg"/&gt;&lt;/figure&gt;&lt;p&gt;导出功能部分除了可以下载你编辑好的全尺寸图片之外，还可以将其分享到 VSCO 中来创建你的 VSCO 个人作品集，让作品获得更多人欣赏。&lt;/p&gt;&lt;p&gt;体验下来，我个人认为 VSCO Studio 还是非常适合开通了 Pro 会员的深度用户使用的，首先就是通过桌面网页端可以摆脱移动平台方面的一些不便，其次则是桌面端屏幕更大，在编辑时可以看到作品本身和滤镜变化的细节。当然要说到缺点也不是没有，就是 VSCO Studio 只面向 Pro 这个最高阶的会员开放，目前 Pro 会员的月订阅价格为 88 元，年订阅价格则高达 398 元，是真的不便宜。&lt;/p&gt;&lt;p&gt;你可以在&lt;a href="https://studio.vsco.co/" target="_blank"&gt;网页端&lt;/a&gt;使用 VSCO Studio。&lt;/p&gt;&lt;span&gt; &lt;/span&gt;&lt;h3&gt;小鹿查单词：用 Siri 和 Apple Watch 拼读查单词&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;平台：iOS / iPadOS / watchOS&lt;/li&gt;&lt;li&gt;关键词：查单词&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href="https://sspai.com/u/ul0vcezb" target="_blank"&gt;@Snow&lt;/a&gt;：查英文单词的最快方式是什么？解锁手机，下滑打开 Spotlight，弹出键盘，输入单词查阅结果，一整套操作行云流水效率极高。但前提是你手头空闲，且手机就在身边。若要放下正在做的事，那就又是一番折腾了。上个月上架的《小鹿查单词》开辟了一条全新的查词渠道，只需语音呼唤 Siri 或是抬手使用 Apple Watch 就能查词释义。&lt;/p&gt;&lt;p&gt;应用设计非常简洁，首页醒目的录音按钮，点击后拼读你要查询的单词的字母，就可以获得查询结果。虽然我英语词库储备不足，但 26 个英文字母我可太熟悉了，拼读的方式让我完全不用纠结读音是否准确，只需确保拼写无误即可，还能顺便加深记忆。应用提供了 3 种样式的锁屏小组件，分别是打开应用、启动录音和历史记录，将启动录音设置在锁屏，也能稍稍提升查询效率。&lt;/p&gt;&lt;figure&gt;&lt;img alt="TOwXb1wksoErKnx8kWtcVTRHnKd" data-original="https://cdn.sspai.com/editor/u_/ckhsn1tb34tdhbcub6d0" src="https://cdn.sspai.com/editor/u_/ckhsn1tb34tdhbcub6d0"/&gt;&lt;/figure&gt;&lt;p&gt;如果说应用的基础功能与传统查词方法并不能拉开差距，那或许搭配 Siri 或 Apple Watch 使用才是它的正确打开方式。唤醒 Siri 后，你只需说出「小鹿查单词」，即可拼读字母查询单词，应用会以卡片形式直接弹出结果。如果你觉得「小鹿查单词」这五个字太过拗口，还可以在应用设置页自定义快捷指令，使用其他语音指令查词。&lt;/p&gt;&lt;p&gt;Apple Watch 版设计也同样简洁，点击录音按钮即可开始拼读。向左滑动查阅历史记录，右滑则可以切换本地和云端识别引擎（Apple Watch 本地识别需手机型号为 iPhone 12 及以上机型才可支持）。应用还提供了复杂功能支持，你可以将「启动录音」添加至表盘，进一步提升查词效率。&lt;/p&gt;&lt;figure&gt;&lt;img alt="U82XbuzsEoiybQxKcg3cKpY7nPg" data-original="https://cdn.sspai.com/editor/u_/ckhsn25b34tdh3ari37g" src="https://cdn.sspai.com/editor/u_/ckhsn25b34tdh3ari37g"/&gt;&lt;/figure&gt;&lt;p&gt;不过应用目前使用场景还比较有限，仅能通过拼读模式查询单词，你无法通过单词发音直接查询，词组只能自行拆分逐词翻译，因此在我看来，小鹿查单词更多时候可以作为特殊场景的查词补充，目前不建议作为主力词典工具使用。此外，应用对于 40/41 mm 的 Apple Watch 表盘适配还需优化一下，右上角的时间和底部滑动标识与 UI 混在一起，虽不会误触，但看起来还是挺难受的。&lt;/p&gt;&lt;p&gt;你可以在 &lt;a href="https://apps.apple.com/app/id6447361715" target="_blank"&gt;App Store&lt;/a&gt; 上免费下载小鹿查单词。&lt;/p&gt;&lt;span&gt; &lt;/span&gt;&lt;h3&gt;MJ PDF：简单开源的 PDF 查看器&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;平台：Android&lt;/li&gt;&lt;li&gt;关键词：PDF&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href="https://sspai.com/u/5isr02uh" target="_blank"&gt;@Peggy_&lt;/a&gt;：在我们的日常工作当中，经常需要和各式各样的文件打交道，其中 PDF 格式的文件更是频繁出现，作为一种版式固定、所见即所得文件类型，在使用过程中能保障我们阅读和分享的便捷性。不过稍显繁琐的是，查看和编辑 PDF 文件往往需要使用额外的工具，而大部分手机自带的预览功能也只是勉强够用而已。&lt;/p&gt;&lt;p&gt;MJ PDF 是一款轻便、开源的 PDF 预览器，安装起来完全没有负担，不会占用过多的手机存储空间。具体到功能上，MJ PDF 基本上具备所有主流 PDF 阅读器所具备的主要功能。无论是预览还是共享、打印，都不在话下。通过 MJ PDF，我们可以实现充分利用手机屏幕，全屏阅读文件，其次，MJ PDF 还能帮助我们打开在线 PDF 并实现实时预览。&lt;/p&gt;&lt;figure&gt;&lt;img alt="VmgBbHA66ou60cxCV0Oc36r3nug" data-original="https://cdn.sspai.com/editor/u_/ckhsn2db34tdhbcub6dg" src="https://cdn.sspai.com/editor/u_/ckhsn2db34tdhbcub6dg"/&gt;&lt;/figure&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;不同的是，MJ PDF 也具备了一个独特功能：自动滚动。借助应用的自动滚动功能，我们可以实现点击一次文件，后续不再动手即可躺平阅读。更加贴心的是，MJ PDF 的滚动速度可以由用户自行调整，从而适应不同用户的阅读速度。&lt;/p&gt;&lt;figure&gt;&lt;img alt="S9PobBm3Go6ONwxyonWcffM7n3c" data-original="https://cdn.sspai.com/editor/u_/ckhsn2tb34tdhbcub6e0" src="https://cdn.sspai.com/editor/u_/ckhsn2tb34tdhbcub6e0"/&gt;&lt;/figure&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;MJ PDF 还能帮我们记住上次阅读的进度，确保每次打开应用都能立刻与之前的阅读状态无缝衔接，即便是打开多个 PDF 文件也不在话下。如果白底黑字读起来不舒服，MJ PDF 还支持了深色模式，方便用户随时切换。&lt;/p&gt;&lt;figure&gt;&lt;img alt="MsdibcNAdoDkI9xWjadcywy9n7d" data-original="https://cdn.sspai.com/editor/u_/ckhsn3db34tdivk90lug" src="https://cdn.sspai.com/editor/u_/ckhsn3db34tdivk90lug"/&gt;&lt;/figure&gt;&lt;p&gt;总的来说，MJ PDF 是一款中规中矩的工具应用，如果你正在寻找一款轻量化、免费且完全不受广告干扰的 PDF 阅读器，那么不妨通过 &lt;a href="https://play.google.com/store/apps/details?id=com.gitlab.mudlej.MjPdfReader" target="_blank"&gt;Play Store&lt;/a&gt; 下载体验 MJ PDF。&lt;/p&gt;&lt;span&gt; &lt;/span&gt;&lt;h2&gt;不容错过的 App 更新&lt;/h2&gt;&lt;p&gt;除了「新鲜」App，App Store 中的许多老面孔也在不断迭代、更新，增加更多有趣和实用的功能。少数派希望帮你筛选 App Store 中值得关注的 App 动态，让你快速了解 App 和开发者们的最新动态。&lt;/p&gt;&lt;h3&gt;lire 6.0 更新：新增 Newsletter 阅读模式和全文搜索功能&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;平台：iOS / iPadOS / macOS&lt;/li&gt;&lt;li&gt;关键词：稍后读、RSS&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href="https://sspai.com/u/whoops" target="_blank"&gt;@Vanilla&lt;/a&gt;：lire 是一款知名的 RSS 客户端，除了出众精致的交互设计，它的自动化集成、全文抓取、手势操作等功能让它成为了一款综合能力优秀的 RSS 客户端，也成为了许多阅读爱好者的碎片信息摄入首选。近日，lire 的移动版本更新到了 6.0 大版本，主要支持了对 newsletter 内容的网页显示模式、对不同内容源设置不同的打开方式以及全文搜索能力。&lt;/p&gt;&lt;p&gt;目前，lire 支持了 kill-the-newsletter、Newsblur、Feedbin、Inoreader (Pro)、Feedly (Pro+) 等服务的 Newsletter 订阅功能，并且可以在应用内直接使用 Newsletter 本身的排版样式，而不会应用 lire 的默认排版样式。&lt;/p&gt;&lt;figure&gt;&lt;img alt="H1L2b7EfwoBamFxCZc7cVmTtnob" data-original="https://cdn.sspai.com/editor/u_/ckhsn3lb34tdhbcub6eg" src="https://cdn.sspai.com/editor/u_/ckhsn3lb34tdhbcub6eg"/&gt;&lt;figcaption&gt;左侧：新闻简报模式/右侧：应用内置浏览器&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;不过，在使用这个功能前，我们需要先在「设置」&amp;gt;「文章」&amp;gt;「打开方式」中对订阅的 Newsletter 进行设置，将打开方式更改为「新闻简报模式」。&lt;/p&gt;&lt;figure&gt;&lt;img alt="SQbTbo5FdoMT7dxl3rTcFkYSnuf" data-original="https://cdn.sspai.com/editor/u_/ckhsn3tb34tdhbcub6f0" src="https://cdn.sspai.com/editor/u_/ckhsn3tb34tdhbcub6f0"/&gt;&lt;/figure&gt;&lt;p&gt;从上图中也可以看出，lire 对每一个内容源都提供了默认的打开方式设置，包括全文、原始内容、Inline Webpage、应用内置浏览器、Default browser 等，其中 Inline Webpage 指的是直接在 lire 阅读器中显示网页内容，应用内置浏览器指的是在 lire 中通过 Safari、Chrome 等默认浏览器显示网页内容，而 Default browser 指的是跳转到 Safari、Chrome 等默认浏览器本身的应用界面中显示网页内容。&lt;/p&gt;&lt;figure&gt;&lt;img alt="SZXfbZtZIodiIzxKyr7cL655n2f" data-original="https://cdn.sspai.com/editor/u_/ckhsn45b34tdhbcub6fg" src="https://cdn.sspai.com/editor/u_/ckhsn45b34tdhbcub6fg"/&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img alt="RsKLbRcpqoztaZx1J4vcJECVn1b" data-original="https://cdn.sspai.com/editor/u_/ckhsn4lb34tditeq6pg0" src="https://cdn.sspai.com/editor/u_/ckhsn4lb34tditeq6pg0"/&gt;&lt;/figure&gt;&lt;p&gt;在新版本中，lire 还支持了对所有文章进行全文搜索，想要使用这个功能需要先在「设置」&amp;gt;「通用」&amp;gt;「搜索」中启用「Full-text Search」，启用后还会根据你的文章数量进行一定时间的内容索引。&lt;/p&gt;&lt;figure&gt;&lt;img alt="Cl8ZbxPbnoyXtCxqzn4coMf7ndh" data-original="https://cdn.sspai.com/editor/u_/ckhsn4tb34tdh3ari380" src="https://cdn.sspai.com/editor/u_/ckhsn4tb34tdh3ari380"/&gt;&lt;/figure&gt;&lt;p&gt;根据我的测试，目前 lire 对全文搜索的支持还是有所限制，对标题的搜索基本上可以覆盖中、英文，但是对文章主体内容的搜索基本上不支持中文，所以实用性大打折扣。&lt;/p&gt;&lt;figure&gt;&lt;img alt="AEDLbDrioo1su5xylsRcChyQn6H" data-original="https://cdn.sspai.com/editor/u_/ckhsn55b34tdh3ari38g" src="https://cdn.sspai.com/editor/u_/ckhsn55b34tdh3ari38g"/&gt;&lt;/figure&gt;&lt;p&gt;lire 可以在 &lt;a href="https://apps.apple.com/us/app/lire-rss-reader/id1531976425" target="_blank"&gt;App Store&lt;/a&gt; 下载，售价 9.9 美元，老用户可以获得免费升级。&lt;/p&gt;&lt;span&gt; &lt;/span&gt;&lt;h3&gt;GameTrack 5.0：更方便的游戏跟踪管理工具&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;平台：iOS / iPadOS / macOS&lt;/li&gt;&lt;li&gt;关键词：游戏追踪、游戏管理&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href="https://sspai.com/u/robinpeng" target="_blank"&gt;@ROB1N&lt;/a&gt;：老牌游戏跟踪工具 Gametrack 在最近迎来了 5.0 版本的更新。作为一款游戏跟踪 app ，主要功能自然就是跟踪用户在各个平台上的游戏情况了。例如，a 游戏的成就完成了哪些，b 游戏的进度如何了等等。通过这款软件各位可以精准把控自己在各个游戏的状态，以及知道自己在游戏方面到底是勤劳的蜜蜂还是懒惰的鸽子。&lt;/p&gt;&lt;p&gt;本次 5.0 更新，为用户们带来了全新的主页面。在主页面中，我们可以很方便地看到各种游戏相关的数据。例如我们的奖杯数量、游戏活动时间。在主页面的右上角，我们可以看到根据库内游戏统计的数据，如过往一年的游戏回顾（需要订阅）、库内游戏类型的分部、以及用户不同平台内游戏的占比等统计。&lt;/p&gt;&lt;figure&gt;&lt;img alt="Ln0fb9zcgosyX3x2gKmcvjgDnDe" data-original="https://cdn.sspai.com/editor/u_/ckhsn5db34tdh3ari390" src="https://cdn.sspai.com/editor/u_/ckhsn5db34tdh3ari390"/&gt;&lt;/figure&gt;&lt;p&gt;在探索页面，我们可以找到最近发布的新游戏以及即将发布的游戏。在即将发布的游戏下方，甚至能看到距离发售还有多长时间。例如，距离发布最近的两款游戏《Froza Motorsport》《Phantom Hellcat》在下方我们都可以看到「in 16 hours」字样，《Marvel&amp;#x27;s Spider-Man2》下方则显示着「in 1 week」。根据这些数据，我们可以精准地知道我们想玩的游戏具体是什么时候发售。&lt;s&gt;然后果断安排向老板请假的时机，以便在家躺着舒舒服服地玩上一天。&lt;/s&gt;&lt;/p&gt;&lt;figure&gt;&lt;img alt="LhUlbkh74oRgTbxmcfpcFuBRnRf" data-original="https://cdn.sspai.com/editor/u_/ckhsn5tb34tditeq6pgg" src="https://cdn.sspai.com/editor/u_/ckhsn5tb34tditeq6pgg"/&gt;&lt;/figure&gt;&lt;p&gt;本次更新还带来了新的分类系统。在「已完成」这个分类下，又多出了三种子分类，分别是「story」「extra」「100%」。我们可以在游戏的单独页面内设置到底属于哪种分类。GameTrack 还为我们带来了自定义列表功能，可以建立自己的列表来分类游戏。&lt;/p&gt;&lt;figure&gt;&lt;img alt="PrlXb1tWfohJwCxXHoxczJq0nMh" data-original="https://cdn.sspai.com/editor/u_/ckhsn6db34tditeq6ph0" src="https://cdn.sspai.com/editor/u_/ckhsn6db34tditeq6ph0"/&gt;&lt;/figure&gt;&lt;p&gt;就目前使用来看，由于我的 Steam 设置一直有问题，明明设置的是公开但是就是无法同步进 GameTrack ，所以主要的使用体验都是追踪 PlayStion 平台。同步非常快，也很精确，成就、奖杯都能够一一展现。如果大家家里都有主机，想不开机就可以了解自己的奖杯、成就情况，那我非常推荐各位使用这款软件。目前各位可以在 &lt;a href="https://apps.apple.com/us/app/gametrack/id1136800740?l=zh-Hans-CN" target="_blank"&gt;App Store&lt;/a&gt; 下载使用。&lt;/p&gt;&lt;span&gt; &lt;/span&gt;&lt;h2&gt;&lt;strong&gt;App 速报&lt;/strong&gt;&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Microsoft PowerToys（&lt;a href="https://github.com/microsoft/PowerToys/releases/tag/v0.74.0" target="_blank"&gt;Windows&lt;/a&gt;）：更新至 v0.74.1，内置文本提取器更新至 2.0，加上了新叠加层，表格模式；改进了 FancyZones 稳定性。&lt;/li&gt;&lt;li&gt;Things 3（&lt;a href="https://apps.apple.com/cn/app/things-3/id904280696?mt=12" target="_blank"&gt;macOS&lt;/a&gt;）：更新至 v3.19.1，支持在 macOS 14 Sonoma 桌面上显示小部件，有多个尺寸小部件可选，并可以直接在桌面上标记完成。&lt;/li&gt;&lt;li&gt;Apple Music（&lt;a href="https://play.google.com/store/apps/details?id=com.apple.android.music&amp;amp;hl=en_US" target="_blank"&gt;Android&lt;/a&gt;）：更新至 v4.5 Beta，引入了两个全新的小部件：Recommendations 和 Top Charts。原先的 Apple Music Player 小部件更名为 Now Playing。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;gt; 下载 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;少数派 2.0 客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/link?target=https%3A%2F%2Fwww.xiaohongshu.com%2Fuser%2Fprofile%2F63f5d65d000000001001d8d4" target="_blank"&gt;少数派小红书&lt;/a&gt;，找到数字时代更好的生活方式 🎊&lt;/p&gt;&lt;p&gt;&amp;gt; 实用、好用的 &lt;a href="https://sspai.com/mall" target="_blank"&gt;正版软件&lt;/a&gt;，少数派为你呈现 🚀&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;/div&gt;</description><author>少数派编辑部</author><guid>https://sspai.com/post/83450</guid><pubDate>Mon, 09 Oct 2023 09:53:11 GMT</pubDate></item><item><title>万字详拆芯片：人类算力被锁死了吗？</title><link>https://sspai.com/post/83398</link><description>&lt;div&gt;&lt;iframe src="//v.qq.com/txp/iframe/player.html?vid=p0047wtv595"&gt; &lt;/iframe&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt; &lt;strong&gt;本集研究员：青工所宁超&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;「芯片还会进步吗？科技是不是停滞了？算力被锁死了吗？半导体还有希望吗？」&lt;/p&gt;&lt;p&gt;2023 年 8 月，面对我敬仰已久的龙芯 CPU 首席科学家胡伟武，我抛出了自己许久的疑惑。&lt;/p&gt;&lt;p&gt;没想到，胡伟武笑了，「你这个假设不成立，关键是有些物理学的定理给你限制住了」，随即他又严肃道，「我认为摩尔定律实际上是已经到头了」。&lt;/p&gt;&lt;p&gt;所以，芯片好像确实出问题了。&lt;/p&gt;&lt;hr/&gt;&lt;h2&gt;&lt;strong&gt;疑问的诞生&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;芯片为什么不进步了？&lt;/p&gt;&lt;p&gt;这个问题看起来有些不合时宜，又有一些杞人忧天。但它们的的确确是从我成长轨迹里长出的疑问。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;1995 年， 我出生于处理器芯片术兴起的时代。那一年，图形化界面操作系统与奔腾处理器诞生。&lt;/li&gt;&lt;li&gt;1998 年，家里买了一台电脑，是卧式的金长城。&lt;/li&gt;&lt;li&gt;2000 年， 我第一次用电子琴，玩红白机，玩 Gameboy。&lt;/li&gt;&lt;li&gt;2002 年，我第一次看到 MP3，液晶屏幕。&lt;/li&gt;&lt;li&gt;2006 年，家里的大人用上了笔记本电脑，手里拿着诺基亚手机。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;之后，家里每年都有值得兴奋的玩意。就像《越来越好》这首歌里唱到的那样：「房子大了，电话小了，感觉越来越好……」&lt;/p&gt;&lt;p&gt;我很想知道，是什么让这一切越来越好？我不停地拆，发现答案就在一个个小方块上——芯片。 于是，2014 年，我大学学了半导体专业，进入黄昆班，正式开始专业课的学习。（注：黄昆班是以我国著名的物理学家和教育家黄昆先生命名，由北京科技大学与中国科学院半导体研究所合作办学。）但从我进入学校开始，这一切就变了。屏幕、电脑、手机，千篇一律，我们的技术好像就定格在了我进入大学那天。&lt;/p&gt;&lt;p&gt;2018 年，我毕业。班里 18 个人，只有一个人进入芯片相关的领域，芯片专业好像也不需要那么多人。毕业后，我找了些为了生活的工作。去酒吧兼职，学过调酒；去新东方做物理老师；去新媒体从事过文稿工作……2022 年，失业。&lt;/p&gt;&lt;p&gt;我一直想不明白，为什么这么多年没有值得兴奋的新玩意儿了？我们的科技进步和这些芯片一样，似乎已经进入到了一个挤牙膏的时代。&lt;/p&gt;&lt;p&gt;2023 年 3 月，我来到《青工所》，这个不关乎我生活的问题终于有了发挥的契机。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;关于算力 &lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;这一切要先从算力开始讲起。算力的意思很简单，就是计算的能力，指每秒能处理的次数。今天的人们用 OPS（Operations Per Second）来衡量算力的大小，1 OPS 就代表了每秒计算 1 次。更形象一点来说，你用一个计算器一秒按一次，就相当于 1 OPS。今天一枚芯片的算力最多能达到千万亿，每一秒都相当于铺满 5 个四川省的计算器在同时计算。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/988224f048b0b622b2ab215555a05ed0.gif" src="https://cdn.sspai.com/2023/10/07/988224f048b0b622b2ab215555a05ed0.gif"/&gt;&lt;figcaption&gt;更形象的算力展示（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;看起来很多，有什么问题是每秒千万亿次的计算解决不了的呢？ 那可太多了，1000 万亿 OPS 甚至无法预测一杯水的运动。那能计算多少水呢？答案是：一滴水里面的一个大分子。这就是目前人类算力的极限。&lt;/p&gt;&lt;p&gt;一个拥有大算力的芯片里面，有超过百万个负责各类运算的模块。为了更好地理解，你可以把每一个运算模块想像成一台功能简单的「计算器」。&lt;/p&gt;&lt;p&gt;但这样的「计算器」还不是最小单位，如果我们再拆开一个「计算器」，就能看到 1000 左右的个晶体管，它们才是计算的最小单元，只能表示两个数字——0 和 1 。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/e3ea623895b990fe5541f90fc99d9739.gif" src="https://cdn.sspai.com/2023/10/07/e3ea623895b990fe5541f90fc99d9739.gif"/&gt;&lt;figcaption&gt;藏在计算器背后的晶体管（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;你可能已经听说过，我们的手机电脑都是二进制，这就是二进制的本体，用 0 和 1 计算一切。提升算力，很大程度上就是把这些晶体管变小，这样，一块芯片里就能放下更多的「计算器」，拥有更大的算力。&lt;/p&gt;&lt;p&gt;所以，研究算力是否被锁死，我们得先找到晶体管。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;寻找晶体管&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;在网络上，我们可以轻松搜到各种晶体管的图片，但它们都不好看，也无法表示真实情况下的晶体管结构。于是，我找了些更硬核的课程，在这些课程中，我看到了一张芯片最完整的样子，也就是这样的图纸，他们叫 GDS 版图。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/4834a4c0f4b1edaad11f580dce9232c1.gif" src="https://cdn.sspai.com/2023/10/07/4834a4c0f4b1edaad11f580dce9232c1.gif"/&gt;&lt;figcaption&gt;GDS版图（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;但问题是，GDS 版图是芯片企业的最高机密，不容易找到。好在有很多硬核玩家 GitHub 上复刻了各种上世纪老芯片的版图，例如 Intel 4004，MOS 6502。打开一张版图，放大，最先映入眼帘的是纵横排布的线路，它们代表的是一层层导电的金属，晶体管就埋藏在这些金属的下面。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/673cc77e96296f32421dc203e652cc9e.gif" src="https://cdn.sspai.com/2023/10/07/673cc77e96296f32421dc203e652cc9e.gif"/&gt;&lt;figcaption&gt; Intel 4004 和 MOS 6502 的芯片版图（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;这些平面的图纸其实包含了三维信息。不同颜色代表不同高度，&lt;s&gt;最&lt;/s&gt;上方的这些纵横的金属相当于电路中的导线。隐藏它们，露出来的就是芯片中最重要的部分——晶体管。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/7181ca6e14dd6a82a114c949e8bd2a18.png" src="https://cdn.sspai.com/2023/10/07/7181ca6e14dd6a82a114c949e8bd2a18.png"/&gt;&lt;figcaption&gt; 芯片平面图纸中的三维信息（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/60e0e14c1ee3771091f16593db843f29.gif" src="https://cdn.sspai.com/2023/10/07/60e0e14c1ee3771091f16593db843f29.gif"/&gt;&lt;figcaption&gt;芯片拆解示意动画（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;晶体管是一个开关，能在导电和绝缘两种状态之间反复横跳。决定是「开」还是「关」的东西是这里的电压。在处理器芯片中只有两种电压：高电压和低电压，也就是电脑中 1 和 0 。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/3c390e8f4f656ddc4d33a5d0d4a892a9.gif" src="https://cdn.sspai.com/2023/10/07/3c390e8f4f656ddc4d33a5d0d4a892a9.gif"/&gt;&lt;figcaption&gt;晶体管导电与绝缘的状态切换（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;电压是被加载在其中一条金属上的，它叫做栅极。一会导电一会绝缘的地方是下方的半导体，其实就是硅本身。硅里面被掺入了其他原子，根据掺杂的原子种类的不同，半导体的部分又被分为源极、漏极、衬底。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/0ccbe8ad6af9002d3d46c0e4da6f1b94.gif" src="https://cdn.sspai.com/2023/10/07/0ccbe8ad6af9002d3d46c0e4da6f1b94.gif"/&gt;&lt;figcaption&gt;晶体管各部分结构示意动画（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;硅是怎么变成一个开关的？&lt;/p&gt;&lt;p&gt;由于掺入了不同的原子，源极、漏极的内部都是导电的，而它们之间的部分并不导电。&lt;/p&gt;&lt;p&gt;随着电压一点点被施加，中间不导电的区域表面会渐渐形成一个可以导电的地方，将源和漏导通在一起。这里就是导电沟道，虽然名字叫沟道，但它其实是半导体表面一个非常非常薄的可以导电的薄层。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/ce2c34d5a5e6ef38ebaf0bd8d167a1c5.gif" src="https://cdn.sspai.com/2023/10/07/ce2c34d5a5e6ef38ebaf0bd8d167a1c5.gif"/&gt;&lt;figcaption&gt;导电沟道示意动画（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;通常，人们用导电沟道的长度代表晶体管的工艺，或者说晶体管有多小，比如 32 纳米工艺，说的就是这里。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/bdcd65b70cbe0172d6c768599c4b8f70.png" src="https://cdn.sspai.com/2023/10/07/bdcd65b70cbe0172d6c768599c4b8f70.png"/&gt;&lt;figcaption&gt;导电沟道的长度代表晶体管的工艺（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;研究到这，我找到了构成算力最基本的东西，晶体管——一个电压控制的开关，对应电脑中的信号 1 和信号 0。某种程度上，晶体管的数量决定了一张芯片的性能。&lt;/p&gt;&lt;p&gt;当开关的数量从 1 个变成 2000 个。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/31d7294d83f27ddddf87e8b01fc5b60f.png" src="https://cdn.sspai.com/2023/10/07/31d7294d83f27ddddf87e8b01fc5b60f.png"/&gt;&lt;figcaption&gt;   英特尔 4004（1971 年），晶体管数量 2300，算力 60000 Instructions Per Second&lt;br/&gt;（图源：《青工所》S02E10）                   &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;300 万个——&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/64785ea024203d18a408d79765e176da.png" src="https://cdn.sspai.com/2023/10/07/64785ea024203d18a408d79765e176da.png"/&gt;&lt;figcaption&gt;英特尔奔腾 P5（1993 年），晶体管数量 310 万，算力 3×10^7 Floating point OPS&lt;br/&gt;（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;160 亿个——&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/446b975e6bd85e114e3f1f55134ebd9f.png" src="https://cdn.sspai.com/2023/10/07/446b975e6bd85e114e3f1f55134ebd9f.png"/&gt;&lt;figcaption&gt;苹果 M1（2020 年），晶体管数量 160 亿，算力 26×10^11 Floating point OPS&lt;br/&gt;（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;算力就这样诞生了。&lt;/p&gt;&lt;p&gt;今天，我同事每天都想用 AI 搞点事情，算力几乎就等于生产力，你我能同时使用的晶体管个数已经成为了一种资产。更强的算力意味着更多的晶体管，也就是更——大！&lt;/p&gt;&lt;p&gt;今天世界上最大的显卡变成了这样。晶体管的数量达到了 5 万亿个。这样看好像今天的算力并没有锁死，反而更强了。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/00f25d7e0ad0f20955ff86550d92c48c.png" src="https://cdn.sspai.com/2023/10/07/00f25d7e0ad0f20955ff86550d92c48c.png"/&gt;&lt;figcaption&gt;英伟达 GH200（2023 年），晶体管数量 512000 亿，算力 1×10^18  Floating point OPS                     （图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;但这件事太不对劲了。实际上，你并不能用这 5 万亿个晶体管来玩《显卡危机》，有资格使用这张巨大显卡的只有 Google Cloud、Meta、Microsoft 这几家公司。此去经年，那些让你眼前一亮的游戏，以及游戏之外关于未来的种种想象：在笔记本上训练一颗心智，在手机上预测一场台风，甚至量身定制一款药物，都不可能在你能拿在手里的设备上实现了。未来有资格干这些事的，可能依然是那几家大公司。&lt;/p&gt;&lt;p&gt;于是，我开始好奇，当算力以「巨物的形态拔地而起」究竟是意味着兴盛？还是一场算力的终结？&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;被垄断的巨物 &lt;/strong&gt;&lt;/h2&gt;&lt;h3&gt;| 电子管时代&lt;/h3&gt;&lt;p&gt;这让我想起晶体管被发明前的时代。那时的算力，依赖于一个看起来很像电灯泡的东西——电子管。它也是一个电压控制的开关，在代表 0 或 1 的两种电压作用下，电子管内或是导电，或是关断。&lt;/p&gt;&lt;p&gt;在那个年代，更强的算力同样意味着「大」。更大的屋子，更多的机柜，就能同时放下数量更庞大的电子管，幽黄色的光芒下，好像每个人都有光明的未来。&lt;/p&gt;&lt;p&gt;真的是这样吗？&lt;/p&gt;&lt;p&gt;如果算力真的往「大」的方向发展，其实就意味着个人计算设备不存在了，没有笔记本电脑，没有手机，算力将不再属于个人，只能被大机构垄断和控制，但这并没有发生。事实上，仅仅是今天一台智能手机的算力，如果用电子管来实现，放不下，也造不完。制造这样一个电子管堆砌的巨物，将在空间上堆满整个地球，时间上堆满整个世纪。&lt;/p&gt;&lt;p&gt; 只堆料增加晶体管数量，好像并不能拯救算力。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;小一点，再小一点 &lt;/strong&gt;&lt;/h2&gt;&lt;h3&gt;| MOS管时代&lt;/h3&gt;&lt;p&gt;四零年代的人们发现，如果仅靠堆数量不可行的话，那么打破个人算力锁死的办法就是找到一种能变得更小、更便宜、更省电的开关。&lt;/p&gt;&lt;p&gt;从物理上讲，电子管的体积、造价、功耗都不太可能持续地变小。所以，他们到死也不会「梦见」智能手机的诞生。电子管的时代天生就是一个算力被锁死的时代。&lt;/p&gt;&lt;p&gt;1960 年，贝尔实验室的默罕默德·马丁·阿塔拉和姜大元给出了解决算力锁死的答案——MOS 管，也就是我们开头提到的那个东西。准确地说，叫平面型晶体管，顾名思义，从上到下，导体，绝缘体，半导体，像三明治一样分层叠在一起。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/8ea4f5aa09d068e110edde1b3efeee6d.gif" src="https://cdn.sspai.com/2023/10/07/8ea4f5aa09d068e110edde1b3efeee6d.gif"/&gt;&lt;figcaption&gt;平面型晶体管拆分示意动画（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;世界上的晶体管很多，变小的最大限制是发热，如果上亿份热量集中到 1 平方厘米的面积，工作时散发的热量本身就可以把芯片烧毁。只有 MOS 管能在 1 平方厘米的空间内堆满上百万甚至上亿个。这是因为，当一个 MOS 管变小时，一切都会变得更好：功耗下降，与功耗相伴的发热也随之降低，甚至每一个管的速度也会变得更快。 &lt;/p&gt;&lt;p&gt;MOS 管尺寸缩小后，一切都变好了。这是怎么做到的？&lt;/p&gt;&lt;p&gt;让我们在电脑中做个虚拟的实验。这个窗口代表芯片中最小的电路。要想让它正常工作，你需要先连接上电源电压和地，你可理解成接上了正极、负极，给这块电路通上了电。这时给一个输入信号，就会得到相应的输出。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/0fe8e1f526bca74f7ea50aa251a324e3.gif" src="https://cdn.sspai.com/2023/10/07/0fe8e1f526bca74f7ea50aa251a324e3.gif"/&gt;&lt;figcaption&gt; 芯片电路工作虚拟实验（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;电路中只有两个 MOS 管，查看这个电路的细节，两个 MOS 管被金属连接在一起。我们刚刚接好的电源电压和地，以及输入和输出是分别加载在这四个位置的。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/e4a08655ac40e6deb81af83ba468af1c.gif" src="https://cdn.sspai.com/2023/10/07/e4a08655ac40e6deb81af83ba468af1c.gif"/&gt;&lt;figcaption&gt;芯片电路工作虚拟实验（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;让我们再次输入一串 0 和 1 ，也就是交替输入高低两种电压。屏幕上监测了最终输出的电压和电流大小。可以看到，大多数时候电流是 0，没有电流就没有功耗，不费电也不发热。当输入信号被处理，或者说被计算的瞬间，才会在瞬间产生一个尖峰电流，此时电路才会耗电、发热。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/aab31358e2de2ccfd4d32c70ff5c94e8.png" src="https://cdn.sspai.com/2023/10/07/aab31358e2de2ccfd4d32c70ff5c94e8.png"/&gt;&lt;figcaption&gt; 输入信号被处理时产生的尖峰电流（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;功耗的大小就是电压和电流两条曲线相乘，也就是这个面积。现在，我们来修改下 MOS 管的尺寸，也就是让沟道长度变得更小。电压曲线变得更方正，电流更锐，代表功耗的面积也变小了。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/4e914f7df45b2b1ecde55c23b3aa955e.gif" src="https://cdn.sspai.com/2023/10/07/4e914f7df45b2b1ecde55c23b3aa955e.gif"/&gt;&lt;figcaption&gt;缩小导电沟道长度后的电压、电流变化（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;真不错，但其实我们还可以更进一步。&lt;/p&gt;&lt;p&gt;减小尺寸还意味着你不需要太大的电压来驱动它。我们还可以适当减小电源电压，功耗又可以再降低更多。这还带来另一个隐形的好处，缩小尺寸让输出信号更锐利，于是我们有足够空间主动地提升开关切换的频率，也就是让芯片算得更快。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/bceb5cc35aa5f242ec0fc164c0f4bf82.gif" src="https://cdn.sspai.com/2023/10/07/bceb5cc35aa5f242ec0fc164c0f4bf82.gif"/&gt;&lt;figcaption&gt;减小电源电压后的输出情况：越密集，就代表算得越快（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2&gt;&lt;strong&gt;晶体管与算力的大爆发&lt;/strong&gt;&lt;/h2&gt;&lt;h3&gt;| 集成电路时代&lt;/h3&gt;&lt;p&gt;MOS 管完美解决了空间上放不下的问题。但要打破算力锁死，让每个人都用得起，晶体管还要变得更便宜。&lt;/p&gt;&lt;p&gt;这难不倒技术爆发的二十世纪。在 1957 年，一个计算机系统需要大量电子管手工连线，这已经让工程师非常苦恼。晶体管时代，数量更多，连线更复杂。一个一个地生产晶体管再连接到一起，是不可能完成任务。此时，罗伯特·诺顿·诺伊斯提出了一种新的工艺，催生了一种新的制造方式，我们称它叫集成电路。&lt;/p&gt;&lt;p&gt;集成电路的做法则是直接在一整个硅晶体表面，同时做出全部的晶体管与连接它们的导线。今天一个小方块上就有 200 亿个晶体管，它们是被同时生产出来并连接在一起的。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/365e6680308ea7b8eac7819c0140397a.jpg" src="https://cdn.sspai.com/2023/10/07/365e6680308ea7b8eac7819c0140397a.jpg"/&gt;&lt;figcaption&gt;  集成电路做法示意图（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;从 2000 个到 200 亿个，数量增加千万倍，但工序，也就是制造的难度只增加几倍。这使得生产效率极大地提升，每一个晶体管也变得更便宜，这是一个简单的经济学问题。正如 Intel 创始人戈登摩尔提出的那个著名的摩尔定律：「集成电路上的晶体管将每两年翻一番」&lt;/p&gt;&lt;p&gt;集成电路工艺的演进让晶体管更小、更多、更廉价，算力在此刻有了一个明晰的标准，那就是单位面积的集成电路上拥有的晶体管数量。算力像空气和水一样变成每一个人都可以轻松获取的资源。每个人都美好的未来。&lt;/p&gt;&lt;p&gt;然而，这场晶体管与算力的大爆发好像不会一直持续下去。&lt;/p&gt;&lt;p&gt;1999 年，一场关于「晶体管不再会变小」「算力将被锁死」的论调开始在人群中蔓延。&lt;/p&gt;&lt;p&gt;1999 年，发生了什么，为什么人们如此焦虑？&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;鬼魅般的漏电&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;焦虑的源头是这样一个表格，上面赫然写着「技术路线的终结」。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/b38948ca90518d6ace9dbd7c79b26281.png" src="https://cdn.sspai.com/2023/10/07/b38948ca90518d6ace9dbd7c79b26281.png"/&gt;&lt;figcaption&gt;表格表示当工艺来到35nm时即将来到「技术路线的终结」（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;表格上有两行数据，分别是导电沟道的长度和绝缘体的厚度。把这组数画在一个坐标系里，能看出它们高度关联。导电沟道越短，绝缘体的厚度就要越薄。这似乎是个很重要的信息。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/7aa213d6cd8c78d976e9288e3fd006ec.png" src="https://cdn.sspai.com/2023/10/07/7aa213d6cd8c78d976e9288e3fd006ec.png"/&gt;&lt;figcaption&gt;导电沟道-绝缘体厚度关系图（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;翻了几本书，我发现它们在解释这件事时都提到了同一个词——漏电。&lt;/p&gt;&lt;p&gt;漏电是什么？拿平面型 MOS 管举例。源极接地，也就是 0V；漏极接正的电源电压，假如说是 5V；绝缘体外的栅极接输入信号，也就是在 0V 和 5V 之间来回跳转，它们分别代表信号0，信号 1。这便是 MOS 管日常的工作状态。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/3e9858e4bddc6839a0196a29944e1ebb.gif" src="https://cdn.sspai.com/2023/10/07/3e9858e4bddc6839a0196a29944e1ebb.gif"/&gt;&lt;figcaption&gt;MOS 管日常的工作状态（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;当尺寸小的一定程度时，半导体会误把漏极的电压当成栅极的电压，形成持续的漏电流。这会让晶体管一直处于半导通的状态，持续耗电，让整体的功耗增加。增加功耗其实还是小事情，当导通与关断变得不鲜明，它表示的 0 和 1 也变得模糊不清，整个功能都乱套了。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/dab414cf37e9f39a89689abaebd9e0ae.gif" src="https://cdn.sspai.com/2023/10/07/dab414cf37e9f39a89689abaebd9e0ae.gif"/&gt;&lt;figcaption&gt;MOS 管漏电时的工作状态（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;解决办法是让有用的电压信号重获控制权，也就是让中间的绝缘体变薄，让栅极电压距离半导体近一些。更薄的绝缘体让栅极的信号距离更近，对抗漏极电压干扰的能力越强。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/3e69e57b610bf61cbd05de4c74f065d9.png" src="https://cdn.sspai.com/2023/10/07/3e69e57b610bf61cbd05de4c74f065d9.png"/&gt;&lt;figcaption&gt;MOS 管漏电时的工作状态（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;这时我们终于能看懂这份报告。&lt;/p&gt;&lt;p&gt;为了把导电沟道做得更窄，我们不得不把绝缘体的厚度额外打薄一些。让栅极距离导电沟道更近，抵过漏极对导电沟道的影响。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/1e3ea4ca145e7111128808f8c2b57bae.gif" src="https://cdn.sspai.com/2023/10/07/1e3ea4ca145e7111128808f8c2b57bae.gif"/&gt;&lt;figcaption&gt;打薄绝缘体解决漏电问题（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;当绝缘体厚度接近一层原子的厚度时，就不能变得更薄了，也就是零点几纳米。此时对应的沟道长度是 35 纳米。也就是这种晶体管的终结。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/0ade831f09700333ddb8f4236d069224.png" src="https://cdn.sspai.com/2023/10/07/0ade831f09700333ddb8f4236d069224.png"/&gt;&lt;figcaption&gt;人们预测35纳米为MOS晶体管沟道长度的极限（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;这就是各大芯片公司的工程师与科学家十年探索无果后的结论。二十世纪八十年代，大家发现当工艺接近 35 纳米的时候，晶体管就不能再变小了。各种方案陆续登场，或是技术或是成本的原因，这些方案又被一次次抛弃。大家预测，2010 年工艺将来到 35 纳米，也就是算力的末日。&lt;/p&gt;&lt;p&gt;当然，2023 年的我们知道这件事并没有发生，这二十年来一块芯片上晶体管的数量依然以很高的速度增加。这之间又发生了什么？&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;迟到的算力末日&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;2010 年是一个关键的时间点。如果晶体管没有走向终结，那我们只需要看看 2010 年前后各大处理器厂商都在干什么就好了。&lt;/p&gt;&lt;p&gt;看完几场发布会与报导，一个关键词浮出水面——FinFET，这似乎是一个很格外重要的东西，它的背后是一个华人的名字——胡正明。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/1eb20abd6b83ec8f4c8bc3dc09fdeb5e.png" src="https://cdn.sspai.com/2023/10/07/1eb20abd6b83ec8f4c8bc3dc09fdeb5e.png"/&gt;&lt;figcaption&gt;胡正明（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;现在回看胡正明的工作其实并不复杂，他只回答了一个问题：漏电流会从哪里经过呢？你或许会问，这有什么值得研究的？既然导通时电流从导电沟道经过，漏电不也该发生在这里吗？&lt;/p&gt;&lt;p&gt;还真不是。&lt;/p&gt;&lt;p&gt;胡正明给出了一个不一样的结论——经过计算和模拟，漏电发生的位置比人们猜想的更深。就像下方的示意图，颜色越红，代表电流密度越大，可以看到漏电发生在更深的地方，而不是导电沟道附近。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/3fd3a4d3721e4dcf248f8930a96af641.png" src="https://cdn.sspai.com/2023/10/07/3fd3a4d3721e4dcf248f8930a96af641.png"/&gt;&lt;figcaption&gt;漏电位置示意图（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;所以之前的科学家努力的方向好像都不太对，如果漏电发生在深处而不是表面，将绝缘体做薄，栅极有用的信号确实会距离漏电的地方更近一些，但已经不足以和干扰拉开差距，再薄的氧化物也鞭长莫及。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/eb1685d28af8ae97f00d734db71cf54b.gif" src="https://cdn.sspai.com/2023/10/07/eb1685d28af8ae97f00d734db71cf54b.gif"/&gt;&lt;figcaption&gt;（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;好用的办法都失效了，减小尺寸，让绝缘体变薄，都无法解决漏电的问题。于是一个更离谱的想法诞生了。漏电发生在半导体深处，那如果更深的地方没有半导体存在，漏电流不久也跟着消失了吗？&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/de2a09183e423de417fd6d0fbffda594.gif" src="https://cdn.sspai.com/2023/10/07/de2a09183e423de417fd6d0fbffda594.gif"/&gt;&lt;figcaption&gt; 胡正明解决漏电难题的思路（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;把这个看似天真到有点傻的办法转变成正经的科学研究就是它：&lt;/p&gt;&lt;p&gt;这里是半导体，可以看到，半导体越薄，这个图中的颜色就越绿、越蓝，代表漏电流越小。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/62e89d29c2933fbc22a05b52cc8678fc.gif" src="https://cdn.sspai.com/2023/10/07/62e89d29c2933fbc22a05b52cc8678fc.gif"/&gt;&lt;figcaption&gt;胡正明关于漏电的研究：半导体越薄，漏电流越小（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;接下来，就是要把这个想法变成现实。&lt;/p&gt;&lt;p&gt;漏电，只要足够薄就能解决。在三维软件中将一块半导体变薄十分简单。但现实中，极其复杂，并且十分昂贵。怎样把这个薄薄的东西造出来，还要保证足够便宜呢？一个诡异的想法在胡正明的大脑中诞生。&lt;/p&gt;&lt;p&gt;还是原来厚厚的平面型晶体管，如果能把上面这一层掀起来，掀个 90 度，立在硅表面，一个超薄晶体管就形成了。只不过这个超薄晶体管是立着放的。源极、漏极、栅极、导电沟道，还和原来一样。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/5bdc5558f133692d1ac1cea95c9a356f.gif" src="https://cdn.sspai.com/2023/10/07/5bdc5558f133692d1ac1cea95c9a356f.gif"/&gt;&lt;figcaption&gt;胡正明关于「超薄晶体管」的设想（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;这个尺寸，也就是晶体管的厚度，决定了漏电流的大小。像现在这么薄时，漏电流就可以忽略了。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/10efdb958156d72d72d2a6dc4092c0ba.png" src="https://cdn.sspai.com/2023/10/07/10efdb958156d72d72d2a6dc4092c0ba.png"/&gt;&lt;figcaption&gt;（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;这种方案，还能在有限空间内放下更多的超薄晶体管。我们可以把这个薄片复制几份，像这样一起立在硅上。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/8642d616a7cad7af05c59083c14ae58d.png" src="https://cdn.sspai.com/2023/10/07/8642d616a7cad7af05c59083c14ae58d.png"/&gt;&lt;figcaption&gt;（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;既然晶体管已经立起来了，它们的栅极和其他金属也要找个新位置。只需要直接盖上一条金属，当做它们共同的栅极，4 个立起来的晶体管就完成了。令人难以置信的是，造这样一个奇葩的结构，要比直接减薄的方案更便宜，也更容易。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/ffe6882ce753c00090fc9fe65cb87199.png" src="https://cdn.sspai.com/2023/10/07/ffe6882ce753c00090fc9fe65cb87199.png"/&gt;&lt;figcaption&gt;（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;要理解这个反常的结论，我们首先要探寻厚厚的老式平面型晶体管其中的一个细节——STI（Shallow Trench Isolation浅槽隔离）。这个名称其实还挺形象的，其实就是在硅片上挖许多槽，用绝缘的氧化物填满。厚厚的老式平面型晶体管生长在这些槽之间。这样一来绝缘槽就能将晶体管隔离起来，防止两个晶体管之间相互干扰。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/e7f5148b8e107c4ef0696449d26f7819.png" src="https://cdn.sspai.com/2023/10/07/e7f5148b8e107c4ef0696449d26f7819.png"/&gt;&lt;figcaption&gt; STI（Shallow Trench Isolation浅槽隔离）工艺（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;既然已经挖槽了，那么挖的稍微密一些，深一些，在工艺上也不会太难做。于是，一个个高高立起的薄片形成了。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/dff3487b44408f0b34730de529c0cdcf.png" src="https://cdn.sspai.com/2023/10/07/dff3487b44408f0b34730de529c0cdcf.png"/&gt;&lt;figcaption&gt;（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;仔细看，如果你不把挖下去的地方当成槽，而是把这个突起的薄片当成一个立着的薄晶体管，胡正明的想法就实现了，还是我们熟悉的栅极、源极、漏极，而导电沟道在这里。这里越薄，漏电流就越小到可以忽略。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/345807084cdafaf9fd8a3a61e58284ac.gif" src="https://cdn.sspai.com/2023/10/07/345807084cdafaf9fd8a3a61e58284ac.gif"/&gt;&lt;figcaption&gt;（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;立起来的一个个超薄晶体管如同鱼鳍，人们给它起了一个形象的名字——FinFET，鳍式场效应晶体管。&lt;/p&gt;&lt;p&gt;FinFET 的想法在 1999 年诞生，十年后，平面型晶体管进入 32nm 的时代，正如当初的预言，这也是它最后一个时代。2011 年，第一批使用 FinFET 工艺的处理器问世，人们终于突破了 30 纳米的魔咒，进入了 20 纳米的时代。&lt;/p&gt;&lt;p&gt;值得注意的是，此后厂家宣传的 22 纳米、14 纳米、7 纳米、3 纳米，都不再代表导电沟道的尺寸。由于标准不一样，这些数字所衡量的位置没有统一的标准，同样是 7 纳米，大小也许完全不一样， 5 纳米也可能比 7 纳米更大，很难说谁比谁更先进。&lt;/p&gt;&lt;p&gt;今天，各大厂商在 FinFET 基础上缝缝补补，依然诉说着豪言壮语，续写着摩尔定律的传奇。但随着尺寸进一步减小，漏电以及漏电之外的其他问题相继出现在 FinFET 上。FinFET 的尺寸极限也许并不遥远。我们迟早要面临与 1999 年类似的窘境，直到有一天，廉价的芯片再一次变成昂贵的巨物，个人拥有的算力再一次迎来停滞的威胁。&lt;/p&gt;&lt;p&gt;那么，人们该如何面对个人算力停滞的阵痛期呢？&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;阵痛期的人类&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;想到现如今的智能汽车产业，他们或许对芯片有着更多的需求。于是，我来到了红旗的芯片选型部门，打算亲自看看汽车芯片是什么样的。&lt;/p&gt;&lt;p&gt; 「现在的芯片选型有没有算力不足的焦虑？」一见面，我就把问题抛向了红旗新能源智能网联工程师赵目龙。他告诉我，算力是当前智能驾驶、智能座舱等技术指标里的关键一项。不同于传统汽车，当前我们需要的算力是AI、GPU、CPU的算力，整个计算芯片的工作频率都会在 GHz 以上，未来很有可能要超过高端手机芯片的性能指标。&lt;/p&gt;&lt;p&gt;GHz 是什么样的概念？&lt;/p&gt;&lt;p&gt;传统汽车搭载的是多个微控制器（MCU），它们的算力很低，只能采集和控制汽车的运行状态，比如最重要的喷油控制。&lt;/p&gt;&lt;p&gt;而新能源车更像是一台飞驰的电脑，除了 CPU 本身的算力更强，更复杂，还包含了与自动驾驶相关的 AI 算力和图形算力。工作主频也达到 GHz，未来可能将超过手机。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/47e67b17db2caade89489b80c29e36b3.png" src="https://cdn.sspai.com/2023/10/07/47e67b17db2caade89489b80c29e36b3.png"/&gt;&lt;figcaption&gt;新能源汽车的 AI 算力与工作频率（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;今天，一辆红旗新能源车内就有超过 10 TOPS 的算力，而正在开发阶段的 500 TOPS 平台，将对 L3 高级别自动驾驶需求发起挑战。同时，1000 TOPS 平台也已进入规划阶段。通过算力预埋，一辆车的算力始终走在驾驶需求的前面。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/9079bb9ccfd6b971c3a33e3bde3e7898.png" src="https://cdn.sspai.com/2023/10/07/9079bb9ccfd6b971c3a33e3bde3e7898.png"/&gt;&lt;figcaption&gt;红旗新能源的算力预埋规划（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;这意味工程师可以在一辆车里完成更多的事情：L2+ 级自动驾驶；更高效、安全的中央化控制系统；以及座舱内定制化的交互体验。红旗新能源智能网联工程师李岩告诉我：「软件会承载更多的这种功能和需求，迭代速度也会更快。通过整体设计，未来这种功能的集成会越来越多，软件会变得越来越复杂。」&lt;/p&gt;&lt;p&gt;这次沟通让我收集到了一些乐观的信息：红旗对算力的规划和预埋让汽车变得比原来更聪明，而且这一过程似乎不会减慢。同时，芯片这个硬件本身也依然以很高的速度更新迭代。&lt;/p&gt;&lt;p&gt;于是我又产生了一个新的问题：在晶体管不会更小更多更快的前提下，能不能造出更便宜，算力还更强的芯片呢？&lt;/p&gt;&lt;p&gt;借着研究，我很荣幸和中国科学院计算技术研究所研究员、龙芯 CPU 首席科学家胡伟武取得了联系。更没想到的是，第一次见面，胡伟武就邀请我一起玩游戏，竟是为了测试龙芯 3A6000。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/8ca85f4c356272443b52bde3092b239a.png" src="https://cdn.sspai.com/2023/10/07/8ca85f4c356272443b52bde3092b239a.png"/&gt;&lt;figcaption&gt; 3A6000 芯片（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;在胡伟武看来，3A6000（芯片）对我们国家来说是有里程碑意义的，标着着相同工艺下，国产芯片的性能跟 Intel 和 AMD 比不差了。跟 AMD 12 纳米的 Zen 和 Zen+ 比，四核比四核，单核比单核，相同工艺下，我们都不差。当然，我们是用设计提高性能的。&lt;/p&gt;&lt;p&gt;所以，在晶体管尺寸被锁死的未来，我们还可以通过更好的设计，继续提高芯片算力。&lt;/p&gt;&lt;p&gt;芯片设计，其实就是想办法把上百万个晶体管连起来，比如把这几个小电路相连，就得到了一个半加器。16 个半加器组合在一起就组成了一个 8 位加法器。然而，当我费半天劲把这个加法器做完时，已经花了一个小时。如果要把几百万个这样的小东西连接在一起，徒手画出真实的芯片电路，可能需要好几年。所以，设计处理器芯片的工程师通常是写代码。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/7de9e9c33c9bf018f0afb4bb476fccb5.png" src="https://cdn.sspai.com/2023/10/07/7de9e9c33c9bf018f0afb4bb476fccb5.png"/&gt;&lt;figcaption&gt;（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;那么，芯片是怎么被代码设计出来的呢？&lt;/p&gt;&lt;p&gt;这个电路可以做与非运算，对应的代码是它。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/0332912bfecd677134afba32a4dd07b0.png" src="https://cdn.sspai.com/2023/10/07/0332912bfecd677134afba32a4dd07b0.png"/&gt;&lt;figcaption&gt; 与非运算电路设计代码（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;这个电路可以做 1 位加法，代码是这样。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/0ab4b2e896d7f58f00f916aa1928546a.png" src="https://cdn.sspai.com/2023/10/07/0ab4b2e896d7f58f00f916aa1928546a.png"/&gt;&lt;figcaption&gt;1位加法运算电路设计代码（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;更复杂的电路，就需要更多行代码。一块芯片一般需要几百万行代码。&lt;/p&gt;&lt;p&gt;不同的是，写代码的效率，要比画这样的版图高多了，关键是还能读得懂。&lt;/p&gt;&lt;p&gt;从代码到芯片还需要两步，先把代码翻译成这样的网表，是不是看起来更像个电路图了，这个过程叫逻辑综合，是电脑自动完成的。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/3604acaf57594919b4b36534ca077cb5.png" src="https://cdn.sspai.com/2023/10/07/3604acaf57594919b4b36534ca077cb5.png"/&gt;&lt;figcaption&gt;逻辑综合（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;网表中的每一块对应了这样一个小方块样子的电路，里面有几个或者十几个晶体管。线代表这些小电路之间是怎么被连接起来的。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/d869e703f27d6e39d62e37b527fbe653.png" src="https://cdn.sspai.com/2023/10/07/d869e703f27d6e39d62e37b527fbe653.png"/&gt;&lt;figcaption&gt;逻辑综合（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;接着，电脑会自动地把所有小电路一行行排列在一起，然后再根据网表中的连法，将这些小方块用一层层横平竖直的导电金属连接起来。这样一张芯片图纸就完成了。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/07/e33fc5ba9fc9ebef21189c2a935f0ed6.png" src="https://cdn.sspai.com/2023/10/07/e33fc5ba9fc9ebef21189c2a935f0ed6.png"/&gt;&lt;figcaption&gt;芯片版图（图源：《青工所》S02E10）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;了解了什么是设计。&lt;/p&gt;&lt;p&gt;性能更好的芯片，就是在写代码时，让它描述的电路本身处理数据更快；在把代码转换成实际版图时，让实际的电路面积更小，功耗更低。&lt;/p&gt;&lt;p&gt;从 3A5000 到 3A6000，干的就是这些事。虽然晶体管尺寸没有变化，但是更高效的代码、更优的布局和布线方案，带来了 1.6 倍的性能提升。&lt;/p&gt;&lt;p&gt;事实上，这么做的不仅是工艺被制约的中国。早在 21 世纪初，第一次算力危机前后，Intel 就把设计作为提升性能的重要一环。&lt;/p&gt;&lt;p&gt;2011 年，第一代 FinFET 暂时拯救了摩尔定律，经历了一次危机的厂商很清楚，这持续不了多久。  &lt;/p&gt;&lt;p&gt;如果说晶体管工艺的演进是对物理极限的挑战，那么设计优化更像是一个数学问题。&lt;/p&gt;&lt;p&gt;200 亿个晶体管背后是无穷多种可能与几乎无限大的求解空间，最优解就藏匿其中，但没人知道它在哪。&lt;/p&gt;&lt;p&gt;今天这种解决方案很难让人放下对于算力锁死的担忧，我们尚不确定它是新的希望，还是另一个深渊。但知晓了这一切后，至少我更愿意相信，人类是可以解决当下这次算力危机的。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;人类算力被锁死了吗&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;关于算力被锁死的思考并不是在今天突然产生的，它如同一把悬着的剑，伴随着晶体管诞生后的每一个时代，和每一个正在思考的人类。  &lt;/p&gt;&lt;p&gt;所以，人类算力被锁死了吗？我的答案是，是与不是都不正确。我发现是人类的悲观、杞人忧天，才破解了每个时代的锁死。&lt;/p&gt;&lt;p&gt;至少我还愿意相信关于探索算力边界与寻找数学最优解的故事不会在我生活的时代戛然而止。&lt;/p&gt;&lt;p&gt;因为我们再也回不去那个算力天生就是被锁死的旧时代。&lt;/p&gt;&lt;p&gt;我们必须知道，我们终将知道。&lt;/p&gt;&lt;p&gt;&lt;i&gt;Wir müssen wissen.Wir werden wissen.&lt;/i&gt;——David Hilbert&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;注：《青年理工工作者生活研究所》由腾讯视频尤里卡工作室制作出品。&lt;/p&gt;&lt;p&gt;&amp;gt; 下载 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;少数派 2.0 客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，解锁全新阅读体验 📰&lt;/p&gt;&lt;p&gt;&amp;gt; 实用、好用的 &lt;a href="https://sspai.com/mall" target="_blank"&gt;正版软件&lt;/a&gt;，少数派为你呈现 🚀&lt;/p&gt;&lt;/div&gt;</description><author>青工所</author><guid>https://sspai.com/post/83398</guid><pubDate>Mon, 09 Oct 2023 07:00:00 GMT</pubDate></item><item><title>在浏览器里使用机械翻译和电子词典</title><link>https://sspai.com/post/83385</link><description>&lt;div&gt;&lt;p&gt;&lt;strong&gt;Matrix 首页推荐&lt;/strong&gt; &lt;/p&gt;&lt;p&gt;&lt;a href="https://sspai.com/matrix" target="_blank"&gt;Matrix&lt;/a&gt; 是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。&lt;/p&gt;&lt;p&gt;文章代表作者个人观点，少数派仅对标题和排版略作修改。&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;早些年时候，由于剩余的精力和兴致，我在 Wiki 上翻过一些天文地理等等的不着边的页面。一些中文页，只是翻译了原文的开头或部分的内容。有几次，我就点进了语言栏，切到英语，目测了篇幅。那些密密麻麻的鬼话，就构成了我很长一段时间里，对网络上的外语内容的印象。&lt;/p&gt;&lt;p&gt;2018 年左右，我在搜索和阅读时，了解到了 &lt;a href="https://chocolatey.org/" target="_blank"&gt;Chocolatey&lt;/a&gt;、&lt;a href="https://cmder.app/" target="_blank"&gt;Cmder&lt;/a&gt;、&lt;a href="https://hexo.io/index.html" target="_blank"&gt;Hexo&lt;/a&gt; 等一众软件或框架。翻着中文文章和文档，我作为小白渡过了担惊受怕的初见阶段。随着经验值提升，在某一天，我也终于装备上了&lt;a href="https://saladict.crimx.com/" target="_blank"&gt;沙拉查词&lt;/a&gt;、&lt;a href="https://foosoft.net/projects/yomichan" target="_blank"&gt;Yomichan&lt;/a&gt; 等翻译、字典工具，开始到「本地化」外的地方野游。&lt;/p&gt;&lt;h2&gt;沙拉查词&lt;/h2&gt;&lt;p&gt;我在浏览器内外，都使用&lt;a href="https://saladict.crimx.com/" target="_blank"&gt;沙拉查词&lt;/a&gt;来查段落或者句子，通过&lt;a href="https://saladict.crimx.com/native.html#%E6%B5%8F%E8%A7%88%E5%99%A8%E5%A4%96%E5%88%92%E8%AF%8D" target="_blank"&gt;剪切板作为中继&lt;/a&gt;的方式。可以说，只要有英文，我就可能使用它。&lt;/p&gt;&lt;p&gt;为了让功能更稳定，我在「设置 → 词典帐号」中添加了词典帐号，在「设置 → 词典设置」添加了&lt;a href="https://fanyi.qq.com/" target="_blank"&gt;腾讯翻译君&lt;/a&gt;，也就是&lt;a href="https://cloud.tencent.com/" target="_blank"&gt;腾讯云&lt;/a&gt;的&lt;a href="https://cloud.tencent.com/act/cps/redirect?redirect=10324&amp;amp;cps_key=f92625eba44ff7159e1b611916c36826" target="_blank"&gt;机械翻译 TMT&lt;/a&gt; 服务。如果同时使用代理梯子，需要在梯子的规则中设置域名&lt;code&gt;tencentcloudapi.com&lt;/code&gt;为「直连」。&lt;/p&gt;&lt;p&gt;作为一种廉价、机械的服务，机械翻译始终是一板一眼的。它生硬难啃，还保留了原文的些许痕迹，也倒方便了作对照。如果你不需要进行具体的翻译作业，那么沙拉查词足够好用。例如，这是博物学家&lt;a href="https://en.wikipedia.org/wiki/Alfred_Russel_Wallace" target="_blank"&gt;阿尔弗雷德·华莱士&lt;/a&gt;的&lt;a href="https://book.douban.com/subject/25728832/" target="_blank"&gt;「马来群岛」&lt;/a&gt;的&lt;a href="https://vivliostyle.org/viewer/#src=//vivliostyle.github.io/vivliostyle_doc/samples/variable-page-size/TheMalayArchipelago/main.xhtml" target="_blank"&gt;一篇介绍&lt;/a&gt;的机翻文：&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/06/3daae4c04658e4884762667cf8ed2ebe.png" src="https://cdn.sspai.com/2023/10/06/3daae4c04658e4884762667cf8ed2ebe.png"/&gt;&lt;/figure&gt;&lt;h2&gt;沉浸式翻译&lt;/h2&gt;&lt;p&gt;当我查 Wiki 时，有时候会使用&lt;a href="https://immersivetranslate.com/" target="_blank"&gt;沉浸式翻译&lt;/a&gt;插件预处理页面，方便扫一眼段落大意。基本上，我不会单独使用它。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/06/e684436af8b97fc6b371f73446f9fda3.png" src="https://cdn.sspai.com/2023/10/06/e684436af8b97fc6b371f73446f9fda3.png"/&gt;&lt;/figure&gt;&lt;h2&gt;在线词典助手&lt;/h2&gt;&lt;p&gt;翻译工具以外，我还需要词典。我想要它「速度快、排版密集、使用鼠标取词」。我找到了 &lt;a href="https://github.com/ninja33/ODH" target="_blank"&gt;ODH（Online Dictionary Helper）&lt;/a&gt;，它的中文名虽是「在线词典助手」，但我主要使用内置的、也就是离线的「柯林斯英汉双解」词典。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/06/78f33af9b4d9ece1da5b3c2bd00dd2f5.png" src="https://cdn.sspai.com/2023/10/06/78f33af9b4d9ece1da5b3c2bd00dd2f5.png"/&gt;&lt;/figure&gt;&lt;p&gt;但它在交互功能上有些不足。在 Chrome 里，&lt;code&gt;Alt&lt;/code&gt;键被浏览器默认占用，也因此闲置。ODH 没能像沙拉查词和 &lt;a href="https://foosoft.net/projects/yomichan" target="_blank"&gt;Yomichan&lt;/a&gt; 那样夺回&lt;code&gt;Alt&lt;/code&gt;键。而分配&lt;code&gt;Shift&lt;/code&gt;键时，输入文字时按到&lt;code&gt;Shift&lt;/code&gt;，会有奇怪的 Bug。也因此，这个插件默认处于关闭状态。&lt;/p&gt;&lt;p&gt;另外，因为我想密集地显示词义，也不常看例句，就按这个 &lt;a href="https://github.com/ninja33/ODH/issues/296#issuecomment-1474730378" target="_blank"&gt;Issues&lt;/a&gt; 里的步骤隐藏了英文例句。&lt;/p&gt;&lt;h2&gt;在线词典网站&lt;/h2&gt;&lt;h3&gt;Etymonline&lt;/h3&gt;&lt;p&gt;我对词源很感兴趣。我在 Chrome 的地址栏中添加了 &lt;a href="https://www.etymonline.com/" target="_blank"&gt;Etymonline&lt;/a&gt; 网站，以方便搜索它。需要这样设置：&lt;/p&gt;&lt;p&gt;Chrome 地址栏 → 右键 → 管理搜索引擎和网站搜索 → 添加网站搜索 → 「网址格式」处填写&lt;code&gt;https://www.etymonline.com/search?q=%s&lt;/code&gt; → 「搜索引擎」「快捷字词」处按需填写 → 在地址栏输入&lt;code&gt;快捷字词&lt;/code&gt;然后&lt;code&gt;Tab&lt;/code&gt;即可搜索。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/06/371b2d9f03c3d64c3c33424304751dbb.png" src="https://cdn.sspai.com/2023/10/06/371b2d9f03c3d64c3c33424304751dbb.png"/&gt;&lt;/figure&gt;&lt;h3&gt;汉典&lt;/h3&gt;&lt;p&gt;查中文字时，&lt;a href="https://www.zdic.net/" target="_blank"&gt;汉典&lt;/a&gt;下罗列的典故很丰富。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/06/606c2926dc85ee5c0e3ddc5fbcd27d02.png" src="https://cdn.sspai.com/2023/10/06/606c2926dc85ee5c0e3ddc5fbcd27d02.png"/&gt;&lt;/figure&gt;&lt;h2&gt;Yomichan&lt;/h2&gt;&lt;p&gt;&lt;a href="https://foosoft.net/projects/yomichan" target="_blank"&gt;Yomichan&lt;/a&gt;，按官方介绍，它最早出于个人用途而开发，主要用于培养日语素养，也曾想成为一个全方位的学习工具。因其灵活、丰富的特性，成为了另一些工具如 &lt;a href="https://github.com/fauu/Kamite" target="_blank"&gt;Kamite&lt;/a&gt;、&lt;a href="https://xelieu.github.io/jp-lazy-guide/setup/" target="_blank"&gt;Lazy Guide&lt;/a&gt;、&lt;a href="https://github.com/ripose-jp/Memento" target="_blank"&gt;Memento&lt;/a&gt; 的套件。&lt;/p&gt;&lt;p&gt;就一般用户来说，优点主要有：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;可离线使用、支持多词典、速度快&lt;/li&gt;&lt;li&gt;默认排版紧凑美观&lt;/li&gt;&lt;li&gt;配置项丰富、实用&lt;/li&gt;&lt;li&gt;交互灵活、体验好&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;额外的，我使用了 &lt;a href="https://github.com/lxgw/FusionKai" target="_blank"&gt;缝合楷&lt;/a&gt; 作为字典的字体。先下载并安装这个字体，然后在 Yomichan 里进行设置：选项 → Popup Appearance → Configure custom CSS → Popup CSS → Custom CSS&lt;/p&gt;&lt;pre&gt;&lt;code&gt;body {
    font-family: &amp;quot;Fusion Kai G&amp;quot;, sans-serif;
    font-style: normal;
}&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;啃动画生肉&lt;/h3&gt;&lt;p&gt;我一般看翻译的字幕。但按照 &lt;a href="https://github.com/fauu/Kamite#animevideo-text-extraction" target="_blank"&gt;这段说明&lt;/a&gt;，可以用于啃日语生肉。&lt;/p&gt;&lt;p&gt;首先，安装 &lt;a href="https://foosoft.net/projects/yomichan" target="_blank"&gt;Yomichan&lt;/a&gt;、&lt;a href="https://github.com/fauu/Kamite#animevideo-text-extraction" target="_blank"&gt;Kamite&lt;/a&gt;、&lt;a href="https://mpv.io/" target="_blank"&gt;mpv&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;然后，在 Yomichan 拓展程序的图标处右键 → 选项 → Dictionaries → Configure installed and enabled dictionaries → 启用词典「JMdict」。&lt;/p&gt;&lt;p&gt;之后，新建一个&lt;code&gt;kamite.cmd&lt;/code&gt;：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;mpv ^
  --input-ipc-server=\\.\pipe\kamite-mpvsocket ^
  --sub-file=%2 ^
  --sid=2 ^
  --secondary-sid=1 ^
  --secondary-sub-visibility=no ^
  --save-position-on-quit ^
  %1&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;启动 Kamite 后，去终端里运行&lt;code&gt;kamite yourmovie your-jpn-subtitle&lt;/code&gt;就行了。&lt;/p&gt;&lt;h3&gt;啃漫画生肉&lt;/h3&gt;&lt;p&gt;也可以用于看日版漫画。&lt;/p&gt;&lt;p&gt;在有了 Yomichan、Kamite 后，参考 &lt;a href="https://github.com/fauu/Kamite#setting-up-manga-ocr-local" target="_blank"&gt;Setting up &amp;quot;Manga OCR&amp;quot; (Local)&lt;/a&gt; 段落，使用 &lt;a href="https://pypa.github.io/pipx/" target="_blank"&gt;pipx&lt;/a&gt; 安装 &lt;a href="https://github.com/kha-white/manga-ocr" target="_blank"&gt;manga-ocr&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;之后，编辑配置文件&lt;code&gt;C:/Users/yourname/AppData/Roaming/kamite/config.hocon&lt;/code&gt;的&lt;code&gt;ocr&lt;/code&gt;部分，没有提提及的内容，保留默认设置即可：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;ocr: {
  engine: mangaocr
  mangaocr: {
    pythonPath: &amp;quot;C:/Users/yourname/.local/pipx/venvs/manga-ocr/Scripts/python.exe&amp;quot;
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你还需要机翻功能，修改&lt;code&gt;config.hocon&lt;/code&gt;的&lt;code&gt;lookup&lt;/code&gt;和&lt;code&gt;LOOKUP_TARGETS&lt;/code&gt;部分：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;lookup {
  targets = [
    ${LOOKUP_TARGETS.reverso}
    ...
  ]
}

LOOKUP_TARGETS {
  reverso {
    symbol = DEP // 借用DeepL的图标
    name = Reverso
    url = &amp;quot;https://www.reverso.net/text-translation#sl=jpn&amp;amp;tl=eng&amp;amp;text={}&amp;quot;
  }
  ...
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在风味上，&lt;a href="https://www.reverso.net/" target="_blank"&gt;Reverso&lt;/a&gt; 的机翻味很重。如果想使用 &lt;a href="https://www.deepl.com" target="_blank"&gt;Deepl&lt;/a&gt;，需要参考 &lt;a href="https://github.com/fauu/Kamite#lookups" target="_blank"&gt;Lookups&lt;/a&gt; 段落来设置（略麻烦）。&lt;/p&gt;&lt;p&gt;最后，启动 Kamite，再打开漫画阅读窗口就行了。&lt;/p&gt;&lt;h3&gt;啃古典文学 PDF&lt;/h3&gt;&lt;p&gt;之前听播客时，我听到了一期&lt;a href="https://www.ximalaya.com/sound/587170813" target="_blank"&gt;「红楼梦」&lt;/a&gt;。按照播客内容推荐的版本，我在网络上找到了两个简体版的&lt;code&gt;.pdf&lt;/code&gt;、和一个繁体竖排版的&lt;code&gt;.epub&lt;/code&gt;。按版本号排序的话，应该是这样的：&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/06/0f64b58ace18538cec7a8a8adff17270.jpg" src="https://cdn.sspai.com/2023/10/06/0f64b58ace18538cec7a8a8adff17270.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;需要注意的是，&lt;code&gt;.pdf&lt;/code&gt;由社区发布，供个人免费、正当使用。&lt;code&gt;.epub&lt;/code&gt;则是由出版公司发行，可按页面上的网址购入，不过页面上给到的信息不多。文件应该是用在 &lt;a href="https://en.wikipedia.org/wiki/Amazon_Kindle" target="_blank"&gt;Kindle&lt;/a&gt; 上的&lt;code&gt;.mobi&lt;/code&gt;格式，可以自己试试用 &lt;a href="https://calibre-ebook.com/" target="_blank"&gt;Calibre&lt;/a&gt; 转换成&lt;code&gt;.epub&lt;/code&gt;。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/06/efd80744652ba7a9ab385f1e0f4fa1ac.jpg" src="https://cdn.sspai.com/2023/10/06/efd80744652ba7a9ab385f1e0f4fa1ac.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;在后一个&lt;code&gt;.pdf&lt;/code&gt;里，当我复制其中文字时，字符没有被正确识别。我不清楚怎么去修复，所以这里以前一个&lt;code&gt;.pdf&lt;/code&gt;为例。&lt;/p&gt;&lt;p&gt;首先，下载&lt;a href="https://github.com/MarvNC/yomichan-dictionaries#mandarin-chinese" target="_blank"&gt;漢語大詞典(简体版)&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;然后，在 Yomichan 的设置里导入词典：选项 → Dictionaries → Configure installed and enabled dictionaries → Import → 选择下载的压缩包 → 待导入完成，启用词典。&lt;/p&gt;&lt;p&gt;在交互方面，进行「鼠标取词」，这里需要使用 Web端 PDF阅读器，如 &lt;a href="https://shivaprsd.github.io/doqment/src/pdfjs/web/viewer.html" target="_blank"&gt;doqment-demo&lt;/a&gt; 或者 &lt;a href="https://github.com/mozilla/pdf.js#online-demo" target="_blank"&gt;PDF.js-demo&lt;/a&gt;。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/06/96e663c589e928bd1bea72fbebbf3e3e.png" src="https://cdn.sspai.com/2023/10/06/96e663c589e928bd1bea72fbebbf3e3e.png"/&gt;&lt;/figure&gt;&lt;p&gt;如果你使用本地阅读器如 &lt;a href="https://www.sumatrapdfreader.org/free-pdf-reader" target="_blank"&gt;Sumatra PDF&lt;/a&gt; ，或者浏览器插件如 &lt;a href="https://github.com/shivaprsd/doqment#installation" target="_blank"&gt;doqment PDF Reader&lt;/a&gt;——因为 Yomichan 不能在浏览器外取词，也不能在插件里用插件——需要用「剪切板」的方式交互：选项 → Clipboard → Enable background clipboard text monitoring (开) → Enable search page clipboard text monitoring (开)。&lt;/p&gt;&lt;p&gt;之后，当你在阅读器里&lt;code&gt;Ctrl+C&lt;/code&gt;时，就会弹出字典面板。面板出现时尺寸偏小，需手动调整，或者使用 &lt;a href="http://www.brianapps.net/sizer/" target="_blank"&gt;Sizer&lt;/a&gt; 保存一个固定的尺寸。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/06/38a5f779335818c4928a23f1c1b68ecb.png" src="https://cdn.sspai.com/2023/10/06/38a5f779335818c4928a23f1c1b68ecb.png"/&gt;&lt;/figure&gt;&lt;h3&gt;啃古典文学 EPUB&lt;/h3&gt;&lt;p&gt;电子出版物「ePub」，也就是&lt;code&gt;.epub&lt;/code&gt;，是一种泛用的电子书格式，在大部分智能手机、平板、电脑上都有相应的软件可使用。&lt;/p&gt;&lt;p&gt;&lt;a href="https://github.com/pgaskin/ePubViewer" target="_blank"&gt;ePubViewer&lt;/a&gt; 是一个美观易用的 Web 端 ePub 阅读器。它的外观和菜单如图：&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/10/06/1601b371cbb0d3f2de0f799ebf0871a6.png" src="https://cdn.sspai.com/2023/10/06/1601b371cbb0d3f2de0f799ebf0871a6.png"/&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/10/06/98f622e5816223af870cd4edafd962df.png" src="https://cdn.sspai.com/2023/10/06/98f622e5816223af870cd4edafd962df.png"/&gt;&lt;/figure&gt;&lt;p&gt;使用方法有好几种，步骤从简单到复杂：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;直接使用原作者的 &lt;a href="https://pgaskin.net/ePubViewer/" target="_blank"&gt;网页&lt;/a&gt; 或者 &lt;a href="https://gm-epubviewer.vercel.app/" target="_blank"&gt;fork 网页&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;clone&lt;/code&gt;源码到本地 → 在浏览器中打开&lt;code&gt;index.html&lt;/code&gt;&lt;/li&gt;&lt;li&gt;从源码 fork → 按需修改（参考此处的 &lt;a href="https://github.com/scillidan/ePubViewer/blob/gh-pages/index.html" target="_blank"&gt;index.html&lt;/a&gt;、&lt;a href="https://github.com/scillidan/ePubViewer/blob/gh-pages/style.css" target="_blank"&gt;style.css&lt;/a&gt;、&lt;a href="https://github.com/scillidan/ePubViewer/blob/gh-pages/script.js" target="_blank"&gt;script.js&lt;/a&gt;） → 部署 fork库到 &lt;a href="https://docs.github.com/zh/pages/getting-started-with-github-pages/creating-a-github-pages-site" target="_blank"&gt;gh-page&lt;/a&gt; 或者 &lt;a href="https://vercel.com" target="_blank"&gt;Vercel&lt;/a&gt; → 使用网页&lt;/li&gt;&lt;li&gt;从源码 fork → &lt;code&gt;clone&lt;/code&gt; fork 库到本地 → 按需修改 → 使用 [PM2] 部署它 → 使用网页（运行在本地）&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;它们在主要功能上没有多大区别。区别之一是，如果你使用的是平台托管的 Web 服务，在设置文字字体时，会用到&lt;code&gt;.woff&lt;/code&gt;、&lt;code&gt;.woff2&lt;/code&gt;格式的 Web 字体。如果你在本地使用，可以用电脑上已安装的字体：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;以在 Chrome 中为例 → 设置 → 外观 → 自定义字体 → Serif 字体 → 选择本地字体&lt;/li&gt;&lt;li&gt;ePubViewer → 更多菜单 → 设置 → Font → 选择任何一个 Serif 字体&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;字体方面，推荐上图中的 &lt;a href="https://github.com/adobe-fonts/source-han-serif" target="_blank"&gt;思源宋体&lt;/a&gt; 和 下图的 &lt;a href="https://github.com/lxgw/FusionKai" target="_blank"&gt;缝合楷&lt;/a&gt;。词典则使用 &lt;a href="https://gist.github.com/shoui520/25460fd2e9fb194d3e5152fa2ce42ca2#dictionaries" target="_blank"&gt;漢語大詞典&lt;/a&gt;。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/06/2df1c7c4fdb65b727a308db726090aee.png" src="https://cdn.sspai.com/2023/10/06/2df1c7c4fdb65b727a308db726090aee.png"/&gt;&lt;/figure&gt;&lt;p&gt;作为电子书阅读器，需要注意的是：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;如果不清除浏览器的缓存，它能够保存阅读进度。&lt;/li&gt;&lt;li&gt;它不能记住上一次打开的文件。如果不想每一次打开网页，都要重新定位&lt;code&gt;.epub&lt;/code&gt;文件，可以参考这个 &lt;a href="https://github.com/pgaskin/ePubViewer/issues/4#issuecomment-1687223964" target="_blank"&gt;issues&lt;/a&gt;，在网址里带上&lt;code&gt;文件地址&lt;/code&gt;。&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;在安卓上&lt;/h3&gt;&lt;p&gt;参考 &lt;a href="https://xelieu.github.io/jp-lazy-guide/setupYomichanOnAndroid/" target="_blank"&gt;Setup Yomichan Android&lt;/a&gt; 里的详细说明，可以在安卓手机上使用 Yomichan。安装和设置好后：在浏览器里打开 &lt;a href="https://gm-epubviewer.vercel.app/" target="_blank"&gt;fork 网页&lt;/a&gt; → 浏览器 → 更多 → 桌面版网站 (开)。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/10/06/28c185f00dc6c08b6e4ae6298b1aa6fe.jpg" src="https://cdn.sspai.com/2023/10/06/28c185f00dc6c08b6e4ae6298b1aa6fe.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;我只进行了测试。如果你有触控笔，可能使用体验会好一些。&lt;/p&gt;&lt;p&gt;&amp;gt; 下载 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;少数派 2.0 客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，解锁全新阅读体验 📰&lt;/p&gt;&lt;p&gt;&amp;gt; 实用、好用的 &lt;a href="https://sspai.com/mall" target="_blank"&gt;正版软件&lt;/a&gt;，少数派为你呈现 🚀&lt;/p&gt;&lt;/div&gt;</description><author>scillidan</author><guid>https://sspai.com/post/83385</guid><pubDate>Mon, 09 Oct 2023 03:37:14 GMT</pubDate></item></channel></rss>