<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>少数派</title><link>https://sspai.com</link><description>少数派RSS Feed-文章完整抓取版</description><language>zh-CN</language><managingEditor>contact@sspai.com (少数派)</managingEditor><lastBuildDate>Wed, 09 Nov 2022 09:30:06 GMT</lastBuildDate><generator>RSSEngine powered by PyRSS2Gen-1.1.0</generator><image><url>https://t75.pixhost.to/thumbs/126/299184373_ouezg12u_400x400.png</url><title>icon</title><link>https://t75.pixhost.to/thumbs/126/299184373_ouezg12u_400x400.png</link></image><item><title>比肩飞利浦 Hue Play 的 HomeKit 流光溢彩显示器氛围灯是怎样炼成的？</title><link>https://sspai.com/post/76707</link><description>&lt;div&gt;&lt;p&gt;&lt;strong&gt;编注&lt;/strong&gt;：本文有小型抽奖活动，详情见文末。&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;事情是这样的，在 2021 年 9 月的时候，我就在 B 站上看到了朋友 @电动派大星 （另一个世界的我）的一个&lt;a href="https://www.bilibili.com/video/BV1tP4y1x7n3" target="_blank"&gt;视频&lt;/a&gt;，分享了他关于飞利浦 Hue Play 氛围灯的使用感受。当时我就被那种可以与屏幕显示内容同步的流光溢彩效果和 HomeKit 支持种满了大片草原，结果到京东一看，将近 2000 元的价格直接就把我劝退了。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/507ed32e9c74c6d7f798b2b23e720b28.jpg" src="https://cdn.sspai.com/2022/11/09/507ed32e9c74c6d7f798b2b23e720b28.jpg"/&gt;&lt;figcaption&gt;@电动派大星 的视频截图&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;本来以为这事就这么过去了，结果后来大耳朵 TV 也分享了自己在电视上使用飞利浦声光同步器（Hue Sync Box）和 Hue 氛围灯带组成的流光溢彩套装体验，再次让我对这个东西燃起了欲望。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/2300986f50dd4a5c1400e1e9ba70631f.png" src="https://cdn.sspai.com/2022/11/09/2300986f50dd4a5c1400e1e9ba70631f.png"/&gt;&lt;figcaption&gt;@大耳朵TV 的视频截图&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;然而，一套高达 2000 元的价格着实让贫穷的我下不去手。因此我就在想，有没有一种便宜但也能实现类似效果的解决方案？于是，我便开始了长达一年的折腾过程。&lt;/p&gt;&lt;h2&gt;需求及早期折腾过程&lt;/h2&gt;&lt;p&gt;首先在文章开始前，我们先要介绍一个概念：偏置照明（Bias lighting）。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;偏置照明是一个视频剪辑和家庭影院领域中的概念，指的是位于屏幕或显示器背面，用于照亮显示器后方墙壁的微弱光源。布置偏执照明的目的是降低显示器的感知亮度，减少长时间在非常暗的环境下观看明亮的显示器时，由于显示器和背景区域亮度差异过大造成的眼睛疲劳。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;不难理解，无论是飞利浦的 Hue 流光溢彩套装，还是其他显示器或电视背后的照明方案，都属于偏置照明的一种。有了这个概念，我们就可以继续往下走了。&lt;/p&gt;&lt;h3&gt;需求是什么？&lt;/h3&gt;&lt;p&gt;在打开淘宝前，第一步还是要明白自己想要的偏置照明需求是什么。对我来说，我的主要功能诉求有以下五点：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;支持 HomeKit，可以在 iPhone、iPad 和 Mac 的家庭 app 上轻松操作；&lt;/li&gt;&lt;li&gt;支持 Siri 语音控制；&lt;/li&gt;&lt;li&gt;能做到 Hue Play 一样的流光溢彩效果；&lt;/li&gt;&lt;li&gt;平时可以充当显示器背后的氛围灯，照亮夜晚时工作的环境；&lt;/li&gt;&lt;li&gt;体积尽量小巧，避免类似飞利浦声光同步器那样需要接多条 HDMI 线，最好是能够无线；&lt;/li&gt;&lt;li&gt;价格控制在 100 以内。&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;现成的商品解决方案&lt;/h3&gt;&lt;p&gt;明确好了自己需求之后，我还真在淘宝找到了类似的商品，尽管价格略高出了预算，但相比起飞利浦高达 2000 元的价格来说还是很实惠的。&lt;/p&gt;&lt;p&gt;在询问了卖家之后，卖家表示这套偏置照明方案可以满足我的绝大部分需求，不过 HomeKit 支持是没有的。彼时的我觉得这个问题倒也是不大，可以直接在灯带的电源处加上一个可以 HomeKit 控制的插座，也能曲线救国解决这个问题。&lt;/p&gt;&lt;p&gt;于是，我斥 143 元巨资购入了这款「廉价版流光溢彩灯带」。不久后，我便收到了卖家寄来的一个控制盒、一条 2 米的灯带和一个 5V 8A 的电源和一根与电脑连接的 USB-A 转 USB-B 数据线 —— 和 Hue Play 的套装类似。我按照教程贴好了灯带并连接好了电脑和控制盒，结果上电的时候却出了问题：我误把显示器的 24V 电源接到了灯带上，直接导致灯带报废。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/1e182bd6cd87422efebdf831ee5bf25e.jpg" src="https://cdn.sspai.com/2022/11/09/1e182bd6cd87422efebdf831ee5bf25e.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;无奈，我又花了一笔钱重新购买了 2 米的灯带。几天后灯带到手，认真检查了各处无误后，接通电源并在 Mac 上按照教程设置驱动和软件，终于成功点亮，开启了跟随屏幕显示内容动态改变颜色的流光溢彩效果。&lt;/p&gt;&lt;p&gt;但作为过来人的我要告诉你，以后最好还是不要再选择淘宝商家的这些方案了。价格高不说，他们的软硬件也都不是自己开发的，只是拿了开源社区的创意做成了自己的产品，因此他们并不懂原理，售后的服务水平也非常一般（到后来甚至我教商家怎么设置，他只能给我回复三个省略号）。有条件的话，建议要么直接上飞利浦 Hue，要么就自己 DIY 吧。&lt;/p&gt;&lt;h3&gt;HomeKit 接入&lt;/h3&gt;&lt;p&gt;接下来便是想办法怎样将它们接入 HomeKit。&lt;/p&gt;&lt;p&gt;一开始我确实是想直接增加一个 HomeKit 的插座，但这样确实是下下策的妥协方案：会把让电源插头凸出来一大块不说，还不能控制灯带的颜色和明暗，只有一个开关功能，显得不够优雅。&lt;/p&gt;&lt;p&gt;这时候，万能的互联网就发挥了巨大作用。在搜索之后我发现，我用来控制灯带的这款软件「Prismatik」，已经有人为它开发了一个 HomeAssistant 插件。如此一来，我就可以将灯带接入到 HomeAssistant 并通过 HomeKit 桥接器接入 HomeKit。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/7f3f2478b38d3f29038cea31d2c15488.png" src="https://cdn.sspai.com/2022/11/09/7f3f2478b38d3f29038cea31d2c15488.png"/&gt;&lt;/figure&gt;&lt;p&gt;这款插件的使用也比较简单。安装好插件（可用在 HACS 商店用自定义存储库添加 &lt;code&gt;home-assistant-prismatik&lt;/code&gt; 插件或直接手动安装）后重启，然后再在 HomeAssistant 的 configuration.yaml 文件中增加下面的配置即可：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;light:
  - platform: prismatik
    host: Mac 的 IP 地址
    name: &amp;quot;灯带的名字&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;再次重启，灯带就被添加到了 HomeAssistant 中。尽管插件已经有一年多未更新，但核心功能已经具备，能够调节灯带的开关、颜色、色温和亮度。&lt;/p&gt;&lt;h3&gt;存在的一系列问题&lt;/h3&gt;&lt;p&gt;这套方案的价值，在于为当时我还没有了解相关技术原理的我提供了一个可以快速解决痛点的方法。然而初次之外，我却一直在忍受它带来的各种问题。&lt;/p&gt;&lt;p&gt;首先是 &lt;code&gt;home-assistant-prismatik&lt;/code&gt; 与 Prismatik 软件的协作非常不稳定，有时候插件无法控制灯带，需要在电脑上重启软件，甚至还出现了灯带莫名其妙自己关闭的情况，需要重启插件和软件才能建立连接。&lt;/p&gt;&lt;p&gt;其次是移动受限。由于灯带的控制数据通过 USB 与电脑连接，而 &lt;code&gt;home-assistant-prismatik&lt;/code&gt; 则通过局域网与电脑连接，因此在我需要外出或单独使用笔记本时，拔掉 MacBook 和扩展坞的雷雳线缆后插件便无法与灯带控制盒沟通，HomeAssistant 和家庭 app 中就会直接提示设备「无响应」。&lt;/p&gt;&lt;p&gt;最让我无法忍受的一点，是灯带控制盒中的 WCH 串口芯片在重新连接 Mac 后端口号会改变。&lt;strong&gt;由于 Prismatik 更改连接设备的串口号需要重新对灯带进行初始化设置&lt;/strong&gt;，而当时我又由于工作原因每天需要带自己的电脑去上班，所以每次下班回家重新插上 Mac 的第一件事，就是从头跑一趟灯带初始化设置……&lt;/p&gt;&lt;p&gt;只不过今年 5 月辞职后，我便长时间旅居海南，灯带的这些问题便暂时被搁置了。直到 9 月底重新回到广州，搞定了 HomeKit 升降桌之后，终于可以着手解决这个问题。&lt;/p&gt;&lt;h2&gt;解决方案：重制灯带控制模块&lt;/h2&gt;&lt;p&gt;想要解决上面的这些问题，就需要先弄清楚这套系统的工作原理，所以我对这套硬件进行了刨根问底式的拆解和搜索。&lt;/p&gt;&lt;p&gt;在拆开了控制盒之后我发现，这其实就是一套 Reddit 上曾经有人&lt;a href="https://www.reddit.com/r/arduino/comments/6eoi75/diy_ambilight_with_ws2812b_leds/" target="_blank"&gt;分享过的 DIY 过的方案&lt;/a&gt;，被国内的一些淘宝商家抄过来之后进行售卖。它的核心是一块 Arduino UNO 开发板，刷写了一个开源的 Ambilight 固件，而灯带采用的是大名鼎鼎的 WS2812B。透过这套外置的系统结合电脑上的 Prismatik 软件对屏幕进行实时录制，实现了流光溢彩的效果。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/12a9f9bca537aae962b543ad5a108262.jpg" src="https://cdn.sspai.com/2022/11/09/12a9f9bca537aae962b543ad5a108262.jpg"/&gt;&lt;figcaption&gt;剧透图：Arduino UNO 和后续用到的模块大小对比&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;既然如此，我们能从什么地方入手来进行改造？&lt;/p&gt;&lt;p&gt;WS2812B 灯带？答案是不需要。WS2812B 灯带的自身素质还是很不错的，不但支持 1600 万色，而且只需要灯珠与灯珠之间通过串行级联接口相连，只需要一根信号线就能完成数据的接收与解码。&lt;/p&gt;&lt;p&gt;那么电源呢？卖家提供的电源规格是 5V 8A，电源模块是否可以缩小？也不行。查阅 WS2812B 灯带的数据手册可知，单个 WS2812B 的驱动电流是 60mA，而要将我的 32 寸屏幕四周围一圈至少需要两米的长度，共计 120 颗 WS2812B LED 灯。所以，我需要的电流最低门槛便是 0.06 × 120 = 7.2A，否则便无法提供足够的电流来点亮灯带。&lt;/p&gt;&lt;p&gt;那么我们能入手改造的地方就只剩控制盒了。&lt;/p&gt;&lt;h3&gt;选择哪种控制方案？&lt;/h3&gt;&lt;p&gt;为了能让灯带直接接入 Apple HomeKit，并满足开关、亮度、色温和颜色的调节，我决定直接抛弃原来的 Arduino UNO 控制盒，为 WS2812B 定制一个全新的，不需要电脑中转数据就能支持 HomeKit 的控制方案。&lt;/p&gt;&lt;p&gt;参阅我派作者 &lt;a href="https://sspai.com/u/estrella/updates" target="_blank"&gt;@EstrellaXD&lt;/a&gt; 在《&lt;a href="https://sspai.com/prime/story/homekit-smart-standing-desk" target="_blank"&gt;HomeKit 智能升降桌是怎样炼成的&lt;/a&gt;》这篇文章中可以知道，想要从零开始打造一个 HomeKit 模块，最常用有三种开源的 SDK 可以选择：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;ESP Apple HomeKit SDK：是乐鑫公司（Espressrif）基于 HAP 为其销售的 ESP32 与 ESP8266 定制的 SDK，优点是功能全，可定义参数多，但是需要有一定的嵌入式开发基础。&lt;/p&gt;&lt;p&gt;Arduino HomeKit ESP8266：这是第三方开发者在 Arduino 中为 ESP8266 新品定制的代码。相比于 ESP 官方的 SDK，Arduino 明显要容易上手很多，可自定义的东西也很多。&lt;/p&gt;&lt;p&gt;HomeKit Accessories Architect（HAA）：也是一个第三方开发的基于 ESP8266 芯片的套件。相比于上面两种方案，HAA 的优势在于不需要自己写代码，通过 JSON 文件可以方便的配置 DIY 的 HomeKit 配件类型和功能，相对来说是最友好且方便的。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;经过搜索和考虑我发现，很遗憾，&lt;strong&gt;目前并没有能够直接接入 HomeKit 的流光溢彩灯带控制方案。&lt;/strong&gt;不过柳暗花明又一村，在寻找的过程中，我发现了另一个开源项目：WLED。&lt;/p&gt;&lt;p&gt;一切的故事将从 WLED 项目的出现开始改变。&lt;/p&gt;&lt;h3&gt;关于 WLED 项目&lt;/h3&gt;&lt;p&gt;&lt;a href="https://kno.wled.ge" target="_blank"&gt;WLED&lt;/a&gt; 是德国开发者 Christian Schwinne 基于 ESP8266 或 ESP32 开发的一个开源项目，可以将 WS2812B、WS2811 等 LED 灯或灯带接入互联网控制，并提供了图形化操作界面、iOS 和 Android App 及丰富的自定义选项。&lt;/p&gt;&lt;p&gt;而最大的亮点，莫过于它还原生支持了 HomeAssistant 的集成。这意味着，我们完全可以不写一行代码，直接在图形化界面实现 WLED 接入 HomeAssistant 并桥接到 HomeKit 的操作。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/13bc6cd2a83e0cd73f5f92268a155a0e.png" src="https://cdn.sspai.com/2022/11/09/13bc6cd2a83e0cd73f5f92268a155a0e.png"/&gt;&lt;/figure&gt;&lt;p&gt;然而 WLED 的惊喜之处还不止于此，它还支持与飞利浦 Hue 同步、Alexa 语音控制和 MQTT 等特性。如果你有兴趣去折腾另一个开源项目 DiyHue 的话，你甚至还可以让 WLED 映射为飞利浦 Hue Strip Plus 灯带，并和 Hue Sync（也就是飞利浦官方的流光溢彩套件）配合使用 —— 要知道，2 米的 WS2812B 灯带也就 30 元左右，而同长度 Hue Strip Plus 灯带的售价高达 729。&lt;/p&gt;&lt;h3&gt;Hyperion：全新的无线录屏方案&lt;/h3&gt;&lt;p&gt;光搞定了 LED 灯带的驱动和 HomeKit 连接只是实现了需求的一半，而最终于的流光溢彩部分仍然没有得到解决。不过在 WLED 项目中，它还提到了另一项功能支持：&lt;a href="https://github.com/hyperion-project/hyperion.ng" target="_blank"&gt;Hyperion&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;Hyperion 和 Prismatik 类似，是一个开源的偏置照明软件解决方案，但相比 Prismatik 有着不少的优点。而下面这些正好就是我们这个项目所必须的：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;低 CPU 负载，即便是树莓派也能轻松运行；&lt;/li&gt;&lt;li&gt;支持中文 Web 界面来配置和使用；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;支持远程控制。&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;选择合适的硬件并思考连接方式&lt;/h3&gt;&lt;p&gt;有了软硬件的支持，那么接下来就是搭建测试环境来验证方案的可行性。&lt;/p&gt;&lt;p&gt;首先，我们需要选择一个 ESP8266 的开发板或模块。但是基于 ESP8266 开发的硬件这么多，应该怎么选择？不要着急，让我们回到 WLED 项目的官方页面，往下拉，就能看到作者给出的「&lt;a href="https://kno.wled.ge/basics/compatible-hardware" target="_blank"&gt;已适配硬件&lt;/a&gt;」页面跳转链接，点击进入即可。在这个页面中，作者详细罗列了可连接的 LED 灯带类型和电压、支持 WLED 的控制模块或开发板，以及可能会用到的硬件等等。&lt;/p&gt;&lt;p&gt;因为 WS2812B 灯带只需要一路控制信号就能驱动，所以理论上来说只需要控制芯片有一个 IO 接口即可。而为了尽可能缩小体积，我舍弃了 NodeMCU 这类开发板，最终将选择落到了 ESP-01S 上。ESP-01S 是安信可基于 ESP8266 开发的一个物联网模块，只有半截拇指大小的体积，提供了两个 IO 接口，可以说是完美符合我们的需求。&lt;/p&gt;&lt;p&gt;不过要注意的是，WLED 的作者提醒我们，不推荐用 ESP-01S 用来做 WLED 的控制器，原因有三点：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;刷写固件需要外部的 USB 转串口芯片或模块&lt;/li&gt;&lt;li&gt;ESP-01S 供电电压是 3.3V，但 USB 供电和 LED 灯带使用的电压都是 5V；&lt;/li&gt;&lt;li&gt;模块的存储空间只有 1MB，未来很可能无法进行无线更新。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;但考虑到，我本身已经拥有一个 USB 转串口模块可以用于刷写固件，而且如果固件能稳定使用的话，其实没有很大更新的必要。其次，ESP-01S 的供电也可以用一颗 AMS1117-3.3 芯片来解决，因此作者提到的这些小缺点对我来说影响并不大。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/57c94f7c0705ef275639ba439af1dbeb.jpg" src="https://cdn.sspai.com/2022/11/09/57c94f7c0705ef275639ba439af1dbeb.jpg"/&gt;&lt;figcaption&gt;USB 转串口模块一般长这样&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;而剩下的电源和灯带部分，我决定继续沿用原有的方案，不进行任何改造。这样我便可以不用重新粘贴显示器背后的 WS2812B 灯带，也不用再理一遍桌底的电线，只要更换掉原来的控制盒即可。&lt;/p&gt;&lt;p&gt;不过有一点不同的是，原有的淘宝方案是双供电，即 5V8A 的电源只供应灯带使用，Arduino 则使用电脑 USB 供电，同时传输录屏的数据，两个电源共地。而在重新思考的新版方案中，我决定砍掉这根 USB 线，让 ESP-01S 从 Hyperion 无线获取录屏数据，并直接从灯带电源取电，通过上面提到的 AMS1117-3.3 芯片来解决供电问题。&lt;/p&gt;&lt;h3&gt;搭建系统并进行测试&lt;/h3&gt;&lt;p&gt;等待一段时间后，需要的硬件都已寄到，我们就可以在面包板上搭建电路并进行测试了。&lt;/p&gt;&lt;p&gt;但在此之前，我们需要用 USB 转串口模块对 ESP-01S 进行固件刷写。固件可以在 WLED 的 &lt;a href="https://github.com/Aircoookie/WLED/releases" target="_blank"&gt;Release 页面&lt;/a&gt;下载到，选择「WLED_0.13.3_ESP01.bin」这个文件即可。&lt;/p&gt;&lt;p&gt;接着，我们在电脑上安装 ESP 刷写程序 &lt;a href="https://github.com/tasmota/tasmotizer" target="_blank"&gt;Tasmotizer&lt;/a&gt; 和 USB 转串口模块的驱动，然后按照下面的电路连接 USB 转串口模块和 ESP-01S，并将模块插入电脑的 USB 口：&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/91dab12ef88c6edd86da88c19f83c7a7.png" src="https://cdn.sspai.com/2022/11/09/91dab12ef88c6edd86da88c19f83c7a7.png"/&gt;&lt;figcaption&gt;注意，一定不能直接连接串口模块的 5V 电源，否则 ESP-01S 会烧坏。有些串口模块的 3.3V 电源是不工作的，这时候就需要接一个 AMS1117-3.3 的 LDO 模块，将电压降低到 3.3V&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;一定要注意的一点是，&lt;strong&gt;下载模式中 ESP-01S 的 IO0 需要下拉&lt;/strong&gt;，因此需要一根额外的线将 IO0 接地，否则固件是无法刷入的。&lt;/p&gt;&lt;p&gt;最后，在 Tasmotizer 中选择对应的串口并导入相应的固件，点击左下方的「Tasmotize! 」按钮，固件就会自动被刷入 ESP-01S 中。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/29a02cd905459a801131a51521be1116.png" src="https://cdn.sspai.com/2022/11/09/29a02cd905459a801131a51521be1116.png"/&gt;&lt;/figure&gt;&lt;p&gt;刷写好固件后，按照下面的原理图连接电路，然后给整个系统上电，就可以开始测试了。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/19c57e699031c2f0f9e3e21d58de80b7.png" src="https://cdn.sspai.com/2022/11/09/19c57e699031c2f0f9e3e21d58de80b7.png"/&gt;&lt;figcaption&gt;记得提前准备些 1KΩ 的电阻&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;第一次上电 HIA 需要设置 WLED 的 Wi-Fi 连接。在电脑或手机上连接 WLED-AP 的 Wi-Fi，密码是 &lt;code&gt;wled1234&lt;/code&gt;，然后在弹出的页面中输入你的 Wi-Fi SSID 和密码，然后在最上方点击「Save」保存。&lt;/p&gt;&lt;p&gt;接下来，在路由器找到 WLED 的 IP 地址，直接将它输入到浏览器中就可以对它进行配置。在这里我们不对其他项目进行过多改动，直奔主题到「Config &amp;gt; LED Preferences」中将 LED 的数量改为 120 个（一般一米是 60 个）。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/645643a4f62426cf330b73eccf707c4e.png" src="https://cdn.sspai.com/2022/11/09/645643a4f62426cf330b73eccf707c4e.png"/&gt;&lt;figcaption&gt;你可以看情况考虑是否要关掉亮度限制，我实测两米没有问题。如果电流过大，也可能会烧坏 ESP-01S。&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;保存好设定后，如果没有其他错误，那么现在 120 颗 LED 就全部处于点亮的状态，并且可以用网页来进行控制。&lt;/p&gt;&lt;p&gt;下一步是通过自动集成把 LED 添加到 HomeAssistant。进入到 HomeAssistant 的「配置 &amp;gt; 设备与服务」页面，HomeAssistant 便会提示已发现新的 WLED 集成，按照提示将它添加到 HomeAssistant 即可。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/9da58878354668f8f7a09d902f9acaaf.png" src="https://cdn.sspai.com/2022/11/09/9da58878354668f8f7a09d902f9acaaf.png"/&gt;&lt;figcaption&gt;如果没有自动发现，可以点击右下角的「添加集成」&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;到这一步，我们便可以用 HomeAssistant 来对 WLED 进行控制了。此外，你还可以在 HomeAssistant 中查看到很多控制选项和状态参数，如果你有兴趣的话可以继续研究下去，这里我们就暂时略过，继续我们的主线任务。&lt;/p&gt;&lt;p&gt;这时候，我们就可以把 WLED 通过 HASS Bridge 接入 HomeKit。点击 HASS Bridge 卡片的选项按钮（如果没有需要到右下角先添加一个 HASS Bridge 集成），然后进行对应的设定。不过由于每个人所用的桥接方式不同，你可以参考&lt;a href="https://sspai.com/post/70089" target="_blank"&gt;这篇文章&lt;/a&gt;里「接入 HomeKit」章节中对「域」、「包含模式」和「选择要排除的实体」等的介绍，根据你的需求来进行添加。完成后，点击卡片右下角的三个点，重载一下集成，稍后就能在家庭 app 中看到，WLED 已经成功被添加到了 HomeKit 中。&lt;/p&gt;&lt;p&gt;到这里，按照新思路搭建的系统已经成功跑通 WLED 和 HomeKit 的部分。下一步，我们就可以回到 Mac 上，来设置 Hyperion 了。&lt;/p&gt;&lt;p&gt;到 Hyperion 的 GitHub &lt;a href="https://github.com/hyperion-project/hyperion.ng/releases" target="_blank"&gt;Release 页面&lt;/a&gt;，下载最新版的 Hyperion for Mac，安装好之后&lt;strong&gt;授予它屏幕录制的权限&lt;/strong&gt;，然后就可以在菜单栏上点击「Hyperion &amp;gt; Setting」进入它的 Web 设置页面。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/7c3e2e33ba9a7142570aad7ec8af1c90.jpg" src="https://cdn.sspai.com/2022/11/09/7c3e2e33ba9a7142570aad7ec8af1c90.jpg"/&gt;&lt;figcaption&gt;Windows 用户需要点击下面的「Show all 14 assets」才能看到&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;首先，我们可以点击右上角的扳手，将 Hyperion 的设置页面改为中文。然后来到「LED 配置 &amp;gt; LED 硬件」下，在控制器的类型中选择 WLED，让 Hyperion 自己发现设备（或是直接输入 WLED 的 IP 地址）。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/5d9fd3afe40bd82c20485c6898ea71b7.png" src="https://cdn.sspai.com/2022/11/09/5d9fd3afe40bd82c20485c6898ea71b7.png"/&gt;&lt;/figure&gt;&lt;p&gt;随后，来到 LED 布局的设置页面，按照显示器背后的灯带粘贴路径来设置对应的 LED 布局，再回到 LED 控制器页面点击保存即可。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/feba57c1d5a5dde1a14434c0b2f9d749.png" src="https://cdn.sspai.com/2022/11/09/feba57c1d5a5dde1a14434c0b2f9d749.png"/&gt;&lt;/figure&gt;&lt;p&gt;如果设置没有出错，那么现在就能够看到，WLED 已经开始能够显示流光溢彩的效果了。&lt;/p&gt;&lt;p&gt;至此，所有的测试均已成功跑通，并且成功实现了一开始我们预设的所有需求。&lt;/p&gt;&lt;h2&gt;绘制 PCB 模块和稳定性测试&lt;/h2&gt;&lt;p&gt;虽然我们的测试已经成功，但显然这套「盘丝洞」的系统并不能直接搬到显示器后面使用。我们需要设计一块合适的 PCB 板，来承载整个电路及 EPS-01S 模块。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/75a917b0c93c025c0478a8b15b2c482d.JPG" src="https://cdn.sspai.com/2022/11/09/75a917b0c93c025c0478a8b15b2c482d.JPG"/&gt;&lt;/figure&gt;&lt;h3&gt;绘制及打样 PCB&lt;/h3&gt;&lt;p&gt;这里我选择的是嘉立创 EDA。作为一款国产 EDA 设计软件，我们可以直接将画好的 PCB 直接提交到嘉立创进行生产，每个月免费可以打样两个项目的 PCB（每个项目 5 片），实属良心。同时，如果你不想自己焊接贴片 SMT 的话，也可以交由嘉立创来搞定。&lt;/p&gt;&lt;p&gt;注册好账号并创建项目后，首先是要绘制原理图。这部分并不难，在左侧找到或搜索对应的元器件，将它们添加到绘图区，然后按照上面在面包板上跑通的方案进行连接。&lt;/p&gt;&lt;p&gt;搞定了原理图，点击保存，然后就可以点击「设计原理图转 PCB」。由于这个项目的 PCB 并没有多复杂，只需单面的连接线路即可搞定。&lt;/p&gt;&lt;p&gt;设计完成后，点击「制造 &amp;gt; 一键 PCB / SMT」下单，软件还会提示你进行 DRC 检查，核对线路设计是否有问题。通过 DRC 检查后，我们就可以到嘉立创进行 PCB 打样，并等待板子寄送到家里。&lt;/p&gt;&lt;p&gt;而我作为懒人，也没有回流焊的平台，实在是不想自己用烙铁焊接 SMT 贴片，所以这一步我也直接让嘉立创打包一条龙服务了。虽然 50 元的贴片费用确实不低，但考虑已经在嘉立创白嫖了这么多板子，也就不再过多吐槽了。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/d0b97a45f2041d76a7f0a8e10b44427d.JPG" src="https://cdn.sspai.com/2022/11/09/d0b97a45f2041d76a7f0a8e10b44427d.JPG"/&gt;&lt;/figure&gt;&lt;h3&gt;焊接直插件&lt;/h3&gt;&lt;p&gt;板子到手后，我还需要焊接已经刷好 WLED 固件的 ESP-01S 模块，以及两侧用于连接电源和 WS2812B 灯带的连接端子。然而，两侧端子的体积是在有些大，所以我索性直接将线焊接在了对应的焊盘中，这样整个模块的体积便得到了进一步的缩小。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/cf11636e17300016055f5aa89df1c337.jpeg" src="https://cdn.sspai.com/2022/11/09/cf11636e17300016055f5aa89df1c337.jpeg"/&gt;&lt;/figure&gt;&lt;h3&gt;稳定性测试&lt;/h3&gt;&lt;p&gt;成功瘦身且实现更多功能的流光溢彩控制模块已经完成了，但我依旧不建议立刻就装到显示器上使用。毕竟电源的功率达到了 40W，电流也高达 8A，因此我还专门做了一天的稳定性测试，试试看长时间点亮是否会出现问题。&lt;/p&gt;&lt;p&gt;实测发现，AMS1117-3.3 用手摸着还是挺烫的，温度应该能有 50-60 度左右。一方面是架在上方的 ESP-01S 模块阻挡了散热，另一方面是模块体积太小，没法假装散热设施，只能通过空气散热。好在 AMS1117-3.3 的工作最高温度可达 120 摄氏度，因此这个问题我并不需要担心。&lt;/p&gt;&lt;p&gt;但不管怎样，我还是需要实际装到显示器屏幕后方进行较长一段时间的试用，才能确定这个模块能否胜任。&lt;/p&gt;&lt;h3&gt;算笔账&lt;/h3&gt;&lt;p&gt;如果不考虑开发过程中的支出，那么实际上这个灯带成本（含运费）表格如下：&lt;/p&gt;&lt;figure&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;材料名称&lt;/td&gt;&lt;td&gt;价格&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;ESP-01S 模块&lt;/td&gt;&lt;td&gt;9.7&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2 米 WS2812B 灯带&lt;/td&gt;&lt;td&gt;30&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;PCB 打样&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;SMT 贴片焊接&lt;/td&gt;&lt;td&gt;50&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;SMT 贴片元器件&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;5V8A 电源&lt;/td&gt;&lt;td&gt;27&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;总计&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;120.7&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;虽然稍微超出了预算，但不难看出，主要的支出都在嘉立创的 SMT 贴片元器件焊接中。如果你选择自己焊接，那么还可以省掉这笔钱。总的来说，这一套的成本并不算高，而且相比动辄上千元的飞利浦 Hue 流光溢彩套装来说已经算是「丐中丐」的价格了。&lt;/p&gt;&lt;p&gt;只不过相比起商业化的产品而言，这个版本的 WLED 流光溢彩驱动模块还有很多需要改进的地方。但对于自用的 DIY 产品来说，已经算是相当便宜且稳定易用了。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/5b73245315fbacaef3e93f02e9f8927b.JPEG" src="https://cdn.sspai.com/2022/11/09/5b73245315fbacaef3e93f02e9f8927b.JPEG"/&gt;&lt;figcaption&gt;平时当普通的照明灯用也是氛围感拉满&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2&gt;第二版改进&lt;/h2&gt;&lt;p&gt;上面提到，由于我发现板子两侧用于连线的端子体积过大，而直接焊接线路则导致两侧凸出来很大一片，还是有些不够优雅，所以第一版的 WLED 流光溢彩灯光控制模块刚使用不到一周，便开始着手画第二版的 PCB 图。&lt;/p&gt;&lt;p&gt;相比于第一版的 PCB，第二版的 PCB 大幅缩减了模块两侧的长度，总体长度仅 3.4 厘米，压缩到了能容纳 ESP-01S 的极限长度。&lt;/p&gt;&lt;p&gt;此外，为了增加 AMS1117-3.3 的散热能力，第二版的 PCB 在其下方增加了一块裸露的铺铜区，方便它能将热量即使导到模块的周围，增大与空气的接触面积。&lt;/p&gt;&lt;p&gt;最后，这一版的 PCB 中还加入了用于后续给 ESP-01S 固件升级使用的接口。后续遇到 WLED 重大固件且无法使用无线更新时，就可以方便地通过这四个接口进行升级：只需要将 RXD 和 TXD 连接到 USB 转串口模块的对应线路，然后短接 IO0 和 GND 即可。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2022/11/09/535df3c4b045003fc7caea88d73d2bbb.png" src="https://cdn.sspai.com/2022/11/09/535df3c4b045003fc7caea88d73d2bbb.png"/&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2022/11/09/2592ac1533737d6d6b423417a9dba3d9.png" src="https://cdn.sspai.com/2022/11/09/2592ac1533737d6d6b423417a9dba3d9.png"/&gt;&lt;/figure&gt;&lt;p&gt;不过目前来看，第一版的 WLED 流光溢彩模块到现在依旧运行良好，因此没有需求的话，第二版的 PCB 或许暂时还先不会去打样，留待日后出现升级或新需求时继续添加新功能，例如增加与售价高达 2399 的飞利浦声光同步器类似的 HDMI 输入采集模块等。&lt;/p&gt;&lt;p&gt;对了，其实这个 WLED 流光溢彩模块也可以作为通用的 WS2812B 灯带控制模块。将它和灯带一起贴到需要的地方，接入电源并通过 HomeAssistant 桥接到 HomeKit，即可以极低的成本获得一个能在 Apple 家庭 app 控制的彩光灯带设备。&lt;/p&gt;&lt;h2&gt;HomeKit 及 HomeAssistant 自动化&lt;/h2&gt;&lt;p&gt;有了不依赖电脑通信的 WLED 灯带，现在我们终于可以放心地将它接入到 HomeKit 及 HomeAssistan 来进行自动化操作了。&lt;/p&gt;&lt;p&gt;根据我自己的需求，其实大部分时间 WLED 还是作为夜晚显示器后方的常亮偏置照明使用，因此我设置了 WLED 与工作模式的联动：打开后，WLED 就会打开并切换到 4000K 左右的自然光，方便我集中精力。&lt;/p&gt;&lt;p&gt;此外，在游戏模式时，就可以通过 HomeAssistant 的自动化，将 WLED 设置成 RBG 幻彩模式&lt;s&gt;，营造颇具网吧风格的环境&lt;/s&gt;。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/d1c3c4b30ae8af0fd6f8183b30ef9bdf.jpg" src="https://cdn.sspai.com/2022/11/09/d1c3c4b30ae8af0fd6f8183b30ef9bdf.jpg"/&gt;&lt;/figure&gt;&lt;h2&gt;一些不足&lt;/h2&gt;&lt;p&gt;要说这个全新的 WLED 流光溢彩模块有什么不足之处，主要还是在软件的层面。&lt;/p&gt;&lt;p&gt;在我看来最大的遗憾，莫过于无法在 HomeKit 里直接选择氛围灯光模式还是流光溢彩模式。但这个问题我并没有办法去改变，根本原因在于 HomeKit 并不支持灯光模式的选择，只能期待后续 Apple 可以加入这个功能了。&lt;/p&gt;&lt;p&gt;第二点当我想要结束流光溢彩模式后，需要手动在电脑上退出 Hyperion。而在退出了 Hyperion 后，灯带有很大概率会直接熄灭，而不是将控制权限交还给 WLED。这时候就需要手动到 WLED 的网页或 App 设置界面中点击「Override once」，才能重新建立对 WLED 的控制，稍微有些繁琐。而且，这个问题同样和上面一样，目前没有更好的解决办法。&lt;/p&gt;&lt;h2&gt;后记&lt;/h2&gt;&lt;p&gt;这个项目一开始源自于对原版 Prismatik 流光溢彩方案的割裂使用体验的不满，但很长一段时间其实我也没有解决办法。直到再后来跟着我派作者 @EstrellaXD 学习了 HomeKit 升降桌的 DIY 思路之后，才萌生了大跨步改动的想法。&lt;/p&gt;&lt;p&gt;说实话这里其实运气成分挺大，我没想到竟然有这么多 DIY 先辈做出了这么好的方案 —— 而我只不过是个搬运工，将这些成功跑通的硬件固化成了一个自己的模块。因此，真的特别需要感谢 WLED 的开发者 Christian Schwinne 和 Hyperion 的开发者，感谢他们将自己的成果无私地开源到网络上。&lt;/p&gt;&lt;p&gt;WLED 流光溢彩驱动模块是我继升降桌之后，第二个靠自己查资料和爬数据手册 DIY 出来的 HomeKit 设备。这种探求未知并获得成功的过程，仿佛让我找回了 6 年前初次接触 HomeKit，并把 YeeLight 灯泡接入 HomeKit 的那个夜晚 —— 成功的那一刻，我发现好久都没有这么开心过了。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/6957e50fb10d5da902211e4084abc461.PNG" src="https://cdn.sspai.com/2022/11/09/6957e50fb10d5da902211e4084abc461.PNG"/&gt;&lt;/figure&gt;&lt;p&gt;那么，下一个会被改造成「Work with Apple Home」的产品，又会是谁呢？敬请期待。&lt;/p&gt;&lt;h4&gt;🎇 抽奖&lt;/h4&gt;&lt;p&gt;如果你也想尝试一下自制氛围灯的快乐，可以在本文的评论区，或是少数派&lt;a href="https://weibo.com/sspaime" target="_blank"&gt;微博&lt;/a&gt;中参与讨论，大家可以一起聊聊智能家居、氛围灯、生活灯光布置，文章发布五天后，我会在文章评论和微博的转发评论中各选出一位，包邮送出方案中成本最高、由我打板并贴好 SMT 的 PCB 一张，希望你也能感受 DIY HomeKit 氛围灯的快乐。&lt;/p&gt;&lt;h4&gt;关联阅读&lt;/h4&gt;&lt;p&gt;&amp;gt; 下载 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;少数派 2.0 客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，解锁全新阅读体验 📰&lt;/p&gt;&lt;p&gt;&amp;gt; 实用、好用的 &lt;a href="https://sspai.com/mall" target="_blank"&gt;正版软件&lt;/a&gt;，少数派为你呈现 🚀&lt;/p&gt;&lt;/div&gt;</description><author>宛潼</author><guid>https://sspai.com/post/76707</guid><pubDate>Wed, 09 Nov 2022 08:10:49 GMT</pubDate></item><item><title>自己动手编写自动化：基于 Auto.js 和 MacroDroid 的阅读计时器</title><link>https://sspai.com/post/76721</link><description>&lt;div&gt;&lt;h2&gt;Don&amp;#x27;t Repeat Yourself&lt;/h2&gt;&lt;p&gt;除了消遣娱乐之外，阅读通常也是我使用手机最多的场景之一。&lt;/p&gt;&lt;p&gt;由于我个人有记录时间的习惯，所以当我阅读时会手动在计时应用上先开始计时，然后再进行阅读，结束之后再手动停止计时并打卡记录当天的完成情况。&lt;/p&gt;&lt;p&gt;经过多次人工重复性地操作之后，我似乎对这一过程感到有些枯燥和不耐烦，也下意识感觉到自己违反了软件开发中经典的 DRY 原则（&lt;strong&gt;D&lt;/strong&gt;on&amp;#x27;t &lt;strong&gt;R&lt;/strong&gt;epeat &lt;strong&gt;Y&lt;/strong&gt;ourself），于是我就想：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;为什么不能让手机自动地从我打开阅读软件那一刻开始计时，在退出阅读软件后停止计时呢？&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;借助搜索引擎发现了 Fairyex 使用 Tasker 自动化记录时间的文章之后，我才知道不仅只有我一个人有这样的想法；可考虑到我没有 Tasker 无法直接「照抄作业」，于是秉承着「只要思想不滑坡，方法总比困难多」想法，在稍加尝试之后我打算用自己 Android 手机上现有的两个工具——Auto.js 和 MacroDroid——来实现同样的功能。&lt;/p&gt;&lt;span&gt; &lt;/span&gt;&lt;p&gt;效果如下：&lt;/p&gt;&lt;figure&gt;&lt;img alt="boxcn1bcHeX4VihJDaC7m058KBf" data-original="https://cdn.sspai.com/editor/u_/cdlke55b34tcd6q36fb0" src="https://cdn.sspai.com/editor/u_/cdlke55b34tcd6q36fb0"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;关联阅读：&lt;/strong&gt;&lt;a href="https://sspai.com/post/56699" target="_blank"&gt;用 Tasker 实现时间记录自动化&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;我的实现思路&lt;/h2&gt;&lt;p&gt;实现自动化时间记录的第一步，是要选择可以记录时间并且能提供类似 URL Schema 或类似 API 接口的计时工具。&lt;/p&gt;&lt;figure&gt;&lt;img alt="boxcnhcLSXlFFL96GHZV5ptnRQc" data-original="https://cdn.sspai.com/editor/u_/cdlke5db34tcdtg9f300" src="https://cdn.sspai.com/editor/u_/cdlke5db34tcdtg9f300"/&gt;&lt;/figure&gt;&lt;p&gt;我和 Fairyex 一样，都是使用的 &lt;a href="https://track.toggl.com/timer" target="_blank"&gt;Toggl&lt;/a&gt;（按：如今已更名为 Toggl Track）这一款简洁、无广告且跨平台工具的来记录时间，而该工具又提供了 &lt;a href="https://developers.track.toggl.com/docs/" target="_blank"&gt;API&lt;/a&gt; 接口，所以该工具是这次自动化中用以记录时间的关键。&lt;/p&gt;&lt;p&gt;自动开始计时与停止计时两个过程我们都会通过 Toggl 提供的 API 接口来完成。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关联阅读：&lt;/strong&gt;&lt;a href="https://sspai.com/post/44349" target="_blank"&gt;时间量化管理：Toggl 的使用&lt;/a&gt;&lt;/p&gt;&lt;p&gt;确定了基本的切入点之后，接下来的步骤比较明确：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;检测到目标 App 打开后：开始向 Toggl API 发送 HTTP 请求开始计时，并给出提示消息；&lt;/li&gt;&lt;li&gt;类似地，检测到目标 App 退出后：向 Toggl API 再发送一次 HTTP 请求，表示停止计时并同样给出提示消息，进而完成一次记录。&lt;/li&gt;&lt;/ol&gt;&lt;h2&gt;为什么不用 Tasker&lt;/h2&gt;&lt;p&gt;Fairyex 的文章介绍过一种完全使用 Tasker 来实现记录的自动化方案，所以本质上 MacroDroid 也能实现。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;但我个人不喜欢多次拖拽并在多层级界面中来回切换。&lt;/strong&gt;考虑到在实现的过程中会有一些复杂的逻辑，因此与 Toggl API 交互的部分我主要用 Auto.js 来完成，它可以让我直接编写代码来发送 HTTP 请求——我在之前的文章中有过介绍，Auto.js 是一款允许用户通过编写 JavaScript 代码来实现自动化的 Android 应用，并且也支持安装 &lt;a href="https://www.npmjs.com/" target="_blank"&gt;npm&lt;/a&gt; 包来接入庞大的 JavaScript 生态资源。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关联阅读：&lt;/strong&gt;&lt;a href="https://sspai.com/post/76377" target="_blank"&gt;自己动手实现 Android 自动化：用 Auto.js 自动复制短信验证码&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;不同于 Tasker 或 MacroDroid，在 Auto.js 上我们可以直接用代码编写更为复杂的操作逻辑，并且也可以随时对代码进行调试&lt;/strong&gt;。比如 Toggl 提供了 API 接口，那么用类似于 Tasker 这样的工具来访问请求就需要经过多步点击：&lt;/p&gt;&lt;figure&gt;&lt;img alt="boxcnplKkN3wDGNEGH9NM2OSN4d" data-original="https://cdn.sspai.com/editor/u_/cdlke5tb34tcd6q36fbg" src="https://cdn.sspai.com/editor/u_/cdlke5tb34tcd6q36fbg"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;i&gt;配图引自 Fairyex 文章&lt;/i&gt;&lt;/p&gt;&lt;p&gt;而在使用 Auto.js 的情况下就可以略过多次跳转的过程，直接通过敲入代码来快速搞定，伪代码如下：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;const token = &amp;#x27;&amp;lt;toggl-token&amp;gt;&amp;#x27;
const api = &amp;#x27;&amp;lt;toggl-api&amp;gt;&amp;#x27;
const data = {
    &amp;quot;description&amp;quot;: &amp;quot;task name&amp;quot;
    ...
}
http.post(api, data, {
    headers: {
        &amp;#x27;Authorization&amp;#x27;: `Basic ${token}`
    }
})
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;不过这可能让你以为整个自动化流程仅仅只需要这样简单的 HTTP 请求代码即可，但其实我们还会加入更多的判断逻辑，比如：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;所在的前台应用是否为我们需要计时的目标应用？如果不是我们还是否需要操作？&lt;/li&gt;&lt;li&gt;如果我在桌面端已经有了一个 Toggl 计时，又或者是当前应用已经正在计时，那么我们该怎么处理？&lt;/li&gt;&lt;li&gt;……&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这些判断逻辑可以根据自己的需要随意增删，但随着判断逻辑的增加，倘若还完全地靠点击拖拽来增加更多的应对操作无疑是一件劳心劳力的事情，这也是为什么我是需要 Auto.js 来实现主要步骤。&lt;/p&gt;&lt;p&gt;至于「目标 App 是否打开/关闭」的条件检测，我打算使用 MacroDroid 这一款和 Tasker 类似的自动化工具来辅助，该应用提供的触发器可以很大程度上弥补 Auto.js 缺少的功能。并且 MacroDroid 还兼具功能丰富、易上手且提供中文界面等优点，我在后续将会再写一篇文章详细介绍它，此处暂且按下不表。&lt;/p&gt;&lt;p&gt;至此，整个自动化的实现思路就被我梳理成了如下流程图：&lt;/p&gt;&lt;figure&gt;&lt;img alt="boxcnILaAmsMyGCvFOCiCFZxkag" data-original="https://cdn.sspai.com/editor/u_/cdlke65b34tcdjag47e0" src="https://cdn.sspai.com/editor/u_/cdlke65b34tcdjag47e0"/&gt;&lt;/figure&gt;&lt;h2&gt;基于 Auto.js 编写复杂的操作逻辑&lt;/h2&gt;&lt;p&gt;值得一提的是，除了上面提到的判断逻辑，Toggl API 在开源社区中已有许多第三方实现，并且 Auto.js 也允许我们安装 npm 包。&lt;/p&gt;&lt;p&gt;因此尽管是一套看上去更为复杂的实现方案，但我们依然可以「站在巨人的肩膀上」合理地「偷懒」，在第三方开源包的帮助下节省编程时间。&lt;/p&gt;&lt;h3&gt;创建 Auto.js 项目并安装开源包&lt;/h3&gt;&lt;p&gt;在桌面端上与手机端的 Auto.js 建立连接之后我们就可以在 VS Code 上开始进行代码编写，关于如何在桌面端使用 Auto.js 的具体流程可以参考我上一篇文章，这里就不过多赘述。&lt;/p&gt;&lt;p&gt;因为我使用的是 Auto.js 的付费版本，所以在电脑上创建一个文件夹之后，点击 Auto.js Pro 的插件图标后并选择「创建 V9 API 项目」用以在新建的文件夹中添加相关文件，这也包括常见的 &lt;code&gt;package.json&lt;/code&gt; 开源包管理文件。&lt;/p&gt;&lt;p&gt;所以初始化后的文件夹中包含如下内容：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;timetracker
├── node_modules
├── main.js
├── package-lock.json
├── package.json
├── project.json
└── tsconfig.json
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;参考 Toggl API 文档给出的&lt;a href="https://developers.track.toggl.com/docs/next/third_parties" target="_blank"&gt;参考文档&lt;/a&gt;，我们可以自由选择开源社区的不同编程语言的 Toggl API 版本。&lt;/p&gt;&lt;figure&gt;&lt;img alt="boxcnlqrbIsipXe9zMIWdDt7aAZ" data-original="https://cdn.sspai.com/editor/u_/cdlke6db34tcdb5tu4rg" src="https://cdn.sspai.com/editor/u_/cdlke6db34tcdb5tu4rg"/&gt;&lt;/figure&gt;&lt;p&gt;由于 Auto.js 用的是 JavaScript 编程语言，也就对应的是文档中的 Node.js 部分，所以我就选择了第一项名为 &lt;a href="https://github.com/garyhtou/toggl-track" target="_blank"&gt;toggl-track&lt;/a&gt; 的第三方实现。&lt;/p&gt;&lt;p&gt;接下来我们需要在电脑端进行安装所选的第三方开源包，所以请确保你的当前操作系统中安装了 &lt;a href="https://nodejs.org/en/" target="_blank"&gt;Node.js 环境&lt;/a&gt;，它会自带一个 &lt;code&gt;npm&lt;/code&gt; 安装工具，接着我们切换到项目文件夹中，比如前面的 &lt;code&gt;timetracker&lt;/code&gt;，然后运行如下命令完成安装步骤：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;npm install --no-bin-links toggl-track
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;&lt;p&gt;注：由于 npm 的服务器是在国外，为了加速下载可能需要我们配置一下国内镜像源地址，具体可参考 npmmirror 中国镜像站的&lt;a href="https://npmmirror.com/" target="_blank"&gt;使用说明&lt;/a&gt;。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;之后当我们在电脑上编写好代码之后，我们就可以再次点击 Auto.js 图标，并选择「保存项目到设备」一项，将当前文件夹的所有内容发送至手机，这样就能确保脚本代码能在手机上直接运行。每次点击该选项时桌面端文件夹中的内容都会&lt;strong&gt;直接覆盖&lt;/strong&gt;手机端上的同名文件夹内容。&lt;/p&gt;&lt;p&gt;不过由于我们的自动计时脚本也是可以独立运行，在后续代码中我们只会用引用到安装包的内容，而不会用到 &lt;code&gt;main.js&lt;/code&gt; 代码文件，让其保持默认即可。&lt;/p&gt;&lt;h3&gt;封装与 Toggl API 交互的模块&lt;/h3&gt;&lt;p&gt;虽然 toggl-track 封装了许多向 Toggl API 发送请求的功能函数，但出于个人需要我们可以再基于此进行简单地封装。&lt;/p&gt;&lt;p&gt;考虑到 Auto.js 仅仅只负责整个自动化流程的一部分，加之停止计时可能也会用到 Toggl API，所以我就额外单独封装了一个名为 &lt;code&gt;toggl.js&lt;/code&gt; 的自用脚本模块方便后续被其他脚本所使用：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;#x27;nodejs&amp;#x27;;
const { Toggl } = require(&amp;#x27;toggl-track&amp;#x27;);

class TogglClient {
  constructor({ token = null } = {}) {
    if (!token) {
      throw new Error(&amp;#x27;invalid token&amp;#x27;);
    }

    this._toggl = new Toggl({
      auth: {
        token: token,
      },
    });
  }

  async _getWorkspaceId() {
    const resp = await this._toggl.me.get();
    return resp.default_workspace_id;
  }

  async start(
    name,
    { projectId = null, tags = null, workspace_id = null } = {}
  ) {
    if (!workspace_id) {
      workspace_id = await this._getWorkspaceId();
    }

    const currentTimeEntry = await this._toggl.timeEntry.current();
    if (currentTimeEntry &amp;amp;&amp;amp; currentTimeEntry.description === name) {
      console.log(&amp;#x27;duplicated. time entry has started.&amp;#x27;);
      return;
    }

    let start = new Date();
    const body = {
      created_with: &amp;#x27;Autojs&amp;#x27;, // ID
      description: name, // Description
      workspace_id: workspace_id, // Workspace ID
      start: start.toISOString(), // Start date time
      duration: -Math.floor(start / 1000), // transform seconds
      project_id: projectId,
      tags: tags,
    };
    const resp = await this._toggl.timeEntry.create(workspace_id, body);
    if (typeof resp === &amp;#x27;string&amp;#x27;) {
      const err = JSON.stringify(resp);
      console.error(`something wrong when creating time entry, resp: ${err}`);
      return;
    }
    console.log(`time entry&amp;lt;name=${resp.description}&amp;gt;`);
  }

  async stop() {
    const currentTimeEntry = await this._toggl.timeEntry.current();
    if (!currentTimeEntry) {
      console.log(&amp;quot;there isn&amp;#x27;t any time entry.&amp;quot;);
      return;
    }

    const {
      id: entryId,
      description: name,
      workspace_id,
      at,
    } = currentTimeEntry;
    const start = new Date(at);
    const now = new Date();

    const body = {
      stop: now.toISOString(),
      duration: Math.floor((now - start) / 1000),
    };

    await this._toggl.timeEntry.update(entryId, workspace_id, body);
    console.log(`stop time entry &amp;lt;${name}&amp;gt;`);
  }
}

const defaultClient = new TogglClient({
  token: &amp;#x27;&amp;lt;your-toggl-token&amp;gt;&amp;#x27;,
});
module.exports = {
  defaultClient,
  TogglClient,
};
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;上述虽然代码看起来很多，可对于有 JavaScript 编程经验的人来说可能已经「见码知意」，无需多言；但对于没有编程经验的读者而言我还是需要啰嗦几句。&lt;/p&gt;&lt;p&gt;简单来说，为了让代码能够运行，需要我们填入 Toggl 应用的授权 Token，之后每次在请求 API 时都会用到该授权的 Token。&lt;/p&gt;&lt;p&gt;那么如何获取 Toggl Token？很简单，我们只需要打开登录网页端的 Toggl 之后点击左下角的「Profile」头像部分，再选择「Profile Settings」，最后下拉至「API Token」处点击并复制即可。&lt;/p&gt;&lt;figure&gt;&lt;img alt="boxcndvEktefC9M4kGR32lCEMQd" data-original="https://cdn.sspai.com/editor/u_/cdlke6lb34tcd6q36fc0" src="https://cdn.sspai.com/editor/u_/cdlke6lb34tcd6q36fc0"/&gt;&lt;/figure&gt;&lt;p&gt;除此之外就是额外封装了两个方法 &lt;code&gt;start()&lt;/code&gt; 和 &lt;code&gt;stop()&lt;/code&gt; 用以应对开始计时和停止计时两个行为，二者的核心逻辑类似：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;首先判断是否 Toggl 已经正在计时，甚至计时的任务名称与当前的任务名称一致，那么就不会进行额外请求 API 的操作，仅仅只是输出一下日志提示即跳过；&lt;/li&gt;&lt;li&gt;除此之外，就会按照 Toggl API 的官方要求将请求需要发送的数据进行包装并发送对应操作的请求。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;紧接着，我们就可以新建脚本并引用封装好的内容。由于我已经事先基于自己的 Toggl 应用 Token 创建了一个 &lt;code&gt;defaultClient&lt;/code&gt;，因此我就无需再传入一次 Token 而直接使用，比如我将开始计时的代码命名为 &lt;code&gt;startReader.js&lt;/code&gt;，其内容如下：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;#x27;nodejs&amp;#x27;;
// --------------------
// Auto.js built-in
// --------------------

const { currentPackage } = require(&amp;#x27;accessibility&amp;#x27;);
const { getAppName } = require(&amp;#x27;app&amp;#x27;);
const { showToast } = require(&amp;#x27;toast&amp;#x27;);

// --------------------
// Internal
// --------------------

const { defaultClient } = require(&amp;#x27;./toggl&amp;#x27;);

// --------------------

(async () =&amp;gt; {
  let packageName = currentPackage();
  let appName = getAppName(packageName);

  console.log(`${packageName}, ${appName}`);

  const READER_APP_NAMES = [&amp;#x27;京东读书&amp;#x27;, &amp;#x27;微信读书&amp;#x27;, &amp;#x27;Raindrop&amp;#x27;];
  if (!READER_APP_NAMES.includes(appName)) {
    console.log(`${appName} isn&amp;#x27;t in target reader app list.`);
    return;
  }

  await defaultClient.start(appName, { projectId: &amp;#x27;&amp;lt;your-project-id&amp;gt;&amp;#x27; });
  showToast(&amp;#x27;开始时间记录&amp;#x27;);
})();
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在这段代码中我还会使用到 Auto.js 内置的一些模块进行用于额外的判断逻辑辅助：我会先获取到当前前台的应用是否为我常用的几个阅读类应用，如果不是那么就简单输出一下提示信息则不做其他处理；反之，则调用前面封装好的 &lt;code&gt;start()&lt;/code&gt; 方法开始计时。&lt;/p&gt;&lt;p&gt;其中的任务名称参数为应用名称，并且我还填入了自己通常用于记录阅读类任务的项目组 ID，你如果没有那么可以保持为空。&lt;/p&gt;&lt;p&gt;类似地，停止计时的脚本代码 &lt;code&gt;stopReader.js&lt;/code&gt; 内容如下所示，但相比于开始计时的脚本来说我们则不需要额外的判断：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;#x27;nodejs&amp;#x27;;
// --------------------
// Auto.js built-in
// --------------------

const { showToast } = require(&amp;#x27;toast&amp;#x27;);

// --------------------
// Internal
// --------------------

const { defaultClient } = require(&amp;#x27;./toggl&amp;#x27;);

// --------------------

(async () =&amp;gt; {
  await defaultClient.stop();
  showToast(&amp;#x27;结束记录时间&amp;#x27;);
})();
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;至此，我们基本上已经完成了 Auto.js 的部分，现在只需要为其添加相应的触发机制即可，此时 &lt;code&gt;timetracker&lt;/code&gt; 文件夹的内容又丰富了不少：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;timetracker
├── main.js
├── node_modules
├── package-lock.json
├── package.json
├── project.json
├── startReader.js
├── stopReader.js
├── toggl.js
└── tsconfig.json
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后再次通过「保存项目到设备」选项来确保手机端上的代码是最新版本。&lt;/p&gt;&lt;p&gt;不过由于 Auto.js 中条件触发相关的 API 较为稀缺，因此我就借助了 MacroDroid 来补齐最后一块短板。&lt;/p&gt;&lt;h2&gt;使用 MacroDroid 添加触发条件&lt;/h2&gt;&lt;p&gt;在 MacroDroid 中我们需要新建两个宏分别调用开始计时与停止计时的脚本，这里的宏就相当于我们的自动化流程集合，所有操作都会放到一个宏之中进行管理。&lt;/p&gt;&lt;p&gt;因为开始计时与停止计时的行为逻辑基本一致，所以本小节仅以开始计时为例而不再赘述停止计时的宏创建过程。&lt;/p&gt;&lt;p&gt;进入到 MacroDroid 主页之后我们可以点击选项卡中的「添加宏」模块来创建宏。在 MacroDroid 的宏界面里，除了宏名称之外，我们只需要分别对「触发器」和「动作」两个选项进行设置即可完成宏的创建。&lt;/p&gt;&lt;figure&gt;&lt;img alt="boxcnHERb2sTLeNoCRLg7ewOG9e" data-original="https://cdn.sspai.com/editor/u_/cdlke6tb34tcd6q36fcg" src="https://cdn.sspai.com/editor/u_/cdlke6tb34tcd6q36fcg"/&gt;&lt;/figure&gt;&lt;p&gt;点击触发器区域右上角的加号后，我们选择「应用程序」一项，然后再点击「应用打开/关闭」并选择「应用打开」的选项并确定，之后我们再选择「选择应用」一项来根据名称选择则目标应用，选择完毕即可点击确认进而完成触发器的设置并回到宏界面。&lt;/p&gt;&lt;figure&gt;&lt;img alt="boxcnlv4PTp7WHZ088z7ttKjbtc" data-original="https://cdn.sspai.com/editor/u_/cdlke75b34tcdtg9f30g" src="https://cdn.sspai.com/editor/u_/cdlke75b34tcdtg9f30g"/&gt;&lt;/figure&gt;&lt;p&gt;紧接着再以类似的操作设置「动作」。具体而言就是：同样找到「应用程序」一项，然后点击「Tasker/本地插件」选项，找到并选择 Auto.js 的插件，之后根据 Auto.js 默认的脚本存储路径（默认为系统文件夹下的「脚本」文件夹）找到对应的脚本。&lt;/p&gt;&lt;figure&gt;&lt;img alt="boxcnzHigWfRWtivPl0O2SUCqwh" data-original="https://cdn.sspai.com/editor/u_/cdlke7db34tcdb5tu4s0" src="https://cdn.sspai.com/editor/u_/cdlke7db34tcdb5tu4s0"/&gt;&lt;/figure&gt;&lt;p&gt;完成以上步骤后我们就可以点击宏界面右下角的按钮对其进行保存，保存的宏将会在 MacroDroid 的「宏」选项卡中展示（默认为「未分类」组），之后我们确保该宏处于启动状态即可。&lt;/p&gt;&lt;figure&gt;&lt;img alt="boxcn4qEQHt5kwFSYLO4Mr0peWc" data-original="https://cdn.sspai.com/editor/u_/cdlke7lb34tcdb5tu4sg" src="https://cdn.sspai.com/editor/u_/cdlke7lb34tcdb5tu4sg"/&gt;&lt;/figure&gt;&lt;p&gt;当然最后还要记得为 MacroDroid 加上对应的无障碍权限、锁定后台以及关闭电池优化等设置，避免 MacroDroid 进程被杀掉。&lt;/p&gt;&lt;h2&gt;尾巴&lt;/h2&gt;&lt;p&gt;以上步骤完成后，就可以宣告我们的自动化流程大功告成，最终效果我们在开头已经展示过了，现在你可以再跳回去看看。&lt;/p&gt;&lt;p&gt;不过在我实际的多次使用中，发现 MacroDroid 的触发器机制可能就比较简单粗暴，会出现多次短暂计时的情况。如果我切出并挂起应用时，会触发 MacroDroid 的「应用关闭」导致直接停止计时；类似地，当我从后台唤醒应用时也会触发 MacroDroid 的「应用打开」并调用开始计时脚本。&lt;/p&gt;&lt;p&gt;可从某个角度来看似乎也合理，因为当我们切出当前应用时也说明我们此时并不是真正地在阅读或使用该应用，而重新唤醒并进入到应用则说明我们又开始使用，应当重新开始计时。&lt;/p&gt;&lt;p&gt;所以这看似「Bug」的「Feature」也让我更加专注于阅读，而不容易为其他无关紧要的消息通知所分神。&lt;/p&gt;&lt;p&gt;&amp;gt; 下载 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;少数派 2.0 客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，解锁全新阅读体验 📰&lt;/p&gt;&lt;p&gt;&amp;gt; 实用、好用的 &lt;a href="https://sspai.com/mall" target="_blank"&gt;正版软件&lt;/a&gt;，少数派为你呈现 🚀&lt;/p&gt;&lt;/div&gt;</description><author>100gle</author><guid>https://sspai.com/post/76721</guid><pubDate>Wed, 09 Nov 2022 06:29:37 GMT</pubDate></item><item><title>凛冬将至，你准备好买羽绒服了吗</title><link>https://sspai.com/post/76706</link><description>&lt;div&gt;&lt;p&gt;&lt;strong&gt;Matrix 首页推荐&lt;/strong&gt; &lt;/p&gt;&lt;p&gt;&lt;a href="https://sspai.com/matrix" target="_blank"&gt;Matrix&lt;/a&gt; 是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。 &lt;/p&gt;&lt;p&gt;文章代表作者个人观点，少数派仅对标题和排版略作修改。&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;又到双十一购物节，说来有趣，每年双十一我都会关注羽绒服这一品类，原因大概是冬天即将到来，我隐约有添购衣服的担忧，可又因为此时我还身穿短袖，买羽绒服有种错季购物的感觉，在将羽绒服加入购物车后往往又放弃下单。于是这些年，每到双十一，我的购物车里的羽绒服更新一次，羽绒服照片成了淘宝的皮肤挂件，年年换新。&lt;/p&gt;&lt;p&gt;我当然是有买羽绒服，但往往不是购物车里那件，我在淘宝上浏览的是万元左右的始祖鸟、Moncler、加拿大鹅，加入购物车里的是两千元左右的北面，但最终购买的是千元以内的波司登和优衣库轻薄款，哦对了，还有老家线下店铺的以纯羽绒服。&lt;/p&gt;&lt;p&gt;不过长期以往，我倒是对羽绒服有了足够多的了解，足以写下这篇有参考价值的文章，帮助人们选购羽绒服。&lt;/p&gt;&lt;h2&gt;羽绒服的历史&lt;/h2&gt;&lt;p&gt;人类自古以来就有利用动物皮毛御寒的历史，早在原始社会时期，人类祖先就已经初步掌握了将兽皮制作成衣物的方法，用兽皮和树叶蔽体防寒，后来逐渐出现麻、棉、丝等纺织物，人类衣物变得丰富。相对来说，人类利用禽类羽毛御寒的历史要短得多，在唐朝，人们用鹅绒和布混合填充在被子中，在十三四世纪的欧洲，人们用鸭和鹅的羽毛填充进被套中。&lt;/p&gt;&lt;p&gt;直到 1940 年，现代羽绒服才被发明出来，主角是美国的艾迪·鲍尔，作为一名狂热户外运动爱好者，他在一次户外钓鱼过程中差点冻死，于是决心制作一件真正保暖的外套。鲍尔找到了鹅毛的羽绒，又恰逢杜邦实验室在 1938 年发明了尼龙，尼龙织物质地紧密，与棉布相比，尼龙面料可以防止羽绒「钻绒」，于是，他将二者结合，把羽绒填充进尼龙面料的衣服，绗缝锁绒，并将第一件羽绒外套命名为「Skyliner」，申请了专利。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/8d540e21ed88e60b80a741891369e561.jpg" src="https://cdn.sspai.com/2022/11/09/8d540e21ed88e60b80a741891369e561.jpg"/&gt;&lt;figcaption&gt;鲍尔和他的商店&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;不过羽绒服发明初期并不受普通民众的欢迎，而是得到美国空军的青睐，此后羽绒服一直作为功能性服装，流行于军队和户外运动人群，上个世纪八十年代，羽绒服开始在意大利成为潮流服装，九十年代，羽绒服才被大众所认可。&lt;/p&gt;&lt;h2&gt;何为羽绒服&lt;/h2&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;如果向一个普通消费者提问「什么是羽绒服？」，得到的答案大概率是「填充了羽绒的衣服。」这个答案没有错，只是不够准确。在「羽绒服装」的国标（GB/T 14272-2021）中，对羽绒服给出了以下定义：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;以羽绒为填充物，绒子含量明示值不低于 50% 的服装。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;那么什么是羽绒呢，在另一份「羽绒羽毛」的国标（GB/T 17685-2016）中，对羽毛和羽绒做出了以下解释：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;羽毛绒为生长在水禽类动物身上的羽绒和羽毛的统称。其中，标称值为「绒子含量」大于或等于 50% 的称为「羽绒」，标称值为「绒子含量」小于 50% 的称为「羽毛」。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;绒子包括朵绒、未成熟绒、类似绒和损伤绒。羽绒保暖正是朵绒的功劳，朵绒成朵状，中心是绒核，绒核向外放射许多绒丝，绒丝由许多微小的中空结构鳞片组成，其中蕴含大量静止的的空气，空气的热传导系数低，从而阻碍内部热量的外泄和外部冷空气的入侵。脱落下来的单根绒丝不具备保温功能。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/360c09ce9b3ff702e48d556acdb7b014.jfif" src="https://cdn.sspai.com/2022/11/09/360c09ce9b3ff702e48d556acdb7b014.jfif"/&gt;&lt;figcaption&gt;羽毛和羽绒&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;因为朵绒独特的物理结构，羽绒成为世界上保暖性能最优异的材料，同时羽绒轻盈柔软，这使得羽绒服兼具保暖和轻盈两个优点。&lt;/p&gt;&lt;p&gt;常见的羽绒种类有鹅绒和鸭绒，通常水禽类动物的体型越大，其羽绒的朵绒越大，保暖性能越好。鹅绒的保暖性能要优于鸭绒，在相同的绒子含量下，鹅绒的蓬松度高于鸭绒，相应的，鹅绒羽绒服的价格也会高于鸭绒，鹅绒更常用于高端羽绒服。&lt;/p&gt;&lt;h2&gt;绒子含量、蓬松度和充绒量&lt;/h2&gt;&lt;p&gt;在挑选羽绒服时，除去个人对衣服外观设计的偏好和喜爱，绒子含量、蓬松度和充绒量是我们判断羽绒保暖性能的三个重要指标。根据相关规定，羽绒服上应标注羽绒的种类、绒子含量和充绒量，羽绒种类前面已经提过，不再赘述。蓬松度虽然没有规定必须标注，但许多羽绒服品牌会在商品详情页面展示羽绒的高蓬松度以宣传其保暖性。&lt;/p&gt;&lt;h3&gt;绒子含量&lt;/h3&gt;&lt;p&gt;绒子含量，即羽绒羽毛中绒子所占的质量百分比，与羽绒服的保暖性能息息相关。&lt;/p&gt;&lt;p&gt;前面已经提过，绒子包括朵绒、未成熟绒、类似绒和损伤绒，羽绒羽毛中，除了绒子外，还包括绒丝、羽丝、水禽损伤毛、陆禽毛（鸡、鸽子、鸵鸟等动物的毛）、长毛片和杂质等物质。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/ed4c28e18dc018378f9fc172e6879458.jpg" src="https://cdn.sspai.com/2022/11/09/ed4c28e18dc018378f9fc172e6879458.jpg"/&gt;&lt;figcaption&gt;朵绒&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;不同领域的品牌的羽绒服在绒子含量上有明显差异，比如传统体育品牌如 Nike、Adidas、安踏和李宁，他们所生产的羽绒服绒子含量通常在 70%-85%，而更专业的羽绒服品牌绒子含量在 85% 以上，比如雅鹿、波司登、北面、始祖鸟。&lt;/p&gt;&lt;p&gt;绒子含量是 2022 年 4 月启用的标准，代替了之前的「含绒量」，含绒量是绒子和绒丝在羽绒羽毛中的质量占比，而绒丝并不具有保温能力，相对来说，使用绒子含量标示羽绒的保温能力更加严格有效。&lt;/p&gt;&lt;h3&gt;蓬松度&lt;/h3&gt;&lt;p&gt;蓬松度，是指在一定直径的容器内，一定量的羽绒羽毛样品在规定的压力下所占的体积，它代表了羽绒储存空气能力的强弱。&lt;/p&gt;&lt;p&gt;在「羽绒服装」的国标（GB/T 14272-2021）中，蓬松度的测定采用蒸汽还原法，测试过程简单来说就是用蓬松度仪测出 30(±0.1)g 羽绒羽毛样品在内径为 288(±1)mm 防静电玻璃圆筒内的高度，所以有时我们能见到蓬松度用高度 cm 表示。不过，我们更多见到的羽绒服蓬松度是「F.P.蓬松度」，单位为 in³/30g，表示 30g 羽绒羽毛样品在规定压力下的体积，常见的羽绒蓬松度为 550、600、700、800，部分羽绒服羽绒蓬松度能达到 1000。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/36a54df3d2481010f00bf623ec6a9312.jpg" src="https://cdn.sspai.com/2022/11/09/36a54df3d2481010f00bf623ec6a9312.jpg"/&gt;&lt;figcaption&gt;不同蓬松度下羽绒的体积&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;蓬松度与绒子含量有关，也与羽绒种类相关。以北面的羽绒服为例，北面所有的羽绒服填充的羽绒都是鹅毛，蓬松度从 550 到 800 不等，蓬松度 550 的鹅绒含绒量（北面的产品未标注绒子含量）为 75%，蓬松度 600 的鹅绒含绒量为 80%，蓬松度 800 的鹅绒含绒量 90%。波司登的羽绒服可以作为另一个例子，其产品的绒子含量通常为 90%，鸭绒的蓬松度通常为 680，而鹅绒可以达到 800 蓬松度。&lt;/p&gt;&lt;h3&gt;充绒量&lt;/h3&gt;&lt;p&gt;充绒量是一个很容易理解的概念，即一件羽绒服全部填充羽绒的质量。绒子含量和蓬松度是单位羽绒的保暖性能指标，而充绒量则是羽绒服内羽绒的重量指标。&lt;/p&gt;&lt;p&gt;充绒量除了受羽绒服的薄厚影响外，也与尺码和款式相关。同款羽绒服，大尺寸充绒量比小尺寸高；相同的厚度，长款羽绒服充绒量比短款高。因此判断一件羽绒服充绒量高低要综合尺寸和款式的因素考量。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/4bc04dfa48a66f8ca47dfa57c1297f3c.jpg" src="https://cdn.sspai.com/2022/11/09/4bc04dfa48a66f8ca47dfa57c1297f3c.jpg"/&gt;&lt;figcaption&gt;波司登羽绒服的水洗标&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;凭借羽绒种类、绒子含量、蓬松度和充绒量这几个因素，消费者大致可以判断羽绒服羽绒的保暖能力。如果预算有限，那么可以选择高绒子含量、低充绒量或高充绒量、低绒子含量的鸭绒羽绒服，可供选择的品牌有传统运动品牌、快消品牌和国产二线品牌（如雪中飞、鸭鸭、雅鹿）；如果预算超过 700 元，可选择的范围大大增加，可以选择兼具高绒子含量和高充绒量的羽绒服，也可以选择鹅绒羽绒服，比如国产品牌黑冰、天石，军羽等；如果预算超过 1500 元，这个价位有许多国内外知名户外运动品牌可选，无需推荐。&lt;/p&gt;&lt;h2&gt;锁绒：绗缝和压胶&lt;/h2&gt;&lt;p&gt;羽绒充进羽绒服，需要对羽绒固定锁绒，否则羽绒会结成一团，影响保暖性能。从艾迪·鲍尔发明羽绒的时候他便找到了固定羽绒的方式——绗缝，并一直沿用至今。目前羽绒服锁绒方式主要为绗缝和压胶。&lt;/p&gt;&lt;h3&gt;绗缝&lt;/h3&gt;&lt;p&gt;绗缝，即用长针缝制有夹层的纺织物，使里面的棉花、羽绒等填充物固定。绗缝是羽绒服最普遍的锁绒方式，羽绒服上常见的一条条缝线就是绗缝线。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/8195e9c12936d36308197f97585bf607.jpg" src="https://cdn.sspai.com/2022/11/09/8195e9c12936d36308197f97585bf607.jpg"/&gt;&lt;figcaption&gt;绗缝锁绒&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;绗缝能有效的固定羽绒，使其在羽绒服内分布均匀，但绗缝也存在一些缺陷，比如钻绒，羽绒从绗缝留下的针孔位置钻出，羽绒服钻绒严重程度视羽绒服的防钻绒工艺水平而定。另一方面，绗缝的针孔会透风和渗水，影响保暖，有的羽绒服通过更好的面料和绗缝工艺解决此类问题，有的羽绒服外部还有防风防水的外壳面料。&lt;/p&gt;&lt;h3&gt;压胶&lt;/h3&gt;&lt;p&gt;压胶锁绒有效避免了绗缝针孔带来的钻绒和透风、进水问题。所谓压胶，就是将羽绒服的面料和里料通过压胶机热压粘合在一起，用「粘」代替「缝」，从而避免绗缝针孔的出现。现在有许多品牌的羽绒服使用压胶锁绒。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/509c384940268c600b82174a6641850a.jpg" src="https://cdn.sspai.com/2022/11/09/509c384940268c600b82174a6641850a.jpg"/&gt;&lt;figcaption&gt;没有绗缝线的压胶锁绒工艺&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;压胶锁绒弥补了绗缝锁绒的缺陷，但自身却存在一个不可忽视的问题——寿命短。压胶粘合不如绗缝牢固，因而对洗涤的要求更高，稍有不慎，就会使粘合处分开，致使内部羽绒结成一团。即便小心维护，压胶处仍然会因为老化问题而开胶。对此，我深有体会，我曾购入一件波司登采用压胶锁绒的羽绒服，在穿着次数很少，洗涤按照相关要求的情况下，刚过三年，衣服背部便出现了开胶问题。不过，羽绒服出现开胶可联系相关商家寻求售后解决（不一定能解决，比如我）。&lt;/p&gt;&lt;h2&gt;面料&lt;/h2&gt;&lt;p&gt;在「羽绒服装」国标中，关于面料的规定是「与羽绒直接绗缝的面料应具有防钻绒功能」。有的羽绒服羽绒直接与面料绗缝，有的羽绒服有羽绒内胆，将羽绒与面料隔开。&lt;/p&gt;&lt;p&gt;目前羽绒服面料的材料以涤纶（聚酯纤维）或锦纶（尼龙，或聚酰胺纤维）为主，部分羽绒服使用涤纶、锦纶和棉混纺的面料，锦纶耐磨性和透气性优于涤纶，更多应用于高端羽绒服面料。按照面料性能大致可分为三类，普通梭织面料、高密度防水面料和防水型涂层（覆膜）面料。&lt;/p&gt;&lt;p&gt;普通梭织面料由密度较低的锦纶或涤纶织造而成，因其密度不高，为防止钻绒，不与羽绒直接接触，面料里侧有防绒布或胆布，因而在部分梭织面料上看不到羽绒服绗缝线。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/7887f436ee1af966baedc02d00a4b258.jpg" src="https://cdn.sspai.com/2022/11/09/7887f436ee1af966baedc02d00a4b258.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;高密度防水面料在羽绒服中最为常见，采用高密度涤纶或锦纶面料，具有一定的防风、防泼水和透气性能，轻薄柔软，便于携带。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/bdc5dd5454ecb92b7f01cb4cac9e5210.jpg" src="https://cdn.sspai.com/2022/11/09/bdc5dd5454ecb92b7f01cb4cac9e5210.jpg"/&gt;&lt;figcaption&gt;高密度防水面料&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;防水型涂层面料更多应用于户外高端羽绒服，类似冲锋衣面料，但比冲锋衣面料稍薄，防湿、防风和透气性比高密度防水面料更好。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/16c9f29bbc385278b71809cadcdc5968.jpg" src="https://cdn.sspai.com/2022/11/09/16c9f29bbc385278b71809cadcdc5968.jpg"/&gt;&lt;figcaption&gt;防水型涂层&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;对于大部分人来说，如果购买羽绒服只用于日常休闲穿着，羽绒服的羽绒保暖性能和款式版型更为重要，对面料无需太过挑剔。但对于户外运动爱好者来说，羽绒服面料的防风和防水显得尤为重要，尤其是防水，朵绒在遇水后会缩成一团，影响衣服的保暖性。除了面料防水，还有羽绒防水技术，羽绒防水是对羽绒进行防水处理，在羽绒表面形成拒水膜，从而使得羽绒自身具有防水能力。&lt;/p&gt;&lt;p&gt;越来越多的羽绒服品牌将面料科技作为宣传卖点，从三四百的安踏羽绒服的防泼水、防油污面料到上万元的始祖鸟羽绒服采用的 GORE-TEX 面料，北面旗下羽绒服的面料科技更是让人眼花缭乱，除了 GORE-TEX 面料，还有 DRYVENT 面料、DWR 涂层面料、防风的 WindWall 面料，巅峰系列 WindWall 和 PERTEX 结合的面料。此外，市面上还有与 GORE-TEX 性能相当的 eVent 面料、哥伦比亚的 Omni-Tex 面料等。而在这些面料当中，GORE-TEX 面料和 DWR 涂层面料最具代表性。&lt;/p&gt;&lt;h3&gt;GORE-TEX 面料&lt;/h3&gt;&lt;p&gt;GORE-TEX 是由美国戈尔公司独家发明和生产的一种具有良好的防水、防风和透气性能的薄膜，采用膨体聚四氟乙烯（ePTFE）制成，这类材质表面有许多微孔，能够阻挡水滴进入，而水蒸气的水分子能自由通过，达到很好的防水排湿效果。GORE-TEX 面料通常为为三层结构，GORE-TEX 薄膜夹在中间，两边被其他面料包裹。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/883dbfc4cb50414bc76431d9784ecad0.jpg" src="https://cdn.sspai.com/2022/11/09/883dbfc4cb50414bc76431d9784ecad0.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;GORE-TEX 面料服装因其出色防水、防风和透气性能，受到户外运动爱好者和军方的青睐，一如当年刚发明出来的羽绒服，GORE-TEX 面料的羽绒服是二者完美的结合，只是那高昂的价格很不完美，不谈近万的始祖鸟羽绒服，即便是国产凯乐石，采用该面料的羽绒服，价格也超过两千。&lt;/p&gt;&lt;p&gt;GORE-TEX 面料除了应用于服装（冲锋衣和羽绒服），还应用于部分主打户外的鞋子和手套上。eVent 面料和北面的 DRYVENT 面料也采用了类似的膨体聚四氟乙烯（ePTFE）薄膜技术。&lt;/p&gt;&lt;h3&gt;DWR 防泼水涂层&lt;/h3&gt;&lt;p&gt;DWR是 Durable Water Repellency 的缩写，即持久性防水涂层，通过在面料表面涂上 DWR 涂层，使之具有类似荷叶不被水滴打湿的能力。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/09/f65e2dd053c1d247903d28d95aabb120.jpg" src="https://cdn.sspai.com/2022/11/09/f65e2dd053c1d247903d28d95aabb120.jpg"/&gt;&lt;figcaption&gt;某款羽绒服宣传页面&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;DWR 涂层不具有 GORE-TEX 面料类似的防水能力，后者定义为「防水」，而 DWR 涂层通常定义为「防泼水」，DWR 涂层能够避免短时间的小雨或小雪打湿衣物，在长时间雨雪下效果不佳。DWR 涂层在户外产品有较多应用，GORE-TEX 面料表面也有该涂层，不过防泼水涂层会随着穿着使用逐渐磨损，影响防水效果，在网上可以找到修补 DWR 涂层的方法。&lt;/p&gt;&lt;h2&gt;结尾&lt;/h2&gt;&lt;p&gt;以上便是关于羽绒服的一些知识点，了解了它们定会在你选购羽绒服时有所帮助。以我个人经验而言，如果没有户外需求，选购时优先考虑适合自己的保暖性能和款式的羽绒服，前者与金钱有关，后者与喜欢有关。选择合适的保暖性能，避免过厚的羽绒服而浪费钱财——毕竟更厚的羽绒服相对价格更贵，过薄保暖不佳——其实是另一种浪费钱财。选择一件自己喜欢的款式的羽绒服很重要，不喜欢的款式穿着次数会大大减少——同样也是一种对钱财的浪费。&lt;/p&gt;&lt;p&gt;如果有户外需求，那么应该考虑选择有一定防水能力的羽绒服，相对传统运动品牌或快消品牌的羽绒服，众多户外品牌羽绒服是更好的选择，虽然价格较贵，但更符合户外实际需要。&lt;/p&gt;&lt;p&gt;如果预算有限，应尽可能考虑国产品牌和鸭绒的羽绒服；而如果不差钱，又回到了那句话——考虑适合自己的保暖性能和款式的羽绒服——当然，此时​与金钱无关。&lt;/p&gt;&lt;h3&gt;参考资料&lt;/h3&gt;&lt;p&gt;&amp;gt; 下载 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;少数派 2.0 客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，解锁全新阅读体验 📰&lt;/p&gt;&lt;p&gt;&amp;gt; 实用、好用的 &lt;a href="https://sspai.com/mall" target="_blank"&gt;正版软件&lt;/a&gt;，少数派为你呈现 🚀&lt;/p&gt;&lt;/div&gt;</description><author>吃饭Bu洗碗</author><guid>https://sspai.com/post/76706</guid><pubDate>Wed, 09 Nov 2022 03:23:33 GMT</pubDate></item><item><title>派早报：联发科推出天玑 9200 移动芯片 、OriginOS 3 发布等</title><link>https://sspai.com/post/76709</link><description>&lt;div&gt;&lt;h2&gt;你可能错过的新鲜事&lt;/h2&gt;&lt;h3&gt;联发科推出天玑 9200 移动芯片&lt;/h3&gt;&lt;p&gt;联发科于 11 月 8 日正式发布天玑 9200 移动芯片，天玑 9200 搭载 8 核 CPU，其中 Cortex-X3 超大核主频达 3.05GHz，支持纯 64 位应用；GPU 部分采用 11 核 Immortalis-G715，支持移动端硬件光追以及可变速率渲染技术；集成了第六代 APU 处理器，可进一步降低各类 AI 应用功耗；另外天玑 9200 最高兼容 8533Mbps LPDDR5X 内存和 8 通道 UFS4.0 闪存，支持通过多循环队列技术提高数据传输速度。&lt;/p&gt;&lt;p&gt;网络性能方面，天玑 9200 支持 5G 新双通，支持多种网络制式以及 100+ 频段组合；支持 Wi-Fi 7 无线连接以及新一代的蓝牙音频协议 LE Audio；影像方面搭载 Imagiq 890 影像处理器，支持 RGBW 传感器，可在暗光条件下获得更明亮、锐利，细节更丰富的照片和视频；多媒体方面则支持24bit/192KHz 高清音频编解码。通过其搭载的 MediaTek MiraVision 890 移动显示技术，天玑 9200 支持全场景高品质 HDR 显示，在 Full HD+ 分辨率下最高支持 240Hz 刷新率、WQHD 分辨率下最高支持 144Hz 刷新率、5K（2.5K×2）分辨率下最高支持 60Hz 刷新率，同时也支持芯片级智能防蓝光。搭载天玑 9200 芯片的智能手机预计将会在 2022 年底上市。 &lt;a href="https://corp.mediatek.cn/news-events/press-releases/mediatek-launches-flagship-dimensity-9200-chipset-for-incredible-performance-and-unmatched-power-savings" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;vivo 发布 OriginOS 3&lt;/h3&gt;&lt;p&gt;11 月 8 日的 vivo 开发者大会上，vivo 正式发布 OriginOS 3。底层方面，OriginOS 3 针对多任务、游戏等高并发场景优化了资源管理调度算法，针对部分白名单应用设计了新的后台状态恢复机制，在 60 帧刷新率模式下引入运动模糊算法进行实时补偿，同时基于物理世界加速度曲线规律优化了系统动画；设计方面，OriginOS 3 通过对系统界面层级关系和布局的优化进一步完善了设计体系，并提供更多小组件、天气动态效果、新版动态壁纸以及更多个性化选项；此外 OriginOS 3 还针对桌面文件夹推出了图标组件模式和图标模式、为超级小窗多任务功能带来了五种多任务组合方式、引入了场景化侧边栏功能并新增了包含冥想、睡眠、阅读等场景在内的 7 种专注模式。&lt;/p&gt;&lt;figure&gt;&lt;img alt="boxcnPc4MXfJkWpqL099cfeKGQc" data-original="https://cdn.sspai.com/editor/u_/cdlfkn5b34tcdb5tu3rg" src="https://cdn.sspai.com/editor/u_/cdlfkn5b34tcdb5tu3rg"/&gt;&lt;/figure&gt;&lt;p&gt;OriginOS 3 将在 vivo 的下一款旗舰机型上首发搭载，其余机型将从 11 月 25 日起陆续收到更新。&lt;a href="https://weibo.com/7506173780/Me4OXx5Ps" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;创新发布 Sensemore Air 耳机&lt;/h3&gt;&lt;p&gt;创新科技于 11 月 8 日推出 Sensemore Air 真无线蓝牙耳机，Sensemore Air 采用了蓝牙 5.2 和 Sensemore 技术，可通过 Creative APP 对环境音大小进行调节，允许用户根据场景自由调整降噪效果和强度；硬件方面采用 6mm生物纤维驱动单元，经过专业调音并支持通过 App 进行均衡器调节，配备两个降噪麦克风和两个通话麦克风，支持触摸控制和 IPX5 级防水。续航方面，Sensemore Air 单次续航时间为 10 个小时，配合充电盒可以使用 35 个小时，充电 10 分钟可获得 2 小时续航时间，充电盒支持无线充电。Sensemore Air 售价为 119 新加坡元，约合人民币 614 元。&lt;a href="https://asia.creative.com/p/headphones-headsets/creative-sensemore-air" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;figure&gt;&lt;img alt="boxcnBhTyBoPfzOe5Frk82WwdXg" data-original="https://cdn.sspai.com/editor/u_/cdlfknlb34tcd6q36ds0" src="https://cdn.sspai.com/editor/u_/cdlfknlb34tcd6q36ds0"/&gt;&lt;/figure&gt;&lt;h3&gt;雷诺将与 Google 扩展汽车软件服务合作&lt;/h3&gt;&lt;p&gt;11 月 8 日，雷诺宣布将与 Google 进一步扩展在汽车软件服务方面的合作，为旗下车辆带来更好的软件服务体验和更具持续性的软件更新体验。双方于 2018 年开始的云计算业务合作也将得到进一步深化，雷诺后续将以 Google 为首选云服务提供商，助力公司最终完成基于云服务的运营模式转换。&lt;a href="https://www.globenewswire.com/news-release/2022/11/08/2550440/0/en/Renault-Group-Renault-Group-and-Google-Accelerate-Partnership-to-Develop-the-Vehicle-of-Tomorrow-and-Strengthen-Renault-Group-s-Digital-Transformation.html" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;微软发布 DirectStorage 1.1 正式版&lt;/h3&gt;&lt;p&gt;11 月 8 日，微软宣布 DirectStorage 1.1 版本正式上线，新特性 GPU 解压缩以及 Gdeflate 也已经可用，可让游戏数据加载所需时间进一步减少。目前英伟达和英特尔都已发布支持 DirectStorage 1.1 的新版驱动，前者为 GeForce Game Ready 526.47 版本，后者为 31.0.101.3793 Beta 版本，玩家如果想要体验这项新技术带来的优化效果，除了安装新版驱动外还需要将游戏安装在 NVMe SSD 中，并使用支持 DirectX 12、Shader Model 6.0 或 DirectX 12 Ultimate 的显卡。&lt;a href="https://devblogs.microsoft.com/directx/directstorage-1-1-now-available/" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Netflix 将推出《战争机器》真人电影&lt;/h3&gt;&lt;p&gt;11 月 8 日，Netflix 在官网发布公告表示已与知名游戏《战争机器》系列开发商 The Coalition 达成合作关系，Netflix 计划将《战争机器》系列游戏改编成真人故事片及成人向动画剧集，后续可能还会推出更多影视内容。《战争机器》最初于 2006 年发布，目前销量已超过 4000 万份。&lt;a href="https://about.netflix.com/en/news/fire-up-your-lancers-the-gears-of-war-universe-is-coming-to-netflix" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;figure&gt;&lt;img alt="boxcnj549ux8FiovxbyWdTSTmvf" data-original="https://cdn.sspai.com/editor/u_/cdlfkntb34tcdtg9f1n0" src="https://cdn.sspai.com/editor/u_/cdlfkntb34tcdtg9f1n0"/&gt;&lt;/figure&gt;&lt;h2&gt;看看就行的小道消息&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;据知情人士透露，Meta 计划本周开始大规模裁员，这可能是疫情期间该行业快速增长后最近一连串技术裁员中最大的一轮，预计将影响数千名员工；知情人士表示，公司官员已经告诉员工从本周开始取消非必要的旅行。截至 9 月底，Meta 拥有超过 87000 名员工。&lt;a href="https://www.wsj.com/articles/meta-is-preparing-to-notify-employees-of-large-scale-layoffs-this-week-11667767794" target="_blank"&gt;来源&lt;/a&gt;&lt;/li&gt;&lt;li&gt;知名爆料人 &lt;a href="https://twitter.com/kopite7kimi" target="_blank"&gt;@kopite7kimi&lt;/a&gt; 透露，上个月因为命名和定价问题暂停发布的 12GB 版本英伟达 RTX 4080 显卡将更名为 RTX 4070 Ti 重新发布，发布日期暂定为 2023 年 1 月。&lt;a href="https://www.theverge.com/2022/11/8/23446875/nvidia-rtx-4080-12gb-return-rtx-4070-ti-rumor" target="_blank"&gt;来源&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;少数派的近期动态&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;🎵 用现代耳机致敬经典 iPod，少数派 × SONGX 联名耳机 &lt;a href="https://sspai.com/page/pipods" target="_blank"&gt;PiPods 正式上线众筹&lt;/a&gt;。&lt;/li&gt;&lt;li&gt;🛒 满赠红包封面，还有周边上新，少数派商店&lt;a href="https://sspai.com/post/76409" target="_blank"&gt;双十一活动&lt;/a&gt;已经开启。&lt;/li&gt;&lt;li&gt;🗞 会员计划栏目派周报总结每周会员内容，并讨论近期科技热点，上周话题是&lt;a href="https://sspai.com/prime/story/pi-weekly-016" target="_blank"&gt;推特对认证徽章收费&lt;/a&gt;。&lt;/li&gt;&lt;li&gt;✍️ 我们制作了一份《&lt;a href="https://sspai.com/post/76154" target="_blank"&gt;少数派创作手册&lt;/a&gt;》，编纂和更新了少数派与内容创作相关的流程和规范，欢迎与我们继续共创。&lt;/li&gt;&lt;li&gt;🎙 少数派与知名播客制作人婉莹和甜食一道，为每一位想要用声音表达的创作者，准备了新栏目《&lt;a href="https://sspai.com/post/75849" target="_blank"&gt;100 小时后请叫我播客主理人&lt;/a&gt;》，现正上架优惠中。&lt;/li&gt;&lt;li&gt;⬆️ 超频你的生产力，来看看&lt;a href="https://sspai.com/post/76551" target="_blank"&gt;这份人人都能学会的 PPT 制作方法论&lt;/a&gt;。&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;你可能错过的文章&lt;/h2&gt;&lt;p&gt;&amp;gt; 下载 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;少数派 2.0 客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，解锁全新阅读体验 📰&lt;/p&gt;&lt;p&gt;&amp;gt; 实用、好用的 &lt;a href="https://sspai.com/mall" target="_blank"&gt;正版软件&lt;/a&gt;，少数派为你呈现 🚀&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;/div&gt;</description><author>少数派编辑部</author><guid>https://sspai.com/post/76709</guid><pubDate>Wed, 09 Nov 2022 00:58:18 GMT</pubDate></item><item><title>新活动、新玩法，少数派正版软件「双十一」开启</title><link>https://sspai.com/post/76681</link><description>&lt;div&gt;&lt;p&gt;又到了一年一度的「双十一」购物节，少数派照例为大家带来了众多优质正版软件的年度大型折扣专场，无论是买新还是续订，都可以趁着优惠果断出手。今年，我们还为你带来了新的活动玩法与更多福利。&lt;/p&gt;&lt;p&gt;🎁 &lt;a href="https://sspai.com/mall/discount/47" target="_blank"&gt;少数派网站活动专区&lt;/a&gt; | &lt;a href="https://market.m.taobao.com/app/tb-source-app/shopact/pages/index?wh_weex=true&amp;amp;pathInfo=shop/activity&amp;amp;userId=2210846011241&amp;amp;shopId=184770392&amp;amp;pageId=317934706&amp;amp;alisite=true" target="_blank"&gt;少数派正版软件淘宝商店&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;新玩法&lt;/h2&gt;&lt;h3&gt;买指定商品赠软件兑换码&lt;/h3&gt;&lt;p&gt;本次「双十一」，我们联合国内优秀的独立开发作品《&lt;a href="https://sspai.com/post/75164" target="_blank"&gt;我的番茄&lt;/a&gt;》为少数派用户带来了买赠兑换码的特别活动。只要你在下述软件商品的活动期间内下单购买下述商品，我们将于本月 30 日前为你发送《我的番茄》季度订阅的 App Store 兑换码 1 枚。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/08/1dd1d536fcc3609e13d9eb6706300b5c.jpg" src="https://cdn.sspai.com/2022/11/08/1dd1d536fcc3609e13d9eb6706300b5c.jpg"/&gt;&lt;figcaption&gt;《我的番茄》应用截图。&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;请注意，即使你购买了多款符合条件的商品，我们也将只发送 1 枚兑换码至你少数派订单中预留的邮箱。还请大家理性消费，明确需求之后再行入手。在少数派网站或正版软件淘宝商店于买赠活动期间内 (见下方商品括号内时间，与商品本身折扣活动时间可能不同) 购买活动指定商品，均可参加本次《我的番茄》兑换码买赠活动。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Microsoft 365 工具升值包 (11.07-11.26)：&lt;a href="https://sspai.com/item/25" target="_blank"&gt;少数派网站&lt;/a&gt; | &lt;a href="https://market.m.taobao.com/app/tb-source-app/shopact/pages/index?wh_weex=true&amp;amp;pathInfo=shop/activity&amp;amp;userId=2210846011241&amp;amp;shopId=184770392&amp;amp;pageId=315073485&amp;amp;alisite=true" target="_blank"&gt;淘宝商店&lt;/a&gt;&lt;/li&gt;&lt;li&gt;滴答清单工具升值包 (11.07-11.21)：&lt;a href="https://sspai.com/item/315" target="_blank"&gt;少数派网站&lt;/a&gt; | &lt;a href="https://item.taobao.com/item.htm?ft=t&amp;amp;id=657585154023" target="_blank"&gt;淘宝商店&lt;/a&gt;&lt;/li&gt;&lt;li&gt;MarginNote 工具升值包 (11.07-11.21)：&lt;a href="https://sspai.com/item/42" target="_blank"&gt;少数派网站&lt;/a&gt; | &lt;a href="https://item.taobao.com/item.htm?ft=t&amp;amp;id=671752696936" target="_blank"&gt;淘宝商店&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Eagle 工具升值包 (11.07-11.21)：&lt;a href="https://sspai.com/item/19" target="_blank"&gt;少数派网站&lt;/a&gt; | &lt;a href="https://item.taobao.com/item.htm?ft=t&amp;amp;id=671197068416" target="_blank"&gt;淘宝商店&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Sorted 工具升值包 (11.07-11.21)：&lt;a href="https://sspai.com/item/282" target="_blank"&gt;少数派网站&lt;/a&gt; | &lt;a href="https://item.taobao.com/item.htm?ft=t&amp;amp;id=671753224465" target="_blank"&gt;淘宝商店&lt;/a&gt;&lt;/li&gt;&lt;li&gt;iSlide 工具升值包 (11.07-11.21)：&lt;a href="https://sspai.com/item/12" target="_blank"&gt;少数派网站&lt;/a&gt; | &lt;a href="https://item.taobao.com/item.htm?ft=t&amp;amp;id=684008551723" target="_blank"&gt;淘宝商店&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Cubox 工具升值包 (11.07-11.21)：&lt;a href="https://sspai.com/item/192" target="_blank"&gt;少数派网站&lt;/a&gt; | &lt;a href="https://item.taobao.com/item.htm?ft=t&amp;amp;id=656809822122" target="_blank"&gt;淘宝商店&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;订单满额赠水獭红包封面&lt;/h3&gt;&lt;p&gt;从微信推出红包封面开始，我们每年都会设计具有少数派特色的封面，通过各种活动赠出，也变成了一个有仪式感的小传统。&lt;/p&gt;&lt;p&gt;随着红包封面使用的常态化，即使不是春节也可以制作使用红包封面，恰逢双十一，对于那些喜爱少数派品牌并期望个性化表达的用户，我们为你准备了两款全新的红包封面，去掉了春节封面的喜庆元素，更适合日常生活中使用。&lt;/p&gt;&lt;p&gt;今次的红包封面主要分为了「招财水獭款」与「水獭点点款」，其中「招财水獭款」于&lt;strong&gt; &lt;/strong&gt;11.07-11.21 期间在&lt;a href="https://sspai.com/mall" target="_blank"&gt;少数派网站&lt;/a&gt;或&lt;a href="https://appstore.sspai.com" target="_blank"&gt;正版软件淘宝店&lt;/a&gt;购买任意软件商品实付总额满 ¥ 49 即可获得。请注意，只要在活动期间内购买软件商品订单实付总额达到 49 元 (少数派软件商城所有商品均参与红包封面赠送活动，活动对于单笔订单金额无限制)，我们就会为你送出「招财水獭款」红包封面；我们将于本月 30 日前为你发送红包封面 (正版软件淘宝店需要同时满足确认收货条件)。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/10/26/1e8c8fd864d20ec4e76aec693b62b769.jpeg" src="https://cdn.sspai.com/2022/10/26/1e8c8fd864d20ec4e76aec693b62b769.jpeg"/&gt;&lt;/figure&gt;&lt;p&gt;我们还将于 11 月 10 日带来少数派周边商店第二轮的「双十一」活动，「水獭点点款」红包封面也将返场赠送，更多消息可以关注 &lt;a href="https://sspai.com/u/xyzyq6cj" target="_blank"&gt;@吃派的水獭&lt;/a&gt; 后续的更多动态。&lt;/p&gt;&lt;h3&gt;会员专属优惠券享折上折&lt;/h3&gt;&lt;p&gt;本次「双十一」活动，我们也为&lt;a href="https://sspai.com/prime" target="_blank"&gt;少数派会员&lt;/a&gt;准备了专属软件商品优惠券，会员用户可以在软件商品的「双十一」活动期间内叠加使用优惠券再享折上折，你可以在&lt;a href="https://sspai.com/prime/me" target="_blank"&gt;会员中心&lt;/a&gt;看到我们为你发放的本月优惠券；请注意，由于少数派会员优惠券需要通过人工手动发放，新入会的会员用户需要私信联系 &lt;a href="https://sspai.com/u/nicholaszhang" target="_blank"&gt;@张奕源Nick&lt;/a&gt; 领取本月专属优惠券。&lt;/p&gt;&lt;h2&gt;软件优惠 5 折起&lt;/h2&gt;&lt;p&gt;我们也为你整理了部分值得关注的软件促销活动，更多软件优惠请前往&lt;a href="https://sspai.com/mall/discount/47" target="_blank"&gt;少数派网站活动专区&lt;/a&gt;和&lt;a href="https://market.m.taobao.com/app/tb-source-app/shopact/pages/index?wh_weex=true&amp;amp;pathInfo=shop/activity&amp;amp;userId=2210846011241&amp;amp;shopId=184770392&amp;amp;pageId=317934706&amp;amp;alisite=true" target="_blank"&gt;淘宝活动专区&lt;/a&gt;了解和购买。&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;Microsoft 365 工具升值包&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;💰 家庭版 (15 个月) 立减 ¥40 / 个人版 (15 个月) 立减 ¥30&lt;/li&gt;&lt;li&gt;⏰ 优惠时间：2022.11.07 - 2022.11.26&lt;/li&gt;&lt;li&gt;🛒 &lt;a href="https://sspai.com/item/25" target="_blank"&gt;少数派网站&lt;/a&gt; | &lt;a href="https://market.m.taobao.com/app/tb-source-app/shopact/pages/index?wh_weex=true&amp;amp;pathInfo=shop/activity&amp;amp;userId=2210846011241&amp;amp;shopId=184770392&amp;amp;pageId=315073485&amp;amp;alisite=true" target="_blank"&gt;少数派淘宝&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;在少数派购买 &lt;strong&gt;Microsoft 365 工具升值包&lt;/strong&gt;，你将获得：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Microsoft 365 订阅权限&lt;/li&gt;&lt;li&gt;累计&lt;strong&gt;超八万字&lt;/strong&gt;的 Microsoft 365 定制内容&lt;/li&gt;&lt;/ul&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2021/06/08/d6c3b486aa786549a1e8ec6d97dd37e1.png" src="https://cdn.sspai.com/2021/06/08/d6c3b486aa786549a1e8ec6d97dd37e1.png"/&gt;&lt;/figure&gt;&lt;p&gt;设计讲师 &lt;a href="https://sspai.com/u/keantares" target="_blank"&gt;@艾伦习字&lt;/a&gt; 有着丰富的大型公司发布会幻灯片的制作经验。他从实战经验中，总结出了幻灯片制作的三阶段理论。通过他的经验分享，来剖析制作幻灯片的流程和技巧。&lt;/p&gt;&lt;p&gt;少数派资深作者 &lt;a href="https://sspai.com/u/hpx14j8g" target="_blank"&gt;@子不语Rex&lt;/a&gt; 将借助实际的工作实例，来分析 Excel 的使用方式，分享他的高效使用 Excel 的技巧。&lt;/p&gt;&lt;p&gt;Word 系列将由少数派编辑 &lt;a href="https://sspai.com/u/platyhsu" target="_blank"&gt;@PlatyHsu&lt;/a&gt; 制作，深入 Word 文档的设计机制，剖析文档中重要元素的设置以及背后的原理。&lt;/p&gt;&lt;span&gt; &lt;/span&gt;&lt;h3&gt;&lt;strong&gt;MarginNote 工具升值包&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;💰 买断制（macOS）：&lt;s&gt;¥280&lt;/s&gt; -&amp;gt; ¥196&lt;/li&gt;&lt;li&gt;⏰ 优惠时间：2022.11.07 - 2022.11.21&lt;/li&gt;&lt;li&gt;🛒 &lt;a href="https://sspai.com/item/42" target="_blank"&gt;少数派购买&lt;/a&gt; | &lt;a href="https://item.taobao.com/item.htm?spm=a1z10.3-c-s.w4002-23900684919.9.14ec48f7P2suQj&amp;amp;id=671752696936" target="_blank"&gt;淘宝购买&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;MarginNote 3 工具升值包将包含：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;MarginNote 3 高级会员；&lt;/li&gt;&lt;li&gt;MarginNote 3 定制内容。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;关于高级会员具体权益，请前往&lt;a href="https://www.marginnote.com/chinese/features" target="_blank"&gt;官网&lt;/a&gt;查看。 &lt;/p&gt;&lt;p&gt;为帮助大家快速上手这款软件，我们的定制内容包含了 MarginNote 3 的使用逻辑与使用技巧， 由少数派作者 &lt;a href="https://sspai.com/u/zimpo3jv" target="_blank"&gt;@sainho&lt;/a&gt;  和 &lt;a href="https://sspai.com/u/kyc20010501" target="_blank"&gt;@Sober_阿铖&lt;/a&gt;  来对 MarginNote 3 进行全面而详尽的介绍。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2021/11/04/77a15837caa3129c03431af26df67a8d.png" src="https://cdn.sspai.com/2021/11/04/77a15837caa3129c03431af26df67a8d.png"/&gt;&lt;/figure&gt;&lt;p&gt;MarginNote 3 定制内容共有四篇文章。从阅读文档开始，一步步介绍文档的&lt;strong&gt;导入、整理与备份&lt;/strong&gt;，如何运用摘录、笔记卡片、批注等功能&lt;strong&gt;把文档由厚读薄&lt;/strong&gt;；进而通过组织笔记卡片&lt;strong&gt;建立起脑图笔记本&lt;/strong&gt;，运用焦点、标题、重点等功能&lt;strong&gt;构建你自己的知识体系&lt;/strong&gt;；以及如何利用 MarginNote 3 独特的&lt;strong&gt;复习模式巩固知识点&lt;/strong&gt;，并结合作者的实践经验，为你提供更多学习建议和插件的使用方法。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关联阅读：&lt;/strong&gt;&lt;a href="https://sspai.com/post/47547" target="_blank"&gt;如何高效把书读「薄」？开发了这款强大学习工具的他有话想说：专访 MarginNote&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;Sorted³ 工具升值包&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;💰 iOS + macOS 捆绑包：&lt;s&gt;¥238&lt;/s&gt; -&amp;gt; ¥198&lt;/li&gt;&lt;li&gt;⏰ 优惠时间：2022.11.07 - 2022.11.21&lt;/li&gt;&lt;li&gt;🛒 &lt;a href="https://sspai.com/item/282" target="_blank"&gt;少数派购买&lt;/a&gt; | &lt;a href="https://item.taobao.com/item.htm?spm=a1z10.3-c-s.w4002-23900684919.9.9e5648f71nBdAx&amp;amp;id=671753224465" target="_blank"&gt;淘宝购买&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;在 Sorted 开发团队看来，基于 Project Catalyst 开发而来的 Sorted³ for macOS，虽然最重要的功能是补全 Apple 生态的「最后一块拼图」，但作为桌面端推出的 macOS 版本能借助更多更灵活的快捷键使用，让任务的整理与收纳都来得更加高效。&lt;/p&gt;&lt;p&gt;如果你已经是 Sorted³ 的 iOS 或 iPadOS 版本的用户的话，那你也一定对这款应用所主打的「超调度」（Hyper Scheduling）设计并不陌生：这一设计理念，可以说是 Sorted 相比于其他 GTD 工具的最显著的设计区别，但主要的目的，仍然是借助高效但精确的任务调度，让任务安排能在日常生活中各种突发情况发生时仍然保持有条不紊。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/editor/u_/c60kqrlb34te120aaoag.png" src="https://cdn.sspai.com/editor/u_/c60kqrlb34te120aaoag.png"/&gt;&lt;/figure&gt;&lt;p&gt;和 iPadOS 与 iOS 不同，macOS 相较于移动端一个重要的区别在于：借助实体键盘、Trackpad 以及鼠标，Sorted 其实能更加高效地完成整理工作，而且桌面端往往也是更多人习惯于工作的环境。&lt;/p&gt;&lt;p&gt;在 macOS 版本中，「利用组合键减少使用时的重复操作提升效率」是操作中提升效率的重要内容：比如在 Sorted³ 的 iOS 版本中，键盘上方的加号一直被认为是一个颇具巧思的设计，这个设计能在任务整理阶段提升录入任务的效率，让思考不被打断，一气呵成地将接下来要完成的预定工作都收纳进列表中。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/editor/u_/c60kqrtb34te16sfup6g.gif" src="https://cdn.sspai.com/editor/u_/c60kqrtb34te16sfup6g.gif"/&gt;&lt;/figure&gt;&lt;p&gt;除此之外，Sorted 还为任务的日程安排设计了让人眼前一亮的「自动计划」：只需要预设好每个任务的预定时间，结合番茄工作法的相关元素，设置好相邻任务之间一段供缓冲及休息的时间，就可以自动生成一份接下来所有任务的排序，同时自动在多平台同步设置好提醒事项。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/editor/u_/c60kqsdb34te1b03gh10.gif" src="https://cdn.sspai.com/editor/u_/c60kqsdb34te1b03gh10.gif"/&gt;&lt;/figure&gt;&lt;p&gt;这种内置的自动化流程另一个优势在于，即使一项任务超期，保证接下来的计划都能继续按照新的计划进行，同时也自动避开诸如用餐、会议等固定事件带来的冲突，并做出相应的推后调整，可以说将重新调整计划的成本降到了最低。&lt;/p&gt;&lt;p&gt;基于同样的操作逻辑，在 macOS 版本中，通过键盘快捷键 Command + N，就能快速地整理主要任务，我就已经习惯了一气呵成地将预定任务输入进 Sorted³ 中，然后再根据信息为每一个任务分配时间以及将更加详细的信息写入任务备注中。&lt;/p&gt;&lt;p&gt;而在任务备注中，除了新加入的快捷键操作之外，Sorted³ 内容中类 Markdown 语法的富文本编辑也是其高效设计的一部分，Sorted³ 为任务备注采用了类似 Notion 的富文本混合 Markdown 语法设计，不仅能让任务记录界面更加简洁直观，而且还让备注充当了更多功能，除了能直接列清单之外，还能直接在任务备注中创建子任务，并借助重新整理功能将其重新生成为多个新任务。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关联阅读&lt;/strong&gt;&lt;/p&gt;&lt;span&gt; &lt;/span&gt;&lt;h3&gt;&lt;strong&gt;简悦工具升值包&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;💰 永久买断版：&lt;s&gt;¥18&lt;/s&gt; -&amp;gt; ¥12&lt;/li&gt;&lt;li&gt;⏰ 优惠时间：2022.11.07 - 2022.11.21&lt;/li&gt;&lt;li&gt;🛒 &lt;a href="https://sspai.com/item/186" target="_blank"&gt;少数派购买&lt;/a&gt; | &lt;a href="https://item.taobao.com/item.htm?ft=t&amp;amp;id=656790942753" target="_blank"&gt;淘宝购买&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;标注是物理世界的 Mark 笔，在阅读模式中你可以通过&lt;strong&gt;鼠标按下拖拽高亮&lt;/strong&gt;的方式实现一条标注。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/editor/u_/c60kqotb34te1047ughg.png" src="https://cdn.sspai.com/editor/u_/c60kqotb34te1047ughg.png"/&gt;&lt;/figure&gt;&lt;p&gt;这个方式跟其它标注产品并无二致，但简悦有它自己的特点，即：&lt;strong&gt;标注样式&lt;/strong&gt;，物理世界有着丰富多彩的标注形式，我把它们也带到了虚拟世界，看下图：&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/editor/u_/c60kqotb34te120aao80.png" src="https://cdn.sspai.com/editor/u_/c60kqotb34te120aao80.png"/&gt;&lt;/figure&gt;&lt;p&gt;这个功能应该是&lt;strong&gt;简悦独有功能&lt;/strong&gt;（未来会上线更多标注样式）。&lt;/p&gt;&lt;p&gt;同时&lt;strong&gt;鼠标按下拖拽高亮&lt;/strong&gt;这个动作类似 Mark 笔的拔盖并画线的动作，为了更方便地操作，简悦支持&lt;strong&gt;连续标注&lt;/strong&gt;，即：只要出现这个动作后，自动生成标记。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/editor/u_/c60kqp5b34te16sfup5g.gif" src="https://cdn.sspai.com/editor/u_/c60kqp5b34te16sfup5g.gif"/&gt;&lt;/figure&gt;&lt;p&gt;同样，你可以关闭这个功能，以免出现误触（在需要的时候随时开启即可）。&lt;/p&gt;&lt;p&gt;解决了标注的问题，再说下简悦在检索这个场景中的探索。&lt;/p&gt;&lt;p&gt;当标注过多，虽然可以通过搜索来定位到你需要的内容，但这仅仅只是一维场景，更高效的办法是：&lt;strong&gt;使用标签系统&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;但标签系统也是一维系统，一旦标签过多就无法管理和分类，因此很多产品选择了&lt;strong&gt;标签 + 文件夹/分类&lt;/strong&gt;的方式，但这种方案也存在弊端，即操作上太复杂：你需要先建立文件夹，然后再选择将当前标注放置到哪个文件夹下，再添加标签；这还仅仅只是一层文件夹，如果是多层结构呢？&lt;/p&gt;&lt;p&gt;所以，简悦采用了一种更高效/便捷的方案：&lt;strong&gt;层级嵌套标签系统&lt;/strong&gt; ，例如你可以像下图一样建立一个层级为 &lt;code&gt;aa/bb/cc/dd&lt;/code&gt; 的标签：&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/editor/u_/c60kqpdb34te16sfup60.png" src="https://cdn.sspai.com/editor/u_/c60kqpdb34te16sfup60.png"/&gt;&lt;/figure&gt;&lt;p&gt;这个操作不会浪费任何时间，同时简悦会自动生成如下图的层级结构：&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/editor/u_/c60kqpdb34te1047ugi0.png" src="https://cdn.sspai.com/editor/u_/c60kqpdb34te1047ugi0.png"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;关联阅读：&lt;/strong&gt;&lt;a href="https://sspai.com/post/67074" target="_blank"&gt;看板、双向链接、知识图谱…… 简悦 2.2 想让你的稍后读不再不读&lt;/a&gt;&lt;/p&gt;&lt;span&gt; &lt;/span&gt;&lt;h3&gt;&lt;strong&gt;Downie 4 工具升值包&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;💰 &lt;s&gt;¥79&lt;/s&gt; -&amp;gt; ¥55.3&lt;/li&gt;&lt;li&gt;⏰ 优惠时间：2022.10.31 - 2022.11.15&lt;/li&gt;&lt;li&gt;🛒 &lt;a href="https://sspai.com/item/4" target="_blank"&gt;点击购买&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Downie 这款老牌而强大的视频下载工具，支持超过 1000 个流媒体网站的视频下载，涵盖了国内外包括 YouTube、Vimeo 以及哔哩哔哩、优酷、爱奇艺等主流网站，相信能够满足你的需求。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2020/02/18/166952f88f2e27530327eeb873c70d10.png" src="https://cdn.sspai.com/2020/02/18/166952f88f2e27530327eeb873c70d10.png"/&gt;&lt;/figure&gt;&lt;p&gt;在少数派购买 Downie 工具升值包，你将获得：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Downie 4 应用兑换码&lt;/li&gt;&lt;li&gt;Downie 4 图文说明书&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Downie 4 图文说明书由 &lt;a href="https://sspai.com/u/sober" target="_blank"&gt;@SoberStudio&lt;/a&gt; 制作，&lt;a href="https://sspai.com/u/sober" target="_blank"&gt;@SoberStudio&lt;/a&gt; 是由三位热爱设计的小伙伴组成，擅长用设计的力量，以一图流的形式展示信息。例如在少数派发表过《&lt;a href="https://sspai.com/post/63556" target="_blank"&gt;一张图带你看懂 Apple 11 月特别活动&lt;/a&gt;》。&lt;/p&gt;&lt;p&gt;这次的 Downie 4 图文说明书，将用四张图，展示 Downie 从基本的安装到进阶操作技巧。让你在购买 Downie 后的最短时间内，掌握 Downie 的强大功能。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关联阅读：&lt;/strong&gt;&lt;a href="https://sspai.com/post/40999" target="_blank"&gt;如果你在找一款简单好用的视频下载工具，全新的 Downie 3 会是你喜欢的那一个&lt;/a&gt;&lt;/p&gt;&lt;span&gt; &lt;/span&gt;&lt;h3&gt;&lt;strong&gt;白描工具升值包&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;💰 黄金会员：¥40 -&amp;gt; ¥25，普通会员：¥30 -&amp;gt; ¥15&lt;/li&gt;&lt;li&gt;⏰ 优惠时间：2022.11.07 - 2022.11.21&lt;/li&gt;&lt;li&gt;🛒 &lt;a href="https://sspai.com/item/44" target="_blank"&gt;少数派购买&lt;/a&gt; | &lt;a href="https://item.taobao.com/item.htm?spm=a1z10.3-c.w4002-23900684919.14.498648f7e0oW6r&amp;amp;id=657202763765" target="_blank"&gt;淘宝购买&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;白描是一款识别图片文字的 OCR 应用，特点是可以直接在相册进行识别，并且能对文字进行编辑。&lt;/p&gt;&lt;p&gt;白描应该是第一款真正意义上的包含批量文字识别功能的 OCR 软件，而他开启进入批量识别模式的方式也不会让软件的界面显得赘余。&lt;/p&gt;&lt;p&gt;长按一张图片，即可进入批量识别模式，然后点击其他图片进行多选即可，如下图左图：&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/01/19/article/e3236994819fafda1b653f4da87dcef1" src="https://cdn.sspai.com/2022/01/19/article/e3236994819fafda1b653f4da87dcef1"/&gt;&lt;/figure&gt;&lt;p&gt;多选之后即可进入批量识别界面，如上图右图所示，在批量识别界面可以设置任何一张图片的识别语言，识别完成之后可以进入任何一张图片选择需要的文字，全部识别完成之后，最下面的大按钮会变为「合并并查看文字」，点击即可去识别结果页面查看所有文字，并对所有图片和文字进行校对。&lt;/p&gt;&lt;p&gt;经过很多用户朋友的反馈，最终决定为白描加入翻译功能，目前，白描支持简体中文、日语、英语、韩语、法语、西班牙语、阿拉伯语、俄语、德语、葡萄牙语、意大利语、繁体中文、粤语、文言文的互译。&lt;/p&gt;&lt;p&gt;进入翻译功能也很方便，如下图左图，在识别结果页面的下方工具栏即可找到入口。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/01/19/article/dee873054e9b7203ef1dd0e62e48e01f" src="https://cdn.sspai.com/2022/01/19/article/dee873054e9b7203ef1dd0e62e48e01f"/&gt;&lt;/figure&gt;&lt;p&gt;我们邀请了少数派作者 &lt;a href="https://sspai.com/u/kyc20010501" target="_blank"&gt;@Sober_阿铖&lt;/a&gt; 来制作白描的图文说明书，以最直观的方式展示白描的各项设置和技巧，让你做到上手即会用。&lt;/p&gt;&lt;span&gt; &lt;/span&gt;&lt;h3&gt;&lt;strong&gt;潮汐&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;💰 年度会员：&lt;s&gt;¥218&lt;/s&gt; -&amp;gt; ¥158，月度会员：&lt;s&gt;¥30&lt;/s&gt; -&amp;gt; ¥12&lt;/li&gt;&lt;li&gt;🛒 &lt;a href="https://sspai.com/item/111" target="_blank"&gt;少数派购买&lt;/a&gt; | &lt;a href="https://item.taobao.com/item.htm?spm=a1z10.1-c-s.w4004-23900684907.8.3e902ac4ziHNgi&amp;amp;id=656285447142" target="_blank"&gt;淘宝购买&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;在能帮助用户保持专注、好好休息的健康类应用里，潮汐可以算是做得最出色的工具之一；其不但拥有大量高品质的白噪音内容，还有许多原创的冥想练习，来引导、陪伴用户进行大脑训练。&lt;/p&gt;&lt;p&gt;然而，工具再好用，也需要有方法在背后支撑。如果没能掌握专注的方法，即使听再多白噪音也很难专注。潮汐内置了丰富的「冥想」内容，让它从一款单纯的「白噪音」工具，升级成一款能够通过冥想练习来提升专注力的「生活助手」。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/editor/u_/c60kqtdb34te1047ugjg.jpeg" src="https://cdn.sspai.com/editor/u_/c60kqtdb34te1047ugjg.jpeg"/&gt;&lt;/figure&gt;&lt;p&gt;即使你完全不懂专注、放松的方法，在潮汐的冥想练习中学习一段时间后，也能掌握思维的节奏，让自己快速进入应有的状态。&lt;/p&gt;&lt;p&gt;在《自控力》这本书中，有这样一段关于「冥想」的描述：&lt;/p&gt;&lt;p&gt;神经学家发现，如果你经常让大脑冥想，它不仅会变得擅长冥想，还会提升你的自控力，提升你集中注意力、管理压力、克制冲动和认识自我的能力。一段时间之后，你的大脑就会变成调试良好的意志力机器。在你的前额皮质和影响自我意识的区域里，大脑灰质都会增多。&lt;/p&gt;&lt;p&gt;通过冥想来提升大脑并非玄学、安慰剂效应，相反，它具有一定的科学依据。但冥想并不是所有人与生俱来的能力，因此，你需要依靠一些外界的力量来掌握正确冥想的方法，从而提高自控力、集中注意力，提升你的大脑状态。&lt;/p&gt;&lt;p&gt;在潮汐的「探索」页中，你可以找到许多适用于不同场景下的冥想练习课程。如果你先前没有冥想的经验，我推荐你先在「冥想 - 系列」里完成「新手入门」的 7 章练习。应用将会从简单的练习开始，教你如何将注意力放回当下，感受每一次呼吸。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/editor/u_/c60kqtlb34te1b03gh1g.png" src="https://cdn.sspai.com/editor/u_/c60kqtlb34te1b03gh1g.png"/&gt;&lt;/figure&gt;&lt;p&gt;在完成了「新手入门」后，你还可以到「冥想 - 时刻」里寻找特定的主题进行练习。比如。在这些练习课程中，你可以跟着语音来调整自己的身体、思维，应用会通过语言引导，带你逐渐进入特定的状态。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/editor/u_/c60kqttb34te1b03gh20.png" src="https://cdn.sspai.com/editor/u_/c60kqttb34te1b03gh20.png"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;关联阅读：&lt;/strong&gt;&lt;a href="https://sspai.com/post/45543" target="_blank"&gt;这款白噪音 App 不仅让你学习工作保持专注，还帮你睡得更好，减少焦虑：潮汐&lt;/a&gt;&lt;/p&gt;&lt;span&gt; &lt;/span&gt;&lt;h2&gt;&lt;strong&gt;Moon FM&lt;/strong&gt;&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;💰 永久版：&lt;s&gt;¥68&lt;/s&gt;-&amp;gt; ¥34&lt;/li&gt;&lt;li&gt;⏰ 优惠时间：2022.11.07-2021.11.21&lt;/li&gt;&lt;li&gt;🛒 &lt;a href="https://sspai.com/item/280" target="_blank"&gt;少数派购买&lt;/a&gt; | &lt;a href="https://item.taobao.com/item.htm?spm=a1z10.3-c.w4002-23900684919.9.4edf48f7BU4FJq&amp;amp;id=672811187400" target="_blank"&gt;淘宝购买&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Moon FM 整体设计简洁素雅，但多彩的图标为其加分不少。与 Pocket Casts 不同，Moon FM 的首页以时间线方式呈现，帮你快速找到近期更新内容。你也可以通过上方功能区域管理订阅、下载、收藏、历史等。&lt;/p&gt;&lt;p&gt;Moon FM 的播放界面同样简约，但并不简单。你可以利用播放列表、睡眠定时、速度调整和均衡器等个性化收听进程。最小化后，它会收起成屏幕边缘的小图标，可以拖动调整位置。&lt;/p&gt;&lt;p&gt;除了播客外，Moon FM 还支持上百个国家的网络电台，包括 CNR 各频道及国内的各地方广播等，&lt;s&gt;可谓出租车司机必备&lt;/s&gt;。如果你正在学习小语种，也不失为练习听力的佳选。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/editor/u_/c60kqslb34te16sfup70.png" src="https://cdn.sspai.com/editor/u_/c60kqslb34te16sfup70.png"/&gt;&lt;/figure&gt;&lt;span&gt; &lt;/span&gt;&lt;h2&gt;&lt;strong&gt;PasteNow&lt;/strong&gt;&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;💰 macOS：&lt;s&gt;¥50&lt;/s&gt; -&amp;gt; ¥40&lt;/li&gt;&lt;li&gt;⏰ 优惠时间：2022.10.31 - 2022.11.14&lt;/li&gt;&lt;li&gt;🛒 &lt;a href="https://sspai.com/item/274" target="_blank"&gt;少数派网站购买&lt;/a&gt; | &lt;a href="https://item.taobao.com/item.htm?spm=a1z10.3-c.w4002-23900684919.9.644548f7pJg16k&amp;amp;id=659098476734" target="_blank"&gt;淘宝购买&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;剪贴板是 Mac 端工作者最常用的工具之一，即使不使用任何外设应用，仅依靠系统剪贴板，我们也常常顺手对文本和图片进行复制粘贴。然而，在这种情况下的剪贴板更像是一次性手套，用过一次之后就只能扔进垃圾桶，其效用受到极大限制。&lt;/p&gt;&lt;p&gt;PasteNow 从另一角度入手，不再把剪贴操作当作单个行为，反而将剪贴板容器做成了工作流程的中转站。它从用户最顺手的复制剪贴动作入手，将内容暂存于应用内，等待下一步工作批示。因此，PasteNow 对于&lt;strong&gt;重复内容&lt;/strong&gt;与&lt;strong&gt;分类暂存&lt;/strong&gt;具有让人惊喜的帮助效果。&lt;/p&gt;&lt;p&gt;就重复内容而言，系统剪贴板内容总会被最新一次覆盖，但唤醒 PasteNow 后，用户可以反复对同一内容进行操作。利用置顶，用户可以将窗口左右布置，而不必反复唤醒 PasteNow。选择内容后，双击或按下 Enter 都能够直接把内容粘贴至光标活跃处，直接进行文本的下一步处理。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/editor/u_/c60kqslb34te16sfup7g.png" src="https://cdn.sspai.com/editor/u_/c60kqslb34te16sfup7g.png"/&gt;&lt;/figure&gt;&lt;p&gt;就分类暂存而言，坚守轻量级中转站定位，PasteNow 采用多种展示格式，将剪贴板内容不再仅由时序排列，而呈现出多种展板，包括纯列表、富列表以及网格视图，用户可以根据工作流需求采用不同视图。比如，白天做程序员时使用富列表保持代码高亮，通勤写作时使用纯列表处理文本素材，晚上回家做设计时打开网格视图筛出图片进行操作。将工作区分隔开，对繁冗的一手资料粗处理，给多维度生活角色的帮助不小。&lt;/p&gt;&lt;p&gt;除此之外，应用还支持智能列表，以使用用户习惯的方法进行筛查和分类，快速索引至目标内容。在丰富列表界面内，也可以看到包含这些筛查内容的条目信息。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关联阅读：&lt;/strong&gt;&lt;a href="https://sspai.com/post/65948" target="_blank"&gt;支持过滤列表、iCloud 同步…… Mac 上的剪贴板工具新选择：PasteNow&lt;/a&gt;&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/editor/u_/c60kqstb34te16sfup80.png" src="https://cdn.sspai.com/editor/u_/c60kqstb34te16sfup80.png"/&gt;&lt;/figure&gt;&lt;span&gt; &lt;/span&gt;&lt;p&gt;更多优惠，请前往&lt;a href="https://sspai.com/mall/discount/47" target="_blank"&gt;少数派网站活动专区&lt;/a&gt;和 &lt;a href="https://market.m.taobao.com/app/tb-source-app/shopact/pages/index?wh_weex=true&amp;amp;pathInfo=shop/activity&amp;amp;userId=2210846011241&amp;amp;shopId=184770392&amp;amp;pageId=317934706&amp;amp;alisite=true" target="_blank"&gt;淘宝活动专区&lt;/a&gt;了解和购买。&lt;/p&gt;&lt;p&gt;&amp;gt; 下载 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;少数派 2.0 客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，解锁全新阅读体验 📰&lt;/p&gt;&lt;p&gt;&amp;gt; 实用、好用的 &lt;a href="https://sspai.com/mall" target="_blank"&gt;正版软件&lt;/a&gt;，少数派为你呈现 🚀&lt;/p&gt;&lt;/div&gt;</description><author>福利派</author><guid>https://sspai.com/post/76681</guid><pubDate>Tue, 08 Nov 2022 10:30:00 GMT</pubDate></item><item><title>一周快闪，少数派会员「消费者报告」限时登场中</title><link>https://sspai.com/post/76685</link><description>&lt;div&gt;&lt;p&gt;少数派会员&lt;a href="https://sspai.com/post/74803" target="_blank"&gt;第二季正式上线&lt;/a&gt;以来，继续得到了我派读者的支持和喜爱，其中的《&lt;a href="https://sspai.com/prime/precog" target="_blank"&gt;消费者报告&lt;/a&gt;》系列，更是以「多角度、全方位考察效率工具、科技玩物，探讨工具高阶用法、产品真实体验」的内容标准，受到了会员朋友的喜爱。&lt;/p&gt;&lt;p&gt;不过对于还未购买过会员的读者朋友来说，一直没有机会体会到《消费者报告》的内容魅力。本周继续开启双十一活动第二波，我们将一部分精挑细选的《消费者报告》作为快闪栏目登场。&lt;/p&gt;&lt;p&gt;如果你还未购买过少数派会员，又想体验其中的内容，本周就是不可错过的机会。&lt;/p&gt;&lt;p&gt;⏰ &lt;strong&gt;活动时间&lt;/strong&gt;：2022 年 11 月 7 日 - 2022 年 11 月 13 日&lt;/p&gt;&lt;h2&gt;鼠标的前世今生&lt;/h2&gt;&lt;span&gt; &lt;/span&gt;&lt;p&gt;🛒 前往&lt;a href="https://sspai.com/series/288" target="_blank"&gt;购买&lt;/a&gt;&lt;/p&gt;&lt;p&gt;鼠标，人人会用，直观简洁。对于现在的电脑使用者来说，只要用电脑就一定离不开鼠标。随着计算机硬件、软件、游戏、电子竞技以及鼠标本身的发展，它已经跨过了工具的范畴，逐渐的形成了具有一定规模的爱好者群体，每天有大量的人讨论应当怎样挑选鼠标、如何使用鼠标、适合怎样的鼠标以及如何在大量的使用中保护自己的手部健康。&lt;/p&gt;&lt;p&gt;之前，少数派编辑 &lt;a href="https://sspai.com/u/thebaldingken" target="_blank"&gt;@北鸮&lt;/a&gt; 也花很长的篇幅来讨论过游戏鼠标应该如何挑选，也和大家讨论过人体工学鼠标这一概念，这些都是与日常使用息息相关的话题。&lt;/p&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;p&gt;但这次，我们聊点别的。&lt;/p&gt;&lt;p&gt;在这一系列文章里， &lt;a href="https://sspai.com/u/thebaldingken" target="_blank"&gt;@北鸮&lt;/a&gt; 希望能把鼠标的前世今生、五脏六腑全部拆开揉碎讲给你听。我们不聊怎么挑，不聊怎么买，只讲它是如何诞生、如何演变、如何工作、如何分类，顺便介绍一些知名的鼠标品牌与系列发展，让你对这个混乱纷杂又有趣的市场多一丝了解。&lt;/p&gt;&lt;p&gt;比起之前的推荐性文章，或许这样的资讯对你来说没有太大的实用意义，但希望能够通过这些内容的介绍，让你对这个一直陪伴在我们身边，却常常被人忽视的小小物件，有更深的理解。&lt;/p&gt;&lt;p&gt;注：本期报告完整版将会在&lt;strong&gt;本周三&lt;/strong&gt;正式上线。&lt;/p&gt;&lt;h2&gt;录音入门指南&lt;/h2&gt;&lt;span&gt; &lt;/span&gt;&lt;p&gt;🛒 前往&lt;a href="https://sspai.com/series/285" target="_blank"&gt;购买&lt;/a&gt;&lt;/p&gt;&lt;p&gt;很多朋友都会通过 vlog、播客等方式进行内容创作，在创作过程中，有一个基础又重要的环节往往容易被忽略，那就是录音。好的声音采样能让观众和听众更好地接收内容信息，也能直接提升 vlog 和播客的观感。&lt;/p&gt;&lt;p&gt;在《录音入门指南》中，我们就邀请到了广播领域的专业从业者、《赵君日记》栏目主播赵君老师，分享录音的入门知识和技巧。报告共 &lt;strong&gt;2.6 万余字&lt;/strong&gt;，分为五篇：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;在录音之前你需要知道的事&lt;/li&gt;&lt;li&gt;找到适合自己的麦克风&lt;/li&gt;&lt;li&gt;挑选录音机的思路&lt;/li&gt;&lt;li&gt;正确设置录音机&lt;/li&gt;&lt;li&gt;录音流程中的个人经验与建议&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;机械键盘入坑指南&lt;/h2&gt;&lt;span&gt; &lt;/span&gt;&lt;p&gt;🛒 前往&lt;a href="https://sspai.com/series/272" target="_blank"&gt;购买&lt;/a&gt;&lt;/p&gt;&lt;p&gt;生活在数字时代，键盘是人们接触最多的工具。正因如此，许多人都希望寻找一把质量过硬、手感出色的键盘，让自己在敲字时舒服一点。与此同时，键盘也成了人们彰显个性、爱好和品味的符号，发烧友们会通过客制化等手段将键盘改造成自己喜欢的样子。在本期少数派报告中，我们就深入机械键盘这个领域，谈谈那些你或陌生或熟悉的概念，在众多键盘品牌和型号中帮你找到属于你的那一把。&lt;/p&gt;&lt;p&gt;本期的两位作者分别是少数派编辑部成员北鸮和前主编阿平，前者以机械键盘为爱好，不仅大量入手和把玩各类型的键盘，还经常在《新玩意儿》栏目分享自己最新入手的产品；后者目前专注经营电竞账号 @平底锅揽件指南，对电脑外设有着独到研究。他们会系统地解释和机械键盘相关地技术名词，并给出他们的选购建议。报告共 &lt;strong&gt;3.8 万余字&lt;/strong&gt;，分为五篇：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;你需要的是一把机械键盘吗？&lt;/li&gt;&lt;li&gt;轴体——手感的秘密&lt;/li&gt;&lt;li&gt;键帽与外壳——颜值即正义&lt;/li&gt;&lt;li&gt;提升体验的键盘组件&lt;/li&gt;&lt;li&gt;你应该入坑客制化键盘吗？&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;精品咖啡入门指南&lt;/h2&gt;&lt;span&gt; &lt;/span&gt;&lt;p&gt;🛒 前往&lt;a href="https://sspai.com/series/286" target="_blank"&gt;购买&lt;/a&gt;&lt;/p&gt;&lt;p&gt;资深咖啡店主老林还年少为我们带来了详尽的关于精品咖啡的入门知识，从相对硬核的咖啡豆种、处理法、烘焙法到大家关心的器材和冲煮攻略，在这份指南中均有收录。虽然标题是「入门指南」，但新老咖啡爱好者均可食用。&lt;/p&gt;&lt;p&gt;报告超过 &lt;strong&gt;4 万字&lt;/strong&gt;，分为八篇：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;精品咖啡的兴起&lt;/li&gt;&lt;li&gt;咖啡树种&lt;/li&gt;&lt;li&gt;产地风味与咖啡生豆分级&lt;/li&gt;&lt;li&gt;咖啡处理法&lt;/li&gt;&lt;li&gt;咖啡的选购及烘焙对咖啡的影响&lt;/li&gt;&lt;li&gt;咖啡的研磨与萃取&lt;/li&gt;&lt;li&gt;冲泡器具的选择&lt;/li&gt;&lt;li&gt;手冲咖啡&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;理光 GR III 体验报告&lt;/h2&gt;&lt;span&gt; &lt;/span&gt;&lt;p&gt;🛒 前往&lt;a href="https://sspai.com/series/287" target="_blank"&gt;购买&lt;/a&gt;&lt;/p&gt;&lt;p&gt;RICOH GR IIIx 是一部很好用但不好写的相机——GR 系列在摄影史上太过经典，而 GR III 系列的功能、定位和实力又太过明确。它没有任何技术上的巨大创新，也没有花哨炫目的外观和功能，如果像传统相机评测一样书写 GR IIIx 的体验报告，只怕写个一两千字就会词穷。&lt;/p&gt;&lt;p&gt;但是，冰冷的参数又无法形容使用 GR IIIx 时那种独特的「与摄影更亲密」的感受。因此，本期《RICOH GR IIIx 体验报告》中重点体现的是个人在使用这部相机时的感受和心得。文中会搭配大量样片以阐释对应章节的文字叙述，这些照片如果没有特别说明，均为 RAW 格式拍摄并经过基础的后期处理。&lt;/p&gt;&lt;p&gt;报告分为八个部分，分别为：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;综述&lt;/li&gt;&lt;li&gt;速度与画质&lt;/li&gt;&lt;li&gt;焦段和题材&lt;/li&gt;&lt;li&gt;Snap Focus 模式&lt;/li&gt;&lt;li&gt;高反差黑白模式&lt;/li&gt;&lt;li&gt;宽容度&lt;/li&gt;&lt;li&gt;缺点和不足&lt;/li&gt;&lt;li&gt;尾声&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;MarginNote 3 定制内容&lt;/h2&gt;&lt;span&gt; &lt;/span&gt;&lt;p&gt;🛒 前往&lt;a href="https://sspai.com/series/267" target="_blank"&gt;购买&lt;/a&gt;&lt;/p&gt;&lt;p&gt;MarginNote 3 定制内容共有四篇文章，从阅读文档开始，一步步介绍文档的导入、整理与备份，如何运用摘录、笔记卡片、批注等功能把文档由厚读薄；进而通过组织笔记卡片建立起脑图笔记本，运用焦点、标题、重点等功能构建你自己的知识体系；以及如何利用 MarginNote 3 独特的复习模式巩固知识点，结合作者的实践经验，为你提供更多学习建议和插件的使用方法。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/07/article/e47cf85e5782a6ec0aeb3c687ae28bcc" src="https://cdn.sspai.com/2022/11/07/article/e47cf85e5782a6ec0aeb3c687ae28bcc"/&gt;&lt;/figure&gt;&lt;p&gt;&amp;gt; 下载 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;少数派 2.0 客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，解锁全新阅读体验 📰&lt;/p&gt;&lt;p&gt;&amp;gt; 实用、好用的 &lt;a href="https://sspai.com/mall" target="_blank"&gt;正版软件&lt;/a&gt;，少数派为你呈现 🚀&lt;/p&gt;&lt;/div&gt;</description><author>数字工具组</author><guid>https://sspai.com/post/76685</guid><pubDate>Tue, 08 Nov 2022 10:03:25 GMT</pubDate></item><item><title>iPhone 相机进化之路：38 款 iPhone 图像传感器型号确认（07</title><link>https://sspai.com/post/76639</link><description>&lt;div&gt;&lt;p&gt;&lt;strong&gt;Matrix 首页推荐&lt;/strong&gt; &lt;/p&gt;&lt;p&gt;&lt;a href="https://sspai.com/matrix" target="_blank"&gt;Matrix&lt;/a&gt; 是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。 &lt;/p&gt;&lt;p&gt;文章代表作者个人观点，少数派仅对标题和排版略作修改。&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;在 Android 手机的宣传稿中，我们经常能听到厂商宣传其所搭载的图像传感器型号，例如索尼 IMX***、三星 S5K***、豪威 OV**** 等。但在 iPhone 的宣传中，我们就不曾听过苹果声明 iPhone 使用的图像传感器型号，一般都是使用「传感器面积增大了百分之几」「像素更大更深」「全新的高速传感器」之类的比较模糊的用词，所以对于历代 iPhone 具体使用何种传感器，互联网上有诸多不能明确的信息。此文意在将我自己搜集到的相关信息进行梳理，试图考证它们的可靠性，为之后写作 iPhone 图像传感器进化打下基础。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2022/11/06/890e546de7585c9f0052ffbf7bb2d48d.jpg" src="https://cdn.sspai.com/2022/11/06/890e546de7585c9f0052ffbf7bb2d48d.jpg"/&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2022/11/06/e4f5405977c51f310547e946bb98f5e8.png" src="https://cdn.sspai.com/2022/11/06/e4f5405977c51f310547e946bb98f5e8.png"/&gt;&lt;/figure&gt;&lt;p&gt;首先给出我整理后的部分信息，点击图片可看原图，欢迎指正。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/6174a8e6375434192f924628464fadfc.jpg" src="https://cdn.sspai.com/2022/11/06/6174a8e6375434192f924628464fadfc.jpg"/&gt;&lt;figcaption&gt;截自我的 Notion 页面&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2&gt;主要参考信源&lt;/h2&gt;&lt;p&gt;互联网上关于 iPhone 图像传感器的信息参差不齐，大部分信息都没有给出出处，单纯引用某一信源难以有说服力，我综合了部分我比较认可的信源，各位可以自行甄别。&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;维基百科：Exmor&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;Exmor 是索尼公司应用在其部分 CMOS 图像传感器上的技术名称。维基百科上的 Exmor 词条收集整理了大量索尼 Exmor 图像传感器及其使用的机型，使用 Ctrl+F 可快速搜索 iPhone 关键词。我将其整理如下表。&lt;/p&gt;&lt;figure&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;strong&gt;Model number&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;Number of effective pixels&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;Sensor size (diagonal)&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;Pixel size&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;Subpixel layout&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;Utilizing devices&lt;/strong&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;IMX145&lt;/td&gt;&lt;td&gt;3264 x 2448 8Mp&lt;/td&gt;&lt;td&gt;5.68 mm (1/3.2&amp;quot;)&lt;/td&gt;&lt;td&gt;1.40 μm&lt;/td&gt;&lt;td&gt;RGB&lt;/td&gt;&lt;td&gt;iPhone 4s&lt;br/&gt;iPhone 5&lt;br/&gt;iPhone 5c&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;strong&gt;Model number&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;像素&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;传感器尺寸（对角线）&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;像素尺寸&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;子像素排列&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;相位对焦&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;发布时间&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;使用的设备&lt;/strong&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;IMX145-derived&lt;/td&gt;&lt;td&gt;3264 x 2448 8Mp&lt;/td&gt;&lt;td&gt;6.12 mm (1/2.94&amp;quot;)&lt;/td&gt;&lt;td&gt;1.50 μm&lt;/td&gt;&lt;td&gt;RGB&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;iPhone 5s&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;IMX145-derived with PDAF&lt;/td&gt;&lt;td&gt;3264 x 2448 8Mp&lt;/td&gt;&lt;td&gt;6.12 mm (1/2.94&amp;quot;)&lt;/td&gt;&lt;td&gt;1.50 μm&lt;/td&gt;&lt;td&gt;RGB&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;September 2014&lt;/td&gt;&lt;td&gt;iPhone 6/6+&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;IMX315&lt;/td&gt;&lt;td&gt;4032 x 3024 12.2Mp&lt;/td&gt;&lt;td&gt;6.15 mm (1/2.93&amp;quot;)&lt;/td&gt;&lt;td&gt;1.22 μm&lt;/td&gt;&lt;td&gt;RGB&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;September 2015&lt;/td&gt;&lt;td&gt;iPhone 6S/6S+&lt;br/&gt;iPhone SE（2016）&lt;br/&gt;iPhone 7/7+ (主摄)&lt;br/&gt;iPhone 8/8+ (主摄)&lt;br/&gt;iPhone X (主摄)&lt;br/&gt;iPhone SE (2020)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;IMX356&lt;/td&gt;&lt;td&gt;4032 x 3024 12.2Mp&lt;/td&gt;&lt;td&gt;(1/3.4&amp;quot;)&lt;/td&gt;&lt;td&gt;1.0 μm&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;iPhone 11 Pro/11 Pro Max(长焦)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;IMX372&lt;/td&gt;&lt;td&gt;4032 x 3024 12.2Mp&lt;/td&gt;&lt;td&gt;(1/3.4&amp;quot;)&lt;/td&gt;&lt;td&gt;1.0 μm&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;iPhone 11/11 Pro/11 Pro Max(超广角)&lt;br/&gt;iPhone 12/12 mini/12 Pro/12 Pro Max(超广角)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;IMX503&lt;/td&gt;&lt;td&gt;4032 x 3024 12.2Mp&lt;/td&gt;&lt;td&gt;7.06 mm (1/2.55&amp;quot;)&lt;/td&gt;&lt;td&gt;1.40 μm&lt;/td&gt;&lt;td&gt;RGB&lt;/td&gt;&lt;td&gt;Yes(Dual Pixel)&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;iPhone 11/11 Pro/11 Pro Max(主摄)&lt;br/&gt;iPhone 12/12 mini/12 Pro/12 Pro Max(主摄)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;IMX514&lt;/td&gt;&lt;td&gt;4032 x 3024 12.2Mp&lt;/td&gt;&lt;td&gt;(1/3.6&amp;quot;)&lt;/td&gt;&lt;td&gt;1.0 μm&lt;/td&gt;&lt;td&gt;RGB&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;iPhone 12/12 mini/12 Pro/12 Pro Max(前摄)&lt;br/&gt;iPhone 13/13 mini/13 Pro/13 Pro Max(前摄)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;IMX603&lt;/td&gt;&lt;td&gt;4032 x 3024 12.2Mp&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;1.70 μm&lt;/td&gt;&lt;td&gt;RGB&lt;/td&gt;&lt;td&gt;Yes(Dual Pixel)&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;Phone 12 Pro Max(主摄)&lt;br/&gt;iPhone 13/13 mini(主摄)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;IMX613&lt;/td&gt;&lt;td&gt;4032 x 3024 12.2Mp&lt;/td&gt;&lt;td&gt;(1/3.6&amp;quot;)&lt;/td&gt;&lt;td&gt;1.0 μm&lt;/td&gt;&lt;td&gt;RGB&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;iPhone 12 Pro/12 Pro Max (长焦)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;IMX703&lt;/td&gt;&lt;td&gt;4032 x 3024 12.2Mp&lt;/td&gt;&lt;td&gt;(1/1.65&amp;quot;)&lt;/td&gt;&lt;td&gt;1.90 μm&lt;/td&gt;&lt;td&gt;RGB&lt;/td&gt;&lt;td&gt;Yes(Dual Pixel)&lt;/td&gt;&lt;td&gt;September 2021&lt;/td&gt;&lt;td&gt;iPhone 13 Pro/13 Pro Max(主摄)&lt;br/&gt;iPhone 14/14 Plus(主摄)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;IMX713&lt;/td&gt;&lt;td&gt;4032 x 3024 12.2Mp&lt;/td&gt;&lt;td&gt;(1/3.4&amp;quot;)&lt;/td&gt;&lt;td&gt;1.0 μm&lt;/td&gt;&lt;td&gt;RGB&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;iPhone 13 Pro/13 Pro Max(长焦)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;IMX772&lt;/td&gt;&lt;td&gt;4032 x 3024 12.2Mp&lt;/td&gt;&lt;td&gt;(1/3.4&amp;quot;)&lt;/td&gt;&lt;td&gt;1.0 μm&lt;/td&gt;&lt;td&gt;RGB&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;iPhone 13/13 mini/13 Pro/13 Pro Max(超广角)&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3&gt;&lt;strong&gt;Techinsights、Chipworks 和 iFixit&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;Techinsights 及 Chipworks 是具有芯片级拆解报告的市场分析咨询公司，由于 Apple 不主动公开 iPhone 传感器相关信息，大量的信息均需要进行芯片级拆解确定，所以在这个过程中大量查阅了 Techinsights 及 Chipworks 的相关内容。两家公司已在 2014 年合并，现为 Techinsights。Techinsights 及过去的 Chipworks 的深度分析均需以公司名义订阅购买，所以我只能访问他们的公开文章，未能获取全部信息，所以又额外参考了另一家以拆解闻名的 iFixit 的相关内容。&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;微博用户：@天天座萝世、@肥威&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;微博用户 @天天座萝世 和 @肥威 是数码博主，他们通过读取 iPhone 运行日志的方式获取了 iPhone Xs、11、12、13、14 这五代 iPhone 图像传感器的型号，并且被国外网站引用，iPhone Xs 之后的 iPhone 图像传感器型号如此确定，全赖他们的功劳。&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;iPhone Camera History&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href="http://camera-wiki.org/" target="_blank"&gt;http://camera-wiki.org/&lt;/a&gt; 上的 IPhone camera history 页面提供了 iPhone 早期使用 Aptina、Omnivision 传感器的信息，引用如下——&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/f8b3e4c9292225f34dccf2f1dab90c14.png" src="https://cdn.sspai.com/2022/11/06/f8b3e4c9292225f34dccf2f1dab90c14.png"/&gt;&lt;figcaption&gt;iPhone camera history&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;&lt;strong&gt;Image Sensors World&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;Image Sensors World 是国外一个发布有关图像传感器信息的个人博客（应该是个人？），因为 Chipworks 的域名已经合并到 Techinsights，所以不方便找到 Chipworks 过去有关 iPhone 的信息，直接在互联网搜索无法查到。所幸 Image Sensors World 上会引用 Chipworks 的信源，通过互联网存档可以找到过去的页面。&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;iPhone’s Cameras – What’s Coming in the iPhone 6?&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;在 iPhone 6 发布之前，Chipworks 曾经发表过一篇文章《iPhone’s Cameras – What’s Coming in the iPhone 6?》，在此文中回顾了 iPhone 初代至 iPhone 5s 的摄像头。最初两代 iPhone 使用的是当时还在美光旗下的 APtina 的图像传感器。iPhone 3GS 和 iPhone 4 则换用了 OmniVision 的传感器，其中 iPhone 4 上首度引入了背照式 CMOS。从 iPhone 4s 开始则是我们现在比较熟悉的 Sony Exmor R/RS 背照式/堆栈式 CMOS 的时代。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/152fb0669017171f80d2b3e39d6adece.png" src="https://cdn.sspai.com/2022/11/06/152fb0669017171f80d2b3e39d6adece.png"/&gt;&lt;figcaption&gt;Chipworks：iPhone’s Cameras – What’s Coming in the iPhone 6？&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;而在前置摄像头方面，iPhone 4 至 iPhone 5s 这5款机型都是采用 OmniVision 的传感器，同样经历了前照到背照到变革（前三代 iPhone 没有前置摄像头）。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/0a3f3338ee2c801a97f0e39711c34c7e.png" src="https://cdn.sspai.com/2022/11/06/0a3f3338ee2c801a97f0e39711c34c7e.png"/&gt;&lt;figcaption&gt;Chipworks：iPhone’s Cameras – What’s Coming in the iPhone 6？&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;相似内容的图片，Techinsights 在 2017 年 iPhone 8 发布之前也曾在《Ten years of iPhone camera》一文中更新后使用。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/851b67ee720d08169e4c8070e13dc32c.png" src="https://cdn.sspai.com/2022/11/06/851b67ee720d08169e4c8070e13dc32c.png"/&gt;&lt;figcaption&gt;Techinsights：Ten years of iPhone camera&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;有了大致的方向后，我们逐一来确认一下历代 iPhone 的图像传感器。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;细数历代 iPhone 图像传感器&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;编者注：&lt;/strong&gt;如传感器型号非百分百确认，则会在传感器名称末尾标注 [?]&lt;/p&gt;&lt;h3&gt;2007 初代 iPhone&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;主摄：Aptina MT9D112 2M 1/4 2.2um 前照式 CMOS（MI2010）&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;初代 iPhone 发布后，关于它后置 200 万像素摄像头使用的是哪一家公司的传感器有很多讨论。在 iFixit 《iPhone 1st Generation Teardown》（初代 iPhone 拆解）中，iFixit 提到 07 年 3月 5 日，Micron 美光公司的 Giuseppe Vecchio 告诉记者，初代 iPhone 使用来自 Micron 制造的 COMS 图像传感器。具体型号是 MT9D112，内部代码 K15A/MI-SOC2020（MI 即 Micron Image，美光图像）。参数为 200 万像素，1/4 英寸，单位像素尺寸 2.2um，前照式 CMOS。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/ecda3222303f126d273ad653286a265f.png" src="https://cdn.sspai.com/2022/11/06/ecda3222303f126d273ad653286a265f.png"/&gt;&lt;figcaption&gt;iFixit 《iPhone 1st Generation Teardown》&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;2008 iPhone 3G&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;主摄：Aptina MT9D112 2M 1/4 2.2um 前照式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;IPhone camera history 页面纪录了 iPhone 3G 的图像传感器同样是 Aptina MT9D112。而在 Tech news 这一网站的互联网存档中，我找到一名网友发布的博文，他使用热风枪将镜头模组进行拆卸，最终确认 iPhone 3G 使用的也是 Aptina MT9D112。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/7a904e5045b7472049cc38dd555b45c5.png" src="https://cdn.sspai.com/2022/11/06/7a904e5045b7472049cc38dd555b45c5.png"/&gt;&lt;figcaption&gt;Tech news：iPhone camera dissection&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;同时，在 Die Ideenecke 上，有网友发布了更多关于 iPhone 3G 相机（也是 iPhone 初代相机）的细节。&lt;/p&gt;&lt;h3&gt;2009 iPhone 3GS&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;主摄：OmniVision OV3650 3.1M 1/4 1.75um 前照式 CMOS [?]&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;iPhone 3GS 不再使用 Aptina 的传感器，而是换成了 OmniVision。其中一个考量是 OmniVision 的传感器支持自动对焦，而前两代使用 Aptina 传感器的 iPhone 均为固定焦点，不支持自动对焦。&lt;/p&gt;&lt;p&gt;在国外的 &lt;a href="http://photo.stackexchange.com/" target="_blank"&gt;photo.stackexchange.com&lt;/a&gt; 网站上，我看到国外网友关于 iPhone 3GS/4 传感器的讨论，其中提到 iPhone 3GS 使用的是 OV3650 或者相似型号的传感器。而在 Flicker 网站上，有 iPhone 3GS 所拍摄的照片图集以《iPhone 3GS OV3650》命名。之后我又在郭明錤对 iPhone 5 的预测中找到了他发布的一张有关 iPhone 摄像头的表格，其中 iPhone 3GS 的图像传感器记录为 OV3650。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/80941fe9046a497de3e969de3b5a7143.png" src="https://cdn.sspai.com/2022/11/06/80941fe9046a497de3e969de3b5a7143.png"/&gt;&lt;figcaption&gt;郭明錤 iPhone 5 预测&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;OV3650 的传感器尺寸和 Aptina MT9D112 一致，同为 1/4 英寸。得益于更先进的工艺，像素尺寸缩小到 1.75um，在同样的面积下拥有了 300 万像素的分辨率（比前两代 iPhone 高 50%）。相比前代最大的进步还是在支持自动对焦上。&lt;/p&gt;&lt;h3&gt;2010 iPhone 4&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;主摄：OmniVision OV5650 5M 1/3.2 1.75um 背照式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;Techinsights 在 iPhone 4 的拆解中，通过检查图像传感器封装并将芯片照片和规格与他们的芯片图像库进行比较，最终将全新的 400 万像素图像传感器确定为具有背照技术的 Omnivision OV5650。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/b6f909db786c2353aab1c3e934657d90.png" src="https://cdn.sspai.com/2022/11/06/b6f909db786c2353aab1c3e934657d90.png"/&gt;&lt;figcaption&gt;Techinsights iPhone 4 teardown&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;OV5650 传感器尺寸为 1/3.2 英寸，面积相比前三代 iPhone 大了一半还多，像素也达到 500 万。最重要的是采用了划时代的背照技术，提供了更高的图像质量。&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;前摄：OmniVision OV7739 0.3M 1/7 3.0um 前照式 CMOS [?]&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;iPhone 4 同时是第一款具有前置摄像头的 iPhone。不过搭载的是专为进行 VGA 画质视频通话的 30 万像素的传感器，技术上仍然是前照式。在郭明錤对 iPhone 5 的预测中所发布的表格中，将这款传感器记录为 OV7739，尺寸为 1/7 英寸，3.0um 像素尺寸。型号信息不一定正确，但参数应该是比较符合的（这张表格将 iPhone 4s 上的 IMX145 记录成 IMX105，不知是何缘故，所以没有第一手信源难以确定该信息的准确性）。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/4accc7b652b2be10f5cc2e85e48d07cc.png" src="https://cdn.sspai.com/2022/11/06/4accc7b652b2be10f5cc2e85e48d07cc.png"/&gt;&lt;figcaption&gt;郭明錤 iPhone 5 预测&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;2011 iPhone 4s&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;主摄：Sony IMX145 8M 1/3.2 1.4um 背照式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;从 iPhone 4s 开始，Apple 开始转向 Sony 制造的图像传感器，同时开启了 Sony 在图像传感器市场的制霸之路。在 Chipworks 的拆解中，他们发现 iPhone 4s 所使用的 800 万像素传感器上印有 Sony MM145 字样，确认传感器型号为 Sony IMX145。在维持和 iPhone 4 上一样的 1/3.2 英寸传感器尺寸的情况下，再次缩小了像素尺寸，达到 1.4um，像素量升级到 800 万。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/d437ef89c814af53344f37549b1a363c.png" src="https://cdn.sspai.com/2022/11/06/d437ef89c814af53344f37549b1a363c.png"/&gt;&lt;figcaption&gt;Chipworks iPhone 4s teardown&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;&lt;strong&gt;前摄：OmniVision OV7736 0.3M 1/7 3.0um 前照式 CMOS [?]&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;仍然是一款 VGA 图像传感器，参数信息与 iPhone 4 上的一致，具体型号参考自郭明錤对 iPhone 5 的预测中所发布的表格，准确性未知。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/32594407b36774b0a6e1a5acb25c6e0a.png" src="https://cdn.sspai.com/2022/11/06/32594407b36774b0a6e1a5acb25c6e0a.png"/&gt;&lt;figcaption&gt;郭明錤 iPhone 5 预测&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;2012 iPhone 5&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;主摄：Sony IMX145 8M 1/3.2 1.4um 背照式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;自 iPhone 5 这一代开始，我就没有在公开资料中查到类似 iPhone 上使用的 Sony 传感器带有型号的拆解图，例如 Chipworks 的拆解中显示传感器上仅有 Sony 标志，不带有上一代的“MM145”型号信息。如今可以查到的信息均认为 iPhone 5 上使用的仍然是 4s 上的同一款 IMX145。发布会上也没有说采用了新一代图像传感器。（一般采用了新图像传感器，发布会上都会提到）&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/4affffff777554227e38eb476cee0c96.png" src="https://cdn.sspai.com/2022/11/06/4affffff777554227e38eb476cee0c96.png"/&gt;&lt;figcaption&gt;Chipworks iPhone 5 teardown&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;&lt;strong&gt;前摄：OmniVision OV2C3B8E 1.2M 1/6 1.75um 背照式CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;Chipworks 拆解中显示 iPhone 5 的前置摄像头采用的是 OmniVision 的传感器，印有 OV2C3B8E 标记，具体对应型号不知。发布会上说到这是一颗背照式传感器，像素量达到 120 万，不再是 VGA 画质。传感器尺寸 1/6 英寸，单像素 1.75um。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/2b8e0a2c5970ea33759b73f700bcff61.png" src="https://cdn.sspai.com/2022/11/06/2b8e0a2c5970ea33759b73f700bcff61.png"/&gt;&lt;figcaption&gt;Chipworks iPhone 5 teardown&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;2013 iPhone 5c&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;主摄：Sony IMX145 8M 1/3.2 1.4um 背照式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;iPhone 5c 并没有使用 5s 上的新一代堆栈式 CIS，而是沿用了 5 上的 IMX145。&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;前摄：OmniVision OV2E0BNN 1.2M 1.9um 背照式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;Chipworks 的 iPad Air 拆解中提到，iPad Air 上的前摄标记为 OV2E0BNN，与 5c/5s 相同。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/dc10c4e302b32bba5d6c99f268e1897c.png" src="https://cdn.sspai.com/2022/11/06/dc10c4e302b32bba5d6c99f268e1897c.png"/&gt;&lt;figcaption&gt;Chipworks iPad Air teardown&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;关于像素尺寸，Chipworks 的报告显示是 1.9um，但是在 iPhone 5c 的发布会上，Apple 的幻灯片显示的是 1.9um，官网介绍中也提到是「更大的单个像素尺寸」。我无法判断到底是 1.75um 还是 1.9um，暂时是取 Apple 自己的说法，记为 1.9um，欢迎更有真知灼见者不吝赐教。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/121cba50baaeaea0b55110e2920836ee.png" src="https://cdn.sspai.com/2022/11/06/121cba50baaeaea0b55110e2920836ee.png"/&gt;&lt;figcaption&gt;iPhone 5c 发布会&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;2013 iPhone 5s&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;主摄：Sony IMX145-derived 8M 1/2.94 1.50um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;iPhone 5s 上采用了面积更大的图像传感器，单像素尺寸更大，像素量不变。Chipworks 的拆解显示它是 Sony 的堆栈式 CIS（CMOS 图像传感器）。目前各网站均将它显示为 IMX145-derived（IMX145 衍生款），这是 iPhone 上的第一款堆栈式 CIS。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/113a870516a65d9310907b58ccd82ef6.png" src="https://cdn.sspai.com/2022/11/06/113a870516a65d9310907b58ccd82ef6.png"/&gt;&lt;figcaption&gt;Chipworks iPhone 5s teardown&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;&lt;strong&gt;前摄：OmniVision OV2E0BNN 1.2M 1.9um 背照式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;我在公开资料中没有直接查到 iPhone 5s 前置摄像头传感器的信息，不过在 Chipworks 和 Techinsights 2016 年的 iPhone SE 的拆解中，他们提到上一次见到 iPhone SE 的前置摄像头传感器是在 iPhone 5s 上，从而确认 iPhone 5s 使用的前摄传感器和 SE 是同一款，来自 OmniVision，标记 OV2E0BNN（具体对应型号不知），120 万像素，1.75um 单像素尺寸，传感器尺寸没查到。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/375980a36de5840085d22d87d3c174d9.png" src="https://cdn.sspai.com/2022/11/06/375980a36de5840085d22d87d3c174d9.png"/&gt;&lt;figcaption&gt;Techinsights iPhone SE teardown&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;iPhone 5s 的前摄传感器与 5c 是同一款，所以其单像素尺寸有两种说话，暂取 Apple 所说的 1.9um。&lt;/p&gt;&lt;h3&gt;2014 iPhone 6/6 Plus&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;主摄：Sony IMX145-derived with PDAF 8M 1/2.94 1.50um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;iPhone 6 在 CIS 上的最大变化是通过加入掩蔽式像素作为专用的 PDAF 像素，即相位对焦像素，Apple 称之为 Focus Pixel（对焦像素）。在 Chipworks 的拆解中，确认传感器仍然是 Sony 堆栈式 CIS，通过在部分原本绿色滤光镜处设置掩蔽 PDAF，声称比上一代提高了 2 倍自动对焦速度。传感器尺寸与单像素尺寸、像素量均与 iPhone 5s 保持一致，现在普遍将其称为 IMX145-derived with PDAF。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/8ab7e9360c0a506b3c755f3ab372d177.png" src="https://cdn.sspai.com/2022/11/06/8ab7e9360c0a506b3c755f3ab372d177.png"/&gt;&lt;figcaption&gt;Chipworks iPhone 6 teardown&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;&lt;strong&gt;前摄：Sony 1.2M 1.12um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;Chipworks 的拆解显示，iPhone 6 这一代的前置摄像头同样来自 Sony，更新为堆栈式设计。其色彩滤色镜排列并非传统的拜耳阵列，而是我们现在比较熟知的 Quad Bayer 排列，也就是四合一阵列，其实际像素量约为 500 万，四合一输出后为 120 万像素，并且它并没有输出 500 万像素的选项，强制输出为 120 万。Chipworks 拆解显示其像素尺寸为 2.2um，但这实际上是四合一后的像素尺寸，实际的单像素尺寸应该约为 1.12um。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/2571f52fcff50ef65bd9bb55bee79377.png" src="https://cdn.sspai.com/2022/11/06/2571f52fcff50ef65bd9bb55bee79377.png"/&gt;&lt;figcaption&gt;Chipworks iPhone 6 teardown&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;至于为何要在 iPhone 6 上采用 Quad Bayer 排列，应该是为了实现单帧 HDR。在 iPhone 6 的发布会上是这样介绍前置摄像头的：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;这个新的 FaceTime 高清传感器可以拍出很酷的照片，可以拍出 Single-shot HDR 照片，拍摄一张照片，不是两张，使前景和背景的曝光度都非常好。现在也能用 FaceTime 镜头拍摄出 HDR 视频。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;传统的拜耳阵列拍摄 HDR 使用的是包围曝光多帧合成，Quad Bayer 阵列同色像素一分为四，可以在单次曝光下使四个像素进行不同程度的曝光，然后进行合成，以实现单帧 HDR。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/40d6389306519b9d7edc0032d670f6c8.png" src="https://cdn.sspai.com/2022/11/06/40d6389306519b9d7edc0032d670f6c8.png"/&gt;&lt;figcaption&gt;iPhone 6 官网介绍&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;2015 iPhone 6s/6s Plus&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;主摄：Sony IMX315 12.2M 1/2.93 1.22um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;iPhone 6s 这一代换用了全新的 1200 万像素的堆栈式 CIS，但是传感器尺寸与上一代基本保持不变，单像素面积来到 1.22um，同时引入了深槽隔离技术（DTI）。在 Chipworks 的 iPhone 6s 拆解报告中给出了传感器的更多信息，前后摄均使用 Sony 的堆栈式 CIS。现在各网站均显示 iPhone 6s 上使用的传感器型号是 IMX315，但我始终没有找到 IMX315 的出处。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/fff8c6e092b14195e802c37a28ddc235.png" src="https://cdn.sspai.com/2022/11/06/fff8c6e092b14195e802c37a28ddc235.png"/&gt;&lt;figcaption&gt;Chipworks iPhone 6s report&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;&lt;strong&gt;前摄：Sony 5M 1.12um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;iPhone 6s 的前摄同样提升了像素量，达到 500 万像素，单像素尺寸与主摄上的一致，同为 1.12um。根据 Chipworks 的拆解报告，其仍然是 Quad Bayer 排列，但这次不再默认输出 120 万像素的照片，而是输出 500 万像素，也没有输出 120 万像素的选项。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/article/b7ef0ea0d3a21e962b1965b2a6419c78" src="https://cdn.sspai.com/2022/11/06/article/b7ef0ea0d3a21e962b1965b2a6419c78"/&gt;&lt;figcaption&gt;Chipworks iPhone 6s report&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;2016 iPhone SE&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;主摄：Sony IMX315 12.2M 1/2.93 1.22um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;Techinsights 的拆解显示，iPhone SE 使用的是 6/6+ 上的同款传感器——Sony IMX315。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/631748700efd0a91f9cea246036aa729.png" src="https://cdn.sspai.com/2022/11/06/631748700efd0a91f9cea246036aa729.png"/&gt;&lt;figcaption&gt;Techinsights iPhone SE teardown&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;&lt;strong&gt;前摄：OmniVision OV2E0BNN 1.2M 1.9um 背照式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;SE 的前摄沿用 5s 上的同款 OmniVision OV2E0BNN，120 万像素，1.75um 像素尺寸。单像素尺寸采用 Apple 的说法，暂取 1.9um。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/b674feca35d32fce09cc7148e86760f8.png" src="https://cdn.sspai.com/2022/11/06/b674feca35d32fce09cc7148e86760f8.png"/&gt;&lt;figcaption&gt;Techinsights iPhone SE teardown&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;2016 iPhone 7/7 Plus&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;主摄：Sony IMX315 12.2M 1/2.93 1.22um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;iPhone 7 的发布会上，Apple 声称「采用了全新的高像素传感器，大像素，速度快了 60%，节能提高了 30%」，现在普遍认为其是 iPhone 6 上的 IMX315 的小改款，主要提高了速度和能效，类似 4s 和 5/5c 之间使用同型号传感器的关系。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/f32b16293ac7bd93ae7bb396a6df8a37.png" src="https://cdn.sspai.com/2022/11/06/f32b16293ac7bd93ae7bb396a6df8a37.png"/&gt;&lt;figcaption&gt;Techinsights iPhone 7 teardown&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;&lt;strong&gt;长焦（7 Plus）：Sony 12M 1/3.4 1.0um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;iPhone 7 Plus 上首次出现了 iPhone 上的后置双摄设计，采用的是一颗 1200 万像素的长焦摄像头。其镜头实际焦距为 6.6mm，等效焦距约为 56mm，计算裁切因子得出其传感器尺寸约为 1/3.4&amp;quot;，与之后几代的 iPhone 长焦传感器尺寸一致，在像素量一致的前提下其单像素尺寸为 1.0um。&lt;/p&gt;&lt;p&gt;Techinsights 在其《A Survey of Enabling Technologies in Successful Consumer Digital Imaging Products (Part 1: PDAF)》中提到 iPhone 7 Plus 中的长焦传感器使用的是索尼的 Exmor RS 芯片，并且使用了 1X2 OCL 相位对焦，而非 iPhone 上常见的掩蔽式 PDAF。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;最近，人们发现索尼的背照芯片使用了一种新型 PDAF 系统，其可以说是无损的。Apple iPhone 7 Plus 中的 1.0um 世代的 Exmor RS 芯片（长焦）在选定的绿蓝色滤镜行（green-blue rows）中的八个像素对中的两个上使用了 1x2 微透镜结构。宽微透镜覆盖拜耳排列的一个绿色滤镜，并在相邻的蓝色滤镜处使用一个绿色替代滤镜。8x8 块中 64 个像素中的两个使用这种透镜结构，这些块分布在约 95% 的有源像素阵列中。&lt;/p&gt;&lt;/blockquote&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/e100034c89577e7bc5719bc42b91c5b6.png" src="https://cdn.sspai.com/2022/11/06/e100034c89577e7bc5719bc42b91c5b6.png"/&gt;&lt;figcaption&gt;Techinsights《A Survey of Enabling Technologies in Successful Consumer Digital Imaging Products (Part 1: PDAF)》&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt; &lt;/p&gt;&lt;h4&gt;&lt;strong&gt;前摄：Sony 7M 1.0um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;Chipworks 的拆解显示前摄传感器仍然是 Sony 的堆栈式 CIS，像素量再一次升级，达到 700 万。像素尺寸第一次来到 1.0um，之后的 iPhone 前摄（包括非主摄）像素尺寸均保持在 1.0um。Chipworks 指出其采用的是传统拜耳阵列滤镜。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/051d6a205f0b31d445f5fc36f996c4c3.png" src="https://cdn.sspai.com/2022/11/06/051d6a205f0b31d445f5fc36f996c4c3.png"/&gt;&lt;figcaption&gt;Chipworks iPhone 7 teardown&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;2017 iPhone 8/8 Plus、iPhone X&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;主摄：Sony IMX315 12.2M 1/2.93 1.22um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;在 iPhone 8 系列的发布会上，Apple 声称「它拥有全新的更大更快的 1200 万像素传感器，光线多出 83%，效率也提高了，有更深层次的像素和全新色彩滤镜」「iPhone 8 Plus的双镜头中含有两个全新传感器」，现在网上各信息均显示 iPhone 8 系列使用的仍然是 IMX315，我未能找到该信息的出处。&lt;/p&gt;&lt;p&gt;Techinsights 的数据显示，8 这一代的主摄的 Die size 为 32.8mm^2，比 7 这一代的 32.3mm^2 要大，但应该不是指 Die size 更大。当然即使是型号相同，工艺上也是有改进，采用了新型的 PDAF 像素排列（从配对转向共享），堆栈层之间不在使用硅通孔（through silicon via）的方式连接，而是首次使用了混合键合（hybrid bonding）的方式。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/63002cf7a95313e333c0ba52ea2e3996.png" src="https://cdn.sspai.com/2022/11/06/63002cf7a95313e333c0ba52ea2e3996.png"/&gt;&lt;figcaption&gt;Techinsights iPhone 8 Plus teardown&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;关于像素尺寸，iFixit 的拆解写道：「iPhone 8 上的传感器比 iPhone 7 要来得大，但依旧是 12MP 像素。这意味着单个像素大小更大，这可以获得更大的进光量，更丰富的色彩以及更少的噪点」，而 Techinsights 则写道：「我们可以确认 1.22µm 像素尺寸」。iFixit 可能是直接引用了 Apple 的说法，但 Techinsights 的说法则与 Apple 的说法相悖，这都要怪 Apple 老是喜欢用一些「更大」「更快」之类的词汇，而不清楚讲明白，这一点上我还是倾向 Techinsights。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/9bcb8ad20af3adad84915e07079a3e33.png" src="https://cdn.sspai.com/2022/11/06/9bcb8ad20af3adad84915e07079a3e33.png"/&gt;&lt;figcaption&gt;iFixit iPhone 8 teardown&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/8ce8cd7044c54de6569525035ef60afb.png" src="https://cdn.sspai.com/2022/11/06/8ce8cd7044c54de6569525035ef60afb.png"/&gt;&lt;figcaption&gt;Techinsights iPhone 8 Plus teardown&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;&lt;strong&gt;长焦（8 Plus/X）：Sony 12M 1/3.4 1.0um 堆栈式 CMOS [?]&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;我找不到 iPhone 8 Plus 和 iPhone X 上的长焦传感器的信息。但是 Techinsights 的拆解明确指出是来自 Sony 的传感器，1.0um 像素尺寸，混合键合（hybrid bonding）。基本参数与 iPhone 7 Plus 的长焦一致，未知是否是同一传感器。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/af829fedea0d1ff1f9ea909df9d25c7d.png" src="https://cdn.sspai.com/2022/11/06/af829fedea0d1ff1f9ea909df9d25c7d.png"/&gt;&lt;figcaption&gt;Techinsights iPhone 8 Plus teardown&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;&lt;strong&gt;前摄：Sony 7M 1.0um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;Techinsights 关于 iPhone X 拆解的表格显示这一代 iPhone 前摄传感器仍然来自 Sony，700 万像素，1.0um 像素尺寸。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/e0e60ec015a349f1521c1313e6763eaf.png" src="https://cdn.sspai.com/2022/11/06/e0e60ec015a349f1521c1313e6763eaf.png"/&gt;&lt;figcaption&gt;Techinsights iPhone X teardown&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;2018 iPhone Xs/Xs Max/Xr&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;主摄：Sony IMX403 12M 1/2.55 1.4um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;iPhone Xs/Xs Max/Xr 采用了同一款全新的，更大更深像素的传感器。整个传感器的 Die size 达到 40.6mm^2（iPhone 8/X 一代是 32.8mm^2）。像素尺寸相对前代的 1.22 um 提升到 1.4 um，开始了 iPhone 主摄像素尺寸的扩大之路。用于 PDAF 的像素密度则进一步提高。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/a9df5db6bc6844fe0ccf0b2700a01655.png" src="https://cdn.sspai.com/2022/11/06/a9df5db6bc6844fe0ccf0b2700a01655.png"/&gt;&lt;figcaption&gt;Techinsights iPhone Xs Max teardown&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;微博数码博主 @天天座萝世（当时昵称是 @宇多田圣人惠）在其微博发布其获取的 iPhone Xs 的日志信息，后其又发文说「实锤了 IMX356 是 XS 的长焦 sensor（然而有何卯月？）」，从而确定了 IMX403 是主摄传感器，IMX414 应该是前摄的传感器。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2022/11/06/124cb1652452ee53f235fcea3cdc33df.png" src="https://cdn.sspai.com/2022/11/06/124cb1652452ee53f235fcea3cdc33df.png"/&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2022/11/06/e1afb272ee2d6844b4559049db77bef5.png" src="https://cdn.sspai.com/2022/11/06/e1afb272ee2d6844b4559049db77bef5.png"/&gt;&lt;/figure&gt;&lt;h4&gt;&lt;strong&gt;长焦（Xs/Xs Max）：Sony IMX356 12.2M 1/3.4 1um 堆栈式 CMOS [?]&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;发布会上没有提这一代的长焦传感器是新一代，所以有可能 8 Plus 一代使用的也是 IMX356，当然只是我的猜测，没有证据。&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;前摄：Sony IMX414 7M 1um 堆栈式 CMOS [?]&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;403 是主摄，356 是长焦，那么 414 应该就是前摄了。当然其也有可能是 FaceID 上的 ToF 的传感器，但 iPhone 上的 FaceID 使用的 ToF 传感器似乎一直都是来自意法半导体，故而我认为 IMX414 是前摄的传感器。700 万像素，单像素应该还是 1.0um（我推测）。大概率 Xr 上使用的也是同一款传感器，Apple 似乎不曾在前摄上对同一代机型进行区分（5s/5c 使用的是同一款前摄传感器）。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/4c561535f501b042884138fa3790b11f.png" src="https://cdn.sspai.com/2022/11/06/4c561535f501b042884138fa3790b11f.png"/&gt;&lt;figcaption&gt;天天座萝世微博&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;2019 iPhone 11/11 Pro/11 Pro Max&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;主摄：Sony IMX503 12M 1/2.55 1.4um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;@天天座萝世 的微博在 iPhone 12 一代的传感器比较中给出了 11 Pro Max 的传感器读取信息，该数据亦被国外网站，如 reameizu（日本数码网站），现在网上所找到的 11 这一代的传感器信息都与他披露的一致。主摄采用了同尺寸同像素量同像素尺寸的新型号——IMX503。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/10829c3a6609e70b830938d8208ebeab.png" src="https://cdn.sspai.com/2022/11/06/10829c3a6609e70b830938d8208ebeab.png"/&gt;&lt;figcaption&gt;天天座萝世微博&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;&lt;strong&gt;超广角：Sony IMX372 12.2M 1/3.4 1um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;iPhone 首次引入超广角摄像头，采用的是 Sony IMX372，1200 万像素，1/3.4 英寸，1.0um 单像素。&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;长焦（Pro/Pro Max）：Sony IMX356 12.2M 1/3.4 1um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;长焦沿用的是上一代的 IMX356。&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;前摄：Sony IMX343 12M 1/3.6 1um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;前摄升级到了 1200 万像素，型号是 IMX343，1/3.6 英寸，仍然是 1.0um 单像素。&lt;/p&gt;&lt;h3&gt;2020 iPhone SE（第二代）&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;主摄：Sony IMX315 12.2M 1/2.93 1.22um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;第二代 SE 沿用了 iPhone 8 上的大量零配件，主摄仍然为 IMX315。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/0b38c1b747e4b6ceaedfa565707a94f8.png" src="https://cdn.sspai.com/2022/11/06/0b38c1b747e4b6ceaedfa565707a94f8.png"/&gt;&lt;figcaption&gt;iFixit iPhone SE 2020 teardown&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;&lt;strong&gt;前摄：Sony 7M 1.0um 堆栈式 CMOS [?]&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;前摄应该也是沿用了 8 上的传感器。&lt;/p&gt;&lt;h3&gt;2020 iPhone 12/12 mini/12 Pro&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;主摄：Sony IMX503 12M 1/2.55 1.4um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;12 这一代 12/12 mini/12 Pro 三者使用的是同一款主摄传感器，沿用了 11 上的 IMX503。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/807358e564a1b1b7223bfbc78c3c20f8.png" src="https://cdn.sspai.com/2022/11/06/807358e564a1b1b7223bfbc78c3c20f8.png"/&gt;&lt;figcaption&gt;天天座萝世微博&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;&lt;strong&gt;超广角：Sony IMX372 12.2M 1/3.4 1um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;超广角也是沿用自 11 上的 IMX372。&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;长焦（12 Pro）：Sony IMX356 12.2M 1/3.4 1um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;12 Pro 上的长焦传感器仍然沿用 Xs 上的 IMX356。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/db686694946272efe6762489db93cfd1.png" src="https://cdn.sspai.com/2022/11/06/db686694946272efe6762489db93cfd1.png"/&gt;&lt;figcaption&gt;天天座萝世微博&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;&lt;strong&gt;前摄：Sony IMX514 12M 1/3.6 1um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;前摄换用了新型号——IMX514，基本参数与上一代 IMX343 一致。&lt;/p&gt;&lt;h3&gt;2020 iPhone 12 Pro Max&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;主摄：Sony IMX603 12M 1/1.88 1.7um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;12 Pro Max 采用与 12/12 mini/12 Pro 不同的主摄传感器，尺寸更大，达到 1/1.88 英寸，单像素尺寸 1.7um。并且搭载了传感器位移式防抖，不同于之前采用的镜头光学防抖，拥有更好的防抖效果。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/e39111c8e03c25344b0a4ce6e380564e.png" src="https://cdn.sspai.com/2022/11/06/e39111c8e03c25344b0a4ce6e380564e.png"/&gt;&lt;figcaption&gt;天天座萝世微博&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;&lt;strong&gt;长焦：Sony IMX613 12.2M 1/3.4 1um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;长焦也使用了全新型号 IMX613。维基百科/Exmor 页面显示的传感器尺寸是 1/3.6 英寸，但是在 DxO 显示其传感器尺寸为 1/3.4，根据其等效焦距的关系，我个人比较倾向于其传感器尺寸为 1/3.4。&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;超广角：Sony IMX372 12.2M 1/3.4 1um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;超广角仍然是 IMX372。&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;前摄：Sony IMX514 12M 1/3.6 1um 堆栈式CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;iPhone 12 全系前摄统一使用 IMX514。&lt;/p&gt;&lt;h3&gt;2021 iPhone 13/13 mini&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;主摄：Sony IMX603 12M 1/1.88 1.7um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;iPhone 13/13 mini 主摄传感器沿用 12 Pro Max 上的 IMX603。&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;超广角：Sony IMX772 12M 1/3.4 1um 堆栈式 CMOS [?]&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;超广角使用了新型号传感器 IMX772，基本参数与上一代的 IMX372 一致。&lt;/p&gt;&lt;p&gt;关于 iPhone 13 的超广角是否是新一代的 IMX772 有争议，因为 13 Pro/13 Pro Max 上的 IMX772 是具备自动对焦的，而且是掩蔽式 PDAF，而 13/13 mini 的超广角镜头是不具备自动对焦的，照这一点来看两者的传感器应该并非同一款，所以也有部分网站认为 13 的超广角传感器型号仍然是 12 上的 IMX372。但大部分信息均显示 13 的超广角传感器型号与 Pro 一致，例如维基百科就是如此。&lt;/p&gt;&lt;p&gt;在此给出我个人的看法，仅供参考。&lt;/p&gt;&lt;p&gt;iPhone 13 的发布顺序早于 13 Pro，在介绍 13 的时候有提到超广角是「New, Faster Sensor」，而在 13 Pro 的介绍中并未再说到超广角传感器，而是重点介绍镜头设计支持微距。而在官网的介绍页面，两者使用的都是「Faster Sensor」，13 Pro 配备了全新的自动对焦系统。故而可以认为 13、13 Pro 的超广角传感器基本应该是一致的，区别在于 13 Pro 的使用了少数掩蔽式 PDAF 像素，13 应该没有（应该不至于设置了却不启用）。当然型号本身并不重要，主要是 13 系的超广角传感器比 12 系的提高了速度，13 Pro 增加了掩蔽式PDAF。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/d5fddcbd4318bea2d1eee67bc55d4e76.png" src="https://cdn.sspai.com/2022/11/06/d5fddcbd4318bea2d1eee67bc55d4e76.png"/&gt;&lt;figcaption&gt;iPhone 13 发布会&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;前&lt;strong&gt;摄：Sony IMX514&lt;/strong&gt; 12M 1/3.6 1um 堆栈式 CMOS&lt;/h4&gt;&lt;p&gt;前摄沿用 12 上的 IMX514。&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;2021 iPhone 13 Pro/13 Pro Max&lt;/strong&gt;&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;主摄：Sony IMX703 12M 1/1.65 1.9um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;13 Pro/13 Pro Max 上的主摄尺寸进一步增大，达到 1/1.65 英寸，像素量不变的情况下单像素尺寸来到了 1.9um。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/56875f03f94a9d26fb6b1f087623a206.png" src="https://cdn.sspai.com/2022/11/06/56875f03f94a9d26fb6b1f087623a206.png"/&gt;&lt;figcaption&gt;天天座萝世微博&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;&lt;strong&gt;长焦：Sony IMX713 12M 1/3.4 1um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;长焦也是新型号的传感器 IMX713，基本参数与上一代的 IMX613 一致。&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;超广角：Sony IMX772 12M 1/3.4 1um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;超广角 13 全系通用 IMX772。&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;前摄：Sony IMX514 12M 1/3.6 1um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;前摄沿用 12 上的 IMX514。&lt;/p&gt;&lt;h3&gt;2022 iPhone SE（第三代）&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;主摄：Sony IMX315 12.2M 1/2.93 1.22um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;我没有找到 iPhone SE 上所使用的图像传感器的相关信息，不知道它是否沿用前代 iPhone 的传感器。普遍认为它可能使用的仍然是 iPhone 8 上的 IMX315，但没有信源佐证。&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;前摄：Sony 7M 1.0um 堆栈式 CMOS [?]&lt;/strong&gt;&lt;/h4&gt;&lt;h3&gt;2022 iPhone 14/14 plus&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;主摄：Sony IMX703 12M 1/1.65 1.9um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;维基百科的 Exmor 词条显示，iPhone 14/14 plus 的主摄传感器为 13 Pro/13 Pro Max 上同款的 IMX703，这也符合最近几年新一代 iPhone 非 Pro 款沿用上一代 Pro 机型的主摄传感器的趋势。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/146dc3e0b975313df93237a307dafdb7.jpeg" src="https://cdn.sspai.com/2022/11/06/146dc3e0b975313df93237a307dafdb7.jpeg"/&gt;&lt;figcaption&gt;维基百科&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;前摄：Sony IMX714 12M 1/3.6 1.0um 堆栈式 CMOS&lt;/h4&gt;&lt;p&gt;iPhone 14 的前摄大概率和 14 Pro/Max 上的一致，为 IMX714，基本参数同上一代，增加了掩蔽式相位对焦像素。&lt;/p&gt;&lt;h3&gt;2022 iPhone 14 Pro/14 Pro Max&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;主摄：Sony IMX803 48M 1/1.28 1.22um QuadBayer 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;根据微博数码博主 @肥威 读取 iPhone 14 Pro Max 的信息显示，iPhone 14 Pro Max 的主摄型号为 IMX803。 14 Pro 上使用的图像传感器应与 14 Pro Max 一致。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/article/80263904432d6c593303f675169658bb" src="https://cdn.sspai.com/2022/11/06/article/80263904432d6c593303f675169658bb"/&gt;&lt;figcaption&gt;肥威微博&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;根据 Techinsights 的《Apple iPhone 14 图像传感器初步分析》，这款 4800 万像素的 QuadBayer 排列的图像传感器并未使用 2x2 OCL（四个 QuadBayer 像素共用一个微透镜），仍然是 iPhone 主摄上一贯的掩蔽式 PDAF + 双光电二极管结构。&lt;/p&gt;&lt;figure&gt;&lt;img alt="Apple iPhone 13 Pro/Max vs iPhone 14 Pro/Max Main Rear Camera CIS Dies" data-original="https://cdn.sspai.com/2022/11/06/article/47c7a7dda0f3bafaf0819c25327f07e4" src="https://cdn.sspai.com/2022/11/06/article/47c7a7dda0f3bafaf0819c25327f07e4"/&gt;&lt;figcaption&gt;Techinsights《Apple&amp;#x27;s newest iPhone Three Camera System is &amp;quot;Cam-packed&amp;quot;》&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;关于 IMX803 的传感器尺寸，一说是 1/1.28，一说是 1/1.3，我尚未确认，欢迎各位分享相关信息予以指正。&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;长焦：Sony IMX713 12M 1/3.4 1um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;长焦沿用 13 Pro 一代的 IMX713。&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;超广角：Sony IMX633 12M 1/2.55 1.4um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;14 Pro/14 Pro Max 换用了全新的更大尺寸的传感器（1/2.55），型号为 IMX633。像素量保持 1200 万，故而像素尺寸增加到 1.4um，是 iPhone 长焦/超广角图像传感器首次使用非 1.0um 尺寸的像素。&lt;/p&gt;&lt;figure&gt;&lt;img alt="Apple iPhone 13 Pro/Max vs iPhone 14 Pro/Max Ultrawide Rear Camera CIS Dies" data-original="https://cdn.sspai.com/2022/11/06/article/7692fbcb33507c6f2895e594486ff960" src="https://cdn.sspai.com/2022/11/06/article/7692fbcb33507c6f2895e594486ff960"/&gt;&lt;figcaption&gt;Techinsights《Apple&amp;#x27;s newest iPhone Three Camera System is &amp;quot;Cam-packed&amp;quot;》&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;&lt;strong&gt;前摄：Sony IMX714 12M 1/3.6 1.0um 堆栈式 CMOS&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;前摄传感器型号为 IMX714，基本参数不变，新增了掩蔽式相位自动对焦功能。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/06/article/98857c95cf5d4223579f86aa89ded6e8" src="https://cdn.sspai.com/2022/11/06/article/98857c95cf5d4223579f86aa89ded6e8"/&gt;&lt;figcaption&gt;Techinsights《Apple&amp;#x27;s newest iPhone Three Camera System is &amp;quot;Cam-packed&amp;quot;》&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2&gt;小结&lt;/h2&gt;&lt;p&gt;一款优秀的图像传感器对于影像的作用不言而喻，相机所能实现的功能、画质都与图像传感器息息相关。由于 Apple 并不主动披露 iPhone 传感器的详细信息，基本都是 Sony 定制，所以在 Sony 网站上也找不到相关的内容。相较于三星、豪威，Sony 在产品信息的宣传上是比较匮乏的。因为信息散落不全，所以互联网上也比较少从图像传感器的角度去观察 iPhone 相机的变化。&lt;/p&gt;&lt;p&gt;我个人在查找整理这些信息的过程中，获取了很多以前没有看过、了解的知识，收益颇丰。如果读完本篇的你对相关的内容也感兴趣的话，可以关注我接下来的动态，应该会写一篇 iPhone 上的图像传感器发展。下一篇文章再见吧。&lt;/p&gt;&lt;p&gt;&amp;gt; 下载 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;少数派 2.0 客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，解锁全新阅读体验 📰&lt;/p&gt;&lt;p&gt;&amp;gt; 实用、好用的 &lt;a href="https://sspai.com/mall" target="_blank"&gt;正版软件&lt;/a&gt;，少数派为你呈现 🚀&lt;/p&gt;&lt;/div&gt;</description><author>太不巧</author><guid>https://sspai.com/post/76639</guid><pubDate>Tue, 08 Nov 2022 09:52:31 GMT</pubDate></item><item><title>想要逃离 Chrome？请收下这份 Firefox 终极隐私指南</title><link>https://sspai.com/post/76688</link><description>&lt;div&gt;&lt;p&gt;&lt;strong&gt;Matrix 首页推荐&lt;/strong&gt; &lt;/p&gt;&lt;p&gt;&lt;a href="https://sspai.com/matrix" target="_blank"&gt;Matrix&lt;/a&gt; 是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。 &lt;br/&gt;文章代表作者个人观点，少数派仅对标题和排版略作修改。&lt;/p&gt;&lt;hr/&gt;&lt;h2&gt;前言&lt;/h2&gt;&lt;p&gt;毋庸置疑，如今的 Chrome 及其他基于 Chromium 的 Blink 内核浏览器因其速度快、网页兼容性好的优点，以绝对的优势占据了浏览器市场的主导地位。但与此同时，因为 Chrome 与 Chromium 被一家号称「不作恶」但处处作恶的公司所拥有，所以经常被诟病存在隐私问题。许多想要逃离 Chrome 统治的人都转向了更加自由的 Firefox 浏览器，尽管其母公司 Mozilla 近年来也是骚操作不断，但 Firefox 仍然是除 Chromium 的 Blink 和 Safari 的 WebKit 外唯一选择。&lt;/p&gt;&lt;p&gt;我曾经也很喜欢用 Chrome（或者说是 Chromium），使用 ArchLinux 作为主力系统的我，官方软件源中使用开源 Chromium 代码编译出的 Chromium 浏览器在当时体验基本与谷歌官方的闭源 Chrome 一致。促使我转向使用 Firefox 的契机开始于一年多前，&lt;a href="https://blog.Chromium.org/2021/01/limiting-private-API-availability-in.html" target="_blank"&gt;谷歌限制了第三方浏览器对其数据同步 API 的使用&lt;/a&gt;，这样一来各家发行版自行编译的 Chromium 浏览器都失去了账户同步功能，这在当时引起了很多不满。从那时开始，我就开始尝试使用 Firefox 替代 Chromium 作为我的主力浏览器，并最终彻底淘汰掉了 Chromium。&lt;/p&gt;&lt;p&gt;无独有偶，&lt;a href="https://www.theregister.com/2022/09/08/ad_blockers_chrome_manifest_v3/" target="_blank"&gt;谷歌又宣布将会在 2022 年底彻底禁用 Manifest V2 规范&lt;/a&gt;（后来又推迟了半年），作为替代者的 Manifest V3 规范，用谷歌的话说是为了「保护用户隐私」，限制了浏览器扩展的很多权限，其中影响最大的是禁用了 WebRequest API，绝大多数去广告相关的扩展都要依赖这个 API 来工作，谷歌虽然开放了新的 API 供扩展使用，但使用了新 API 的扩展拦截广告能力会大打折扣。另外一边，&lt;a href="https://blog.mozilla.org/addons/2022/05/18/manifest-v3-in-firefox-recap-next-steps/" target="_blank"&gt;Firefox 则保证自己的 Manifest V3 规范将会保留对 WebRequest API 的兼容&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;综合以上两个背景，相信会有很多人对 Firefox 产生兴趣，或者转向使用 Firefox。于是我写下这篇文章，分享一下我在使用 Firefox 的这一年多来学习到的配置方法与使用技巧。&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;注：没有特别说明的话，本文提及的 Firefox 指的是 Mozilla 公司的原版 Firefox 浏览器，而不是国内谋智公司的所谓「特供版」火狐浏览器。&lt;/p&gt;&lt;h2&gt;下载与安装&lt;/h2&gt;&lt;p&gt;和 Chrome 的版本发行规律类似，官方的 Firefox 分为 &lt;a href="https://www.mozilla.org/zh-CN/firefox/new/" target="_blank"&gt;稳定版&lt;/a&gt;、&lt;a href="https://www.mozilla.org/zh-CN/firefox/channel/desktop/#beta" target="_blank"&gt;测试版（beta）&lt;/a&gt;、和 &lt;a href="https://www.mozilla.org/zh-CN/firefox/channel/desktop/#nightly" target="_blank"&gt;每夜版（nightly）&lt;/a&gt;，但和 Chrome 不同的是，Firefox 还有长期支持的 &lt;a href="https://www.mozilla.org/zh-CN/firefox/enterprise/" target="_blank"&gt;ESR 版本&lt;/a&gt;（版本较落后，但会长期维护）和面向开发者的 &lt;a href="https://www.mozilla.org/zh-CN/firefox/developer/" target="_blank"&gt;Developer Edition&lt;/a&gt;（基于 beta 版，多了一些开发者工具）。&lt;/p&gt;&lt;p&gt;另外，因为是开源项目，Firefox 还存在很多非官方的 fork（分叉版），其中值得一提的有以下几个：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://www.torproject.org/download/" target="_blank"&gt;Tor Browser&lt;/a&gt;：大名鼎鼎的 Tor 浏览器，基于 Firefox ESR 版本，默认修改了很多高级设置以增强隐私性和安全性，同时集成了 Tor 网络增强匿名性，不过因为网络环境的原因，在国内几乎不可用;&lt;/li&gt;&lt;li&gt;&lt;a href="https://librewolf.net/" target="_blank"&gt;Librewolf&lt;/a&gt;：基于稳定版 Firefox，移除了原版 Firefox 中不严格符合自由软件定义的代码，禁用了遥测、数据收集和 DRM，修改了很多高级设置以增强隐私性和安全性，并默认集成了 uBlock Origin 扩展；&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.gnu.org/software/gnuzilla/" target="_blank"&gt;GNU IceCat&lt;/a&gt;：GNU 的 Firefox，出于回避使用专有品牌名称考虑换了名字，移除了所有的不严格符合自由软件定义部分，并默认集成了一些 GNU 自己开发的扩展以禁用网页中的不严格自由部分，从而保证「完全的自由」。IceCat 不提供 Windows 和 MacOS 版本；&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.waterfox.net/download/" target="_blank"&gt;Waterfox&lt;/a&gt;：基于 Firefox ESR，宣称隐私友好，但是被卖给了一家广告公司；而且它的版本发行比较奇怪，分为 Classic（基于超级古老的 Firefox ESR 56，但是仍然在维护更新）和 Current 版本（基于最新的 ESR 版本），版本号都以 G 为前缀（应该代表的是 Generation），例如 G5 对应 Firefox ESR 102，G4 对应 Firefox ESR 91，G3 对应 Firefox ESR 78。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这么多的版本，到底应该选哪个呢？我个人的建议是：如果你是个隐私狂人，想要最高等级的隐私保护，推荐直接用 Tor Browser 和 Librewolf，并且下面的配置部分也可以跳过，因为这两个浏览器已经提供了最佳保护设置；如果你是自由软件运动和 Richard Stallman 的坚定支持者，那么这里推荐 IceCat。不过这两种人一般都不需要我这种教程了吧。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2022/11/07/article/e346a1c0d1aa5ea6555e5e36966947cf" src="https://cdn.sspai.com/2022/11/07/article/e346a1c0d1aa5ea6555e5e36966947cf"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;对于普通人，想要保证正常的网页浏览体验，我还是比较推荐用官方版本的 Firefox。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;不过值得一提的是，Mozilla 的骚操作之一，直接从官网下载的 Firefox 的安装包都含有&lt;a href="https://www.ghacks.net/2022/03/17/each-firefox-download-has-a-unique-identifier/" target="_blank"&gt;唯一识别码&lt;/a&gt;，可以被用来追踪用户，如果介意的话，可以去 Mozilla 的 &lt;a href="https://ftp.mozilla.org/pub/firefox/" target="_blank"&gt;FTP 站点&lt;/a&gt; 下载安装包。&lt;/p&gt;&lt;p&gt;对于 Linux 用户，由于 Firefox 几乎存在于所有发行版的官方软件仓库中，甚至是绝大多数发行版的系统预装软件，没有预装的也可以使用包管理器快捷安装，除了软件本体，还需要安装对应的语言包，我使用的 Archlinux，官方稳定版 Firefox 的简体中文语言包包名是 &lt;code&gt;firefox-i18n-zh-cn&lt;/code&gt;，其他发行版请自行寻找。&lt;/p&gt;&lt;h2&gt;推荐配置&lt;/h2&gt;&lt;h3&gt;备份配置文件&lt;/h3&gt;&lt;p&gt;首先，数据安全最重要，在 Firefox 地址栏中输入 &lt;code&gt;about:profiles&lt;/code&gt; 再回车，就可以看到下图的界面，正常情况下这里只有一个配置文件，如果没有重命名过的话，配置文件名字是 default，同时会有两个文件夹，一般是一串乱码加配置文件名。第一个文件夹存储着浏览器的各种数据，比较重要，第二个文件夹存储的是缓存文件，可以不用关心。点击旁边的 「打开目录」 就可以在文件管理器用打开文件夹。我们要做的是将第一个文件夹复制到别处，如果不小心把浏览器折腾坏了，不知道如何恢复的话，只需删除配置文件夹，并将之前备份的配置文件夹复制回去，就可以恢复到之前的状态了。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2022/11/07/article/d0d12567ecbf218893e77263fad419d9" src="https://cdn.sspai.com/2022/11/07/article/d0d12567ecbf218893e77263fad419d9"/&gt;&lt;/figure&gt;&lt;p&gt;另外你也可以点击上方的 「创建新配置文件」 再创建一个新的配置文件夹并设置为默认配置文件。这样下次打开 Firefox 就会默认读取新配置文件，不会影响到旧的配置文件。&lt;/p&gt;&lt;h3&gt;个性化设置&lt;/h3&gt;&lt;p&gt;对于外观每个人喜好不同，我只在这里分享一下我个人的配置，仅供参考。&lt;/p&gt;&lt;p&gt;首先是主题配色，在最新的 Firefox 106 版本中，新添加了 Colorways 主题配色，在第一次启动浏览器时弹出的向导界面中就会推荐。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2022/11/07/article/94b88c412d10aa4a83003c012a06e62e" src="https://cdn.sspai.com/2022/11/07/article/94b88c412d10aa4a83003c012a06e62e"/&gt;&lt;/figure&gt;&lt;p&gt;后续也可以点击浏览器左上角的 logo 进入 Firefox view 界面或地址栏输入 &lt;code&gt;about:addons&lt;/code&gt;进入扩展管理页面修改 Colorways 配色，此外 Firefox 也内置了好几个主题配色，想要更多主题配色可以通过 Firefox 的 &lt;a href="https://addons.mozilla.org/zh-CN/firefox/themes/" target="_blank"&gt;扩展商店&lt;/a&gt; 下载。我个人使用的是 &lt;a href="https://addons.mozilla.org/zh-CN/firefox/addon/dracula-dark-colorscheme/" target="_blank"&gt;Dracula Dark Theme&lt;/a&gt;。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2022/11/07/article/20a06eb3742d5eea6a12cd4dc7358c56" src="https://cdn.sspai.com/2022/11/07/article/20a06eb3742d5eea6a12cd4dc7358c56"/&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2022/11/07/article/919491331d6c9da7f5177e42b0d6c451" src="https://cdn.sspai.com/2022/11/07/article/919491331d6c9da7f5177e42b0d6c451"/&gt;&lt;/figure&gt;&lt;p&gt;然后是浏览器的页面布局，鼠标在浏览器标签栏空白处右键，在右键菜单中点击 「定制工具栏」，便可进入定制 Firefox 界面，工具栏上不想要的元素，只需用鼠标将其拖动放到中间区域，相对的，想要添加的元素也只需鼠标拖动到想要的位置，修改完点击右下角的完成即可。我个人习惯去掉地址栏两边的空白，在左上角添加一个主页按钮，将不常用的扩展放入折叠菜单，还有前文提到的的 Firefox view，这个功能是在 106 版本新加的，方便多设备同步，但是默认在左上角感觉很不协调，我就给挪到右上角了。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2022/11/07/article/84b08f758e75b84f1ce0f2572f14e522" src="https://cdn.sspai.com/2022/11/07/article/84b08f758e75b84f1ce0f2572f14e522"/&gt;&lt;/figure&gt;&lt;p&gt;最后是主页内容，在地址栏输入 &lt;code&gt; about:preferences&lt;/code&gt; 回车可以进入设置页面，左侧点击主页，在 Firefox 主页内容部分取消勾选除了网络搜索的所有部分，这样打开浏览器就是一个清爽的主页了。&lt;/p&gt;&lt;h3&gt;隐私设置&lt;/h3&gt;&lt;p&gt;虽然 Firefox 经常以隐私保护为卖点宣传，但官方版本的 Firefox 在不做任何设置的情况下，并没有比它的竞争对手 Chrome 强上太多，一样会有遥测，一样会有数据收集。但 Firefox 的优势在于它可配置的选项更多，遥测和数据收集也都可以通过一定的手段关闭。本节将会介绍一些基本的隐私相关设置项，但具体如何配置要取决于个人的使用场景。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;「设置」&amp;gt;「常规」中，找到 「采用数字版权管理（DRM）的内容」：一些音频视频网站，比如 Spotify 和 Netflix ，提供的内容可能存在版权保护，经过了数字加密（EME），浏览器想要播放这类内容，就需要安装 Widevine 插件，打开这个选项浏览器就可以自动安装 Widevine 插件。但是问题在于，DRM 与开源自由的理念相悖，如果介意这一点，可以将这个选项关闭。&lt;/li&gt;&lt;li&gt;「启用基于 HTTPS 的 DNS」：启用后所有的 DNS 查询都将会由 DNS-over-HTTPS 提供商处理，而不会把查询结果泄漏给本地运营商。Firefox 默认内置了 Cloudflare 和 NextDNS 两个提供商，你也可以自行添加其他的服务商。需要注意的是，DNS-over-HTTPS 的速度要明显慢于普通 DNS，开启后可能会拖慢网页加载速度。&lt;/li&gt;&lt;li&gt;「设置」&amp;gt;「搜索」，选择你常用的的搜索引擎，Firefox 默认内置了 google、百度、维基百科、Bing 和 DuckDuckGo 几个搜索引擎，想要添加其他的搜索引擎，可以从官方扩展商店以 &lt;a href="https://addons.mozilla.org/zh-CN/firefox/extensions/category/search-tools/" target="_blank"&gt;扩展&lt;/a&gt; 的形式安装，或者在搜索引擎网址主页右键地址栏添加。&lt;/li&gt;&lt;/ul&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2022/11/07/article/8ed8515cdeb5895b3540f47d5cbafe6c" src="https://cdn.sspai.com/2022/11/07/article/8ed8515cdeb5895b3540f47d5cbafe6c"/&gt;&lt;/figure&gt;&lt;ul&gt;&lt;li&gt;「搜索建议」：建议关闭，因为搜索建议是由搜索引擎提供的，有可能被用来收集隐私信息。&lt;/li&gt;&lt;li&gt;「设置」&amp;gt;「隐私与安全」，找到增强性隐私保护，默认的标准模式不会拦截正常窗口的跟踪性内容，这里推荐选择为严格，虽然 Firefox 会提示你 「可能导致某些网站异常」，但我基本还没遇到过，如果真的遇见了网站异常，也可以添加例外。&lt;/li&gt;&lt;li&gt;「向网站发出『请勿跟踪』信号，示明您不想被跟踪」：建议选择为 「一律发送」，遵循这一设置的网站将会停止跟踪用户信息，但不是所有网站都会遵循这一设置，不过聊胜于无。&lt;/li&gt;&lt;li&gt;「Cookie 和网站数据」：如果不想让浏览器保存 Cookie 和网站数据，可以勾选「关闭 Firefox 时删除 Cookie 与网站数据」，再在 「管理例外」 中配置不想被删除数据的网站，但是这个管理例外我个人觉得比较难用，网址不支持通配符，我更喜欢用 Cookie Auto Delete 扩展，详见下文 &lt;a href="https://sspai.com/post/76688#%E6%89%A9%E5%B1%95%E6%8E%A8%E8%8D%90" target="_blank"&gt;扩展推荐&lt;/a&gt; 部分。&lt;/li&gt;&lt;li&gt;「登录信息与密码」和 「表单与自动填写」：我个人使用的是单独的密码管理器，所以这项全关了，如果想要用 Firefox 管理密码，可以打开。&lt;/li&gt;&lt;li&gt;「历史记录」：如果担心电脑被盗后浏览历史泄漏，可以选择不记录历史，我个人觉得记录历史还是挺方便的。&lt;/li&gt;&lt;li&gt;「Firefox 数据收集与使用」：建议全部取消勾选，不用多说。&lt;/li&gt;&lt;li&gt;「欺诈内容和危险软件防护」：可能有点反直觉，如果想要保护隐私，建议把这项关闭，因为「危险与诈骗内容」是提交给 Google 识别的。看来在这里隐私和安全不可兼得吧。&lt;/li&gt;&lt;li&gt;「查询 OCSP 响应服务器，以确认证书当前是否有效」：建议打开，校验 SSL 证书是否有效，增加安全性，但如果网络环境较差 OCSP 服务器连接不稳定，可能会拖慢网页加载速度，甚至会无法加载网页。&lt;/li&gt;&lt;li&gt;「HTTPS-Only 模式」：建议打开，现在绝大多数网站都已经支持了 HTTPS，这项打开后可以将未加密，不安全的 HTTP 升级为更安全的 HTTPS，对于极少数不支持 HTTPS 的网站，可以手动退回 HTTP。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;如果你看到了这里并且跟随着我的设置一步步来，那么在尽可能少地影响基本的网页浏览体验的前提下，你的浏览器已经比绝大多数人的浏览器更加隐私与安全了。如果你此时已经十分满意，大可以直接退出这篇文章；如果你想要更高层面的隐私保护，并且做好了会影响网页浏览体验的心理准备，那么可以继续往下看。&lt;/p&gt;&lt;h3&gt;深入高级设置&lt;/h3&gt;&lt;p&gt;在 Firefox 的地址栏输入 &lt;code&gt;about:config&lt;/code&gt; 再回车，会弹出一个警示页面，点击接受风险并继续，就可以进入高级设置了。&lt;/p&gt;&lt;p&gt;比如说要是我想禁用 &lt;code&gt;about:config&lt;/code&gt; 的警示页面，可以在搜索框中输入 &lt;code&gt;browser.aboutConfig.showWarning&lt;/code&gt;，只有一个结果，点击右边的箭头，true 变为 false。再重新打开 &lt;code&gt;about:config&lt;/code&gt;，你就会发现，警示页面没有了。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2022/11/07/article/733cdd2e741c7eedb9b3273c34ab57de" src="https://cdn.sspai.com/2022/11/07/article/733cdd2e741c7eedb9b3273c34ab57de"/&gt;&lt;/figure&gt;&lt;p&gt;让我们暂时先把 &lt;code&gt;browser.aboutConfig.showWarning&lt;/code&gt; 调回 &lt;code&gt;true&lt;/code&gt;，也就是不禁用警示页面。还记得 &lt;a href="https://sspai.com/post/76688#%E5%A4%87%E4%BB%BD%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6" target="_blank"&gt;前文&lt;/a&gt;提到的配置文件目录吗，地址栏输入 &lt;code&gt;about:profiles&lt;/code&gt;，找到当前的配置文件目录，打开目录，在里面新建一个文本文档，内容如下：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;user_pref(&amp;quot;browser.aboutConfig.showWarning&amp;quot;, false);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;将文档重命名为 &lt;code&gt;user.js&lt;/code&gt;，之后重启浏览器，再次进入 &lt;code&gt;about:config&lt;/code&gt; 界面，你会发现警示界面又没有了，搜索 &lt;code&gt;browser.aboutConfig.showWarning&lt;/code&gt;，发现它的值又变成了 false。&lt;/p&gt;&lt;p&gt;至此，你已经对 Firefox 的高级设置有了一定的了解，Firefox 的高级设置既可以在 &lt;code&gt;about:config&lt;/code&gt; 界面设置，也可以用 &lt;code&gt;user.js&lt;/code&gt; 文件设置，接下来就可以根据自身需要对 Firefox 的高级选项做修改了。&lt;/p&gt;&lt;h3&gt;Arkenfox&lt;/h3&gt;&lt;p&gt;这时你可能会问：&lt;code&gt;about:config&lt;/code&gt; 里面有那么多配置，怎么知道要改哪一个？要怎么改？事实证明，永远不要重复造轮子，在 GitHub 上，有一个名为&lt;a href="https://github.com/arkenfox/user.js" target="_blank"&gt;Arkenfox&lt;/a&gt; 的项目。Arkenfox 是一个积极维护的，旨在增强 Firefox 隐私性与安全性的 &lt;code&gt;user.js&lt;/code&gt; 列表，禁用了绝大多数的遥测项目，并修改了许多隐私相关的设置项，用户只需下载项目提供的 &lt;a href="https://raw.githubusercontent.com/arkenfox/user.js/master/user.js" target="_blank"&gt;user.js&lt;/a&gt; 文件，放进配置文件夹里面，重启浏览器，就大功告成了。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;修改这些高级选项极有可能导致网页故障，所以推荐再安装一个备用浏览器，或者在 &lt;/strong&gt;&lt;code&gt;&lt;strong&gt;about:profiles&lt;/strong&gt;&lt;/code&gt;&lt;strong&gt; 界面中新建一个配置文件。&lt;/strong&gt;&lt;/p&gt;&lt;h3&gt;user-overrides.js&lt;/h3&gt;&lt;p&gt;这时你可能又会问，这个 &lt;code&gt;user.js&lt;/code&gt; 配置不可能适合所有人吧，如果需要修改怎么办？如果日后 Arkenfox 的配置项有变动，又要怎么跟随项目更新呢？&lt;/p&gt;&lt;p&gt;这点 Arkenfox 的维护者也想到了，对于想要自行修改的配置项，不推荐直接修改 &lt;code&gt;user.js&lt;/code&gt; 文件，Arkenfox 提供了一个 updater 脚本，Linux 和 MacOS 用户可以使用 &lt;a href="https://raw.githubusercontent.com/arkenfox/user.js/master/updater.sh" target="_blank"&gt;updater.sh&lt;/a&gt;，Windows 用户可以使用 &lt;a href="https://raw.githubusercontent.com/arkenfox/user.js/master/updater.bat" target="_blank"&gt;updater.bat&lt;/a&gt;，将需要修改的配置项保存进文本，重命名为 &lt;code&gt;user-overrides.js&lt;/code&gt; ，同 updater 脚本一起放进配置文件夹，运行脚本，会自动下载最新的 &lt;code&gt;user.js&lt;/code&gt;，并将其与 &lt;code&gt;user-overrides.js&lt;/code&gt; 合并，保存为新的 &lt;code&gt;user.js&lt;/code&gt;文件。以后如果 &lt;code&gt;user-overrides.js&lt;/code&gt; 有改动，或者要更新 Arkenfox，只需重新运行 updater 脚本即可。&lt;/p&gt;&lt;p&gt;另外，Arkenfox 还提供了 &lt;a href="https://raw.githubusercontent.com/arkenfox/user.js/master/prefsCleaner.sh" target="_blank"&gt;perfsCleaner.sh&lt;/a&gt; 和 &lt;a href="https://raw.githubusercontent.com/arkenfox/user.js/master/prefsCleaner.bat" target="_blank"&gt;perfsCleaner.bat&lt;/a&gt;脚本，推荐在更新 Arkenfox 之前运行，这个脚本会将所有配置项重置，防止出现玄学问题。&lt;/p&gt;&lt;p&gt;你可以在 &lt;a href="https://github.com/arkenfox/user.js/wiki/3.2-Overrides-%5BCommon%5D" target="_blank"&gt;这里&lt;/a&gt; 和 &lt;a href="https://github.com/arkenfox/user.js/issues/1080" target="_blank"&gt;这里&lt;/a&gt; 了解常用的 overrides，以下是我推荐修改的 overrides：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;浏览器启动页面修改：&lt;/strong&gt;0 为空白页面，1 为主页，2 为最后浏览的页面，3 为恢复先前的浏览状态。Arkenfox 修改为了 0，我个人修改为了 1；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;user_pref(&amp;quot;browser.startup.page&amp;quot;, 1);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;浏览器主页修改：&lt;/strong&gt;Arkenfox 修改为了 &lt;code&gt;about:blank&lt;/code&gt; 空白页，我个人修改为了 &lt;code&gt;about:home&lt;/code&gt;。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;user_pref(&amp;quot;browser.startup.homepage&amp;quot;, &amp;quot;about:home&amp;quot;);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;新标签页修改：&lt;/strong&gt;Arkenfox 修改为了空白页，我个人修改回了默认主页。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;user_pref(&amp;quot;browser.newtabpage.enabled&amp;quot;, true);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;设置网页的偏好语言：&lt;/strong&gt;Arkenfox 修改为了英语，我改回了默认；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;user_pref(&amp;quot;intl.accept_languages&amp;quot;, &amp;quot;zh-CN, zh, zh-TW, zh-HK, en-US, en&amp;quot;);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;强制浏览器语言为英语：&lt;/strong&gt;Arkenfox 修改为了 &lt;code&gt;true&lt;/code&gt;，我改回了 &lt;code&gt;false&lt;/code&gt;；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;user_pref(&amp;quot;javascript.use_us_english_locale&amp;quot;, false);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;禁用 IPv6：&lt;/strong&gt;arkenfox 修改为了 &lt;code&gt;true&lt;/code&gt;，若有访问 ipv6 网站的需求，可修改为 &lt;code&gt;false&lt;/code&gt;；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;user_pref(&amp;quot;network.dns.disableIPv6&amp;quot;, false);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;使用地址栏进行网络搜索：&lt;/strong&gt;&lt;code&gt;false&lt;/code&gt; 为禁用，地址栏只可以用于解析 URL，此后可在「设置」&amp;gt;「搜索」，勾选「添加搜索栏到工具栏」，使用单独的搜索栏进行网络搜索。&lt;code&gt;true&lt;/code&gt; 为启用，指输入的不是正确 URL 时会跳转到搜索引擎进行搜索，缺点是有可能将输入的 URL 泄漏给搜索引擎，我个人还是觉得启用了方便一些；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;user_pref(&amp;quot;keyword.enabled&amp;quot;, true);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;记录浏览历史：&lt;/strong&gt;Arkenfox 修改为了 &lt;code&gt;false&lt;/code&gt;，我修改回了 &lt;code&gt;true&lt;/code&gt;；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;user_pref(&amp;quot;browser.formfill.enable&amp;quot;, true);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;阻止使用不安全加密方式的网站：&lt;/strong&gt;会导致某些网站无法访问，若发现有些网站出现问题，可尝将此项设为 false；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;user_pref(&amp;quot;security.ssl.require_safe_negotiation&amp;quot;, false);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;若上一项设置为了 &lt;code&gt;false&lt;/code&gt;，可选择将此项设为 &lt;code&gt;true&lt;/code&gt;，若访问使用不安全加密方式的网站时，会在地址栏的锁头图标上显示一个感叹号用于提醒；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;user_pref(&amp;quot;security.ssl.treat_unsafe_negotiation_as_broken&amp;quot;, true);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;启用 Public Key Pinning：&lt;/strong&gt;Arkenfox 设置为了 &lt;code&gt;2&lt;/code&gt; 强制启用，若使用杀毒软件，可能会受到影响，如果是的话，可以改回默认 &lt;code&gt;1&lt;/code&gt;；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;user_pref(&amp;quot;security.cert_pinning.enforcement_level&amp;quot;, 2);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;禁用跨站标识：&lt;/strong&gt;比如你从少数派点击 www.baidu.com 的链接点击访问百度网站，则百度可以识别到此次访问来自 &lt;code&gt;sspai.com&lt;/code&gt;，这两项设置为 &lt;code&gt;2&lt;/code&gt; 可禁止此行为，但会影响到很多网站的功能，比如一些视频网站无法播放视频，若影响到了使用，可改为 &lt;code&gt;0&lt;/code&gt;；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;user_pref(&amp;quot;network.http.referer.XOriginPolicy&amp;quot;, 0);
user_pref(&amp;quot;network.http.referer.XOriginTrimmingPolicy&amp;quot;, 0);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;禁用 DRM：&lt;/strong&gt;在前文提及过，有需要可启用；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;user_pref(&amp;quot;media.eme.enabled&amp;quot;, true);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;在关闭浏览器时删除浏览历史：&lt;/strong&gt;有需要可关闭；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;user_pref(&amp;quot;privacy.sanitize.sanitizeOnShutdown&amp;quot;, false);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;若上一项设置为了 &lt;code&gt;true&lt;/code&gt;，即自动删除历史，通过下面几项可选择删除的类别；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;user_pref(&amp;quot;privacy.clearOnShutdown.cache&amp;quot;, true); // 缓存
user_pref(&amp;quot;privacy.clearOnShutdown.downloads&amp;quot;, true); // 下载记录
user_pref(&amp;quot;privacy.clearOnShutdown.formdata&amp;quot;, true); // 网站数据
user_pref(&amp;quot;privacy.clearOnShutdown.history&amp;quot;, true); // 历史
user_pref(&amp;quot;privacy.clearOnShutdown.sessions&amp;quot;, true); // 打开的标签页状态
user_pref(&amp;quot;privacy.clearOnShutdown.cookies&amp;quot;, true); // Cookies
user_pref(&amp;quot;privacy.clearOnShutdown.offlineApps&amp;quot;, true); // 网站数据&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;阻止指纹识别，网站可以识别到访问者的浏览器版本，系统版本，语言等等，并利用这些数据建立起可识别的指纹以便进行跟踪，打开此项可以伪装部分参数，使网站更加难以建立可识别的指纹，此功能极有可能影响到网页浏览，并会会影响到很多浏览器的功能，比如时区被锁定在 UTC0，网站总是偏向于使用亮色主题等等，若介意的话，可以关闭。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;user_pref(&amp;quot;privacy.resistFingerprinting&amp;quot;, false);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;RFP letterboxing：&lt;/strong&gt;打开此项会使网页外部有一个边框（实际上是与当前窗口大小最接近的「常见」窗口大小），进一步阻止网站通过屏幕分辨率采集设备指纹，介意的话可以关闭。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;user_pref(&amp;quot;privacy.resistFingerprinting.letterboxing&amp;quot;, false);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;禁用 WebGL：&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; 为禁用，会极大地影响性能，建议设置为 &lt;code&gt;false&lt;/code&gt;；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;user_pref(&amp;quot;webgl.disabled&amp;quot;, false);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;启用 http3：&lt;/strong&gt;http3 使用 udp 连接，理论上更快，已知目前部分 google 的网站和使用 Cloudflare CDN 的网站都使用了 http3，但实际上很多运营商会对 udp 流量限速，导致 http3 的实际体验更差，建议禁用。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;user_pref(&amp;quot;network.http.http3.enable&amp;quot;, false);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你也可以订阅 Arkenfox 的 &lt;a href="https://github.com/arkenfox/user.js/releases.atom" target="_blank"&gt;RSS Feed&lt;/a&gt; 获取 Arkenfox 的更新日志。&lt;/p&gt;&lt;h3&gt;扩展推荐&lt;/h3&gt;&lt;p&gt;通过修改以上的参数，基本可以避免出现绝大多数问题，若想要更加舒适的浏览体验，还推荐安装一些扩展。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;若是比较看重隐私的话，则安装扩展应该遵循最少原则，只安装自己需要的扩展，尽量不要安装多余的扩展，因为安装的扩展越多，越容易建立起可识别的指纹。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;uBlock&lt;/strong&gt;&lt;a href="https://addons.mozilla.org/en-US/firefox/addon/ublock-origin" target="_blank"&gt;&lt;strong&gt; Origin&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;：&lt;/strong&gt;按照 uBlock Origin 开发者的说法，这个扩展并不是广告拦截扩展，而是一个高效地请求过滤工具，只是恰好起到了广告过滤的作用。不过要是推荐 Firefox 的去广告扩展，还是首推 uBlock Origin，相比于其他的的去广告扩展，它支持更多的过滤规则，且占用的资源极低。&lt;/p&gt;&lt;p&gt;uBlock Origin 已经内置了很多去广告规则，可以根据个人需求自行勾选.除了默认启用的规则，我个人推荐：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;在 「隐私」 分类中勾选 AdGuard Tracking Protection 和 AdGuard URL Tracking Protection，这两个规则提供了很多隐私增强相关的过滤项；&lt;/li&gt;&lt;li&gt;&lt;a href="https://easylist-downloads.adblockplus.org/easylistchina.txt" target="_blank"&gt;EasyList China&lt;/a&gt; 和 &lt;a href="https://raw.githubusercontent.com/cjx82630/cjxlist/master/cjx-annoyance.txt" target="_blank"&gt;CJX&amp;#x27;s Annoyance List&lt;/a&gt;：两个针对中文互联网环境的规则；&lt;/li&gt;&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/DandelionSprout/adfilt/master/LegitimateURLShortener.txt" target="_blank"&gt;Actually Legitimate &lt;/a&gt;URL&lt;a href="https://raw.githubusercontent.com/DandelionSprout/adfilt/master/LegitimateURLShortener.txt" target="_blank"&gt; Shortener Tool&lt;/a&gt;：这个规则可以去除 URL 中的一些无用的跟踪内容，有点类似于 &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/clearurls/" target="_blank"&gt;Clear&lt;/a&gt;URL&lt;a href="https://addons.mozilla.org/en-US/firefox/addon/clearurls/" target="_blank"&gt;s&lt;/a&gt; 这个扩展的功能，所以 ClearURLs 扩展就不需要单独安装了。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;另外值得一提的是，由于某些广告商的投诉，在国内网络环境下，Firefox 扩展商店中的一些去广告扩展已经无法安装，扩展商店主页也无法访问，请自行寻找方法，例如部分 Linux 发行版用户可以使用系统的包管理器从软件源安装，比如 Archlinux 可以用 &lt;code&gt;pacman -S firefox-uBlock-origin&lt;/code&gt; 命令为官方版的 Firefox 安装 uBlock Origin 扩展。&lt;/p&gt;&lt;p&gt;&lt;a href="https://addons.mozilla.org/en-US/firefox/addon/canvasblocker" target="_blank"&gt;&lt;strong&gt;CanvasBlocker&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;：&lt;/strong&gt;如果你在 user-overrides.js 中禁用了阻止指纹识别，则可以安装这个扩展作为替代，安装完好像也无需进行多余的设置，这个扩展提供了一些指纹保护措施，虽说保护效果不如浏览器原生的阻止指纹识别效果好，但对网站的影响更小。&lt;/p&gt;&lt;p&gt;&lt;a href="https://addons.mozilla.org/en-US/firefox/addon/cookie-autodelete" target="_blank"&gt;&lt;strong&gt;Cookie AutoDelete&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;：&lt;/strong&gt;顾名思义，自动删除 cookie，安装后在扩展设置页面勾选自动清理，对于不想要清理的网站在表达式列表中添加白名单即可，这个扩展相对于浏览器自带的自动清理功能，优点在于白名单支持通配符，比如想要对 google.com 的所有子域名添加白名单，只需添加一条 *.google.com 即可。&lt;/p&gt;&lt;p&gt;&lt;a href="https://addons.mozilla.org/en-US/firefox/addon/skip-redirect" target="_blank"&gt;&lt;strong&gt;Skip Redirect&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;：&lt;/strong&gt;链接自动跳转，一些网站在点击站外链接时，会经过一些中间页面，有时还需手动确认，有时甚至还会拦截它们认为 「危险」的链接，这个扩展可以解决这个问题，直接跳转到最终页面，省去了很多麻烦。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;网页翻译：&lt;/strong&gt;从 Chrome 切换到 Firefox 后最大的痛点，就是没有内置翻译功能，虽然 Firefox 有自家的 &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/firefox-translations/" target="_blank"&gt;翻译工具&lt;/a&gt;，但是还在测试阶段，且支持的语言很少，我也试过很多翻译扩展，感觉都不太好用，目前在用的是 &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/traduzir-paginas-web/" target="_blank"&gt;TWP&lt;/a&gt;，感觉相对来说比较好用，它在地址栏右上角添加了一个类似 Chrome 的翻译按钮，支持整页翻译，不过我很少用，我最常用的还是它的划词翻译功能，网页选取需要翻译的内容，就会弹出一个按钮，翻译选中的内容。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2022/11/07/article/da560b4514d3c1c578c0ed4bb82da23b" src="https://cdn.sspai.com/2022/11/07/article/da560b4514d3c1c578c0ed4bb82da23b"/&gt;&lt;/figure&gt;&lt;p&gt;还有一些我自用的扩展，可以根据自己需要安装，大部分大家都比较熟悉，就不一一介绍了。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://addons.mozilla.org/en-US/firefox/addon/tampermonkey" target="_blank"&gt;Tampermonkey&lt;/a&gt; 或 &lt;a href="https://addons.mozilla.org/en-Us/firefox/addon/violentmonkey" target="_blank"&gt;Violentmonkey&lt;/a&gt;：安装脚本；&lt;/li&gt;&lt;li&gt;&lt;a href="https://addons.mozilla.org/en-US/firefox/addon/bitwarden-password-manager" target="_blank"&gt;Bitwarden&lt;/a&gt;：密码管理器；&lt;/li&gt;&lt;li&gt;&lt;a href="https://addons.mozilla.org/en-US/firefox/addon/darkreader/" target="_blank"&gt;Dark Reader&lt;/a&gt;：深色模式；&lt;/li&gt;&lt;li&gt;&lt;a href="https://addons.mozilla.org/en-US/firefox/addon/ublacklist/" target="_blank"&gt;uBlacklist&lt;/a&gt;：屏蔽 google 搜索结果中的一些低质量网站；&lt;/li&gt;&lt;li&gt;&lt;a href="https://addons.mozilla.org/en-US/firefox/addon/vimium-c" target="_blank"&gt;Vimium C&lt;/a&gt;：使用 vim 快捷键浏览网页；&lt;/li&gt;&lt;li&gt;&lt;a href="https://addons.mozilla.org/en-US/firefox/addon/sponsorblock/" target="_blank"&gt;SponsorBlock&lt;/a&gt;：自动跳过 Youtube 视频中的赞助内容；&lt;/li&gt;&lt;li&gt;&lt;a href="https://addons.mozilla.org/en-US/firefox/addon/return-youtube-dislikes/" target="_blank"&gt;Return Youtube Dislike&lt;/a&gt;：显示 Youtube 视频的点踩数量。&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;关于 Firefox 移动端&lt;/h2&gt;&lt;p&gt;iOS 端的 Firefox 我没用过，不作评价；而且 iOS 端的浏览器因为 Apple 要求必须使用 WebKit 内核，所以基本上全都是 Safari 的套壳，纠结选择哪个浏览器意义不大。这里主要讨论的是 Android 版本。&lt;/p&gt;&lt;p&gt;Android 版本的 Firefox 被很多人诟病，也确实存在很多问题，比如功能缺失，官方版的 Firefox Android 不能访问 &lt;code&gt;about:config&lt;/code&gt; 界面修改高级选项，扩展安装也受限制。但是相比于 Firefox，我个人觉得 Android 版本的 Chrome 更加难用，而且完全不支持扩展。&lt;/p&gt;&lt;p&gt;虽然 Android 版 Firefox 支持安装扩展，但是只能安装官方提供的 &lt;a href="https://addons.mozilla.org/en-US/android/" target="_blank"&gt;少量扩展&lt;/a&gt;，如果想要安装列表以外的扩展怎么办呢？其实也有办法，Android 版 Firefox 的 &lt;a href="https://play.google.com/store/apps/details?id=org.mozilla.fenix" target="_blank"&gt;Nightly&lt;/a&gt; 版本提供了安装额外扩展的方式，不过比较麻烦。&lt;/p&gt;&lt;p&gt;首先，在电脑上访问 &lt;a href="https://addons.mozilla.org" target="_blank"&gt;Firefox 扩展商店&lt;/a&gt;，登录自己的帐号，鼠标放到右上角自己的昵称处，点击 「查看我的收藏集」，若没有收藏集就新建一个，点击进入收藏集，复制网页的 URL，后面会用到。&lt;/p&gt;&lt;p&gt;再回到主页，搜索自己喜欢的扩展，滚动到最下方，选择添加到自己刚才创建的收藏集，&lt;/p&gt;&lt;p&gt;来到 Android 端，打开 Firefox nightly，打开设置，找到最下方 「关于 Firefox」，点击进入，多次点击 Firefox logo，直到提示 「已启用调试菜单」。&lt;/p&gt;&lt;p&gt;回到设置页面，就会发现在原来的 「附加组件」下方多出了一个 「自定义附加组件收藏集」，点开，就会提示输入用户 ID 和收藏集名称和之前复制的收藏集 URL。&lt;/p&gt;&lt;p&gt;打个比方，如果是 &lt;code&gt;https://addons.mozilla.org/zh-CN/firefox/collections/123456789/name&lt;/code&gt;（只是打比方，并不是真实链接），那么用户 ID 就是 &lt;code&gt;123456789&lt;/code&gt;，收藏集名称就是 &lt;code&gt;name&lt;/code&gt;。&lt;/p&gt;&lt;p&gt;填好后，保存重启应用，点开附加组件页面，等它刷新就能发现，想要安装的扩展就已经在列表里面了。不过扩展安装后可能不会正常工作，请自行测试。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/07/b036e6cc6924ddc383ee5de2fcbe3cf9.jpg" src="https://cdn.sspai.com/2022/11/07/b036e6cc6924ddc383ee5de2fcbe3cf9.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;但是就算是 Nightly 版本的 Firefox，也没办法进入 &lt;code&gt;about:config&lt;/code&gt; 页面。这就要提到第三方的 Fork 版本了。&lt;/p&gt;&lt;p&gt;首先是 &lt;a href="https://github.com/fork-maintainers/iceraven-browser" target="_blank"&gt;Iceraven&lt;/a&gt;，基于 Firefox Android 的开源代码 &lt;a href="https://github.com/mozilla-mobile/fenix" target="_blank"&gt;fenix&lt;/a&gt; 构建，你可以从 &lt;a href="https://github.com/fork-maintainers/iceraven-browser/releases" target="_blank"&gt;Github release&lt;/a&gt; 下载安装包，默认集成了一个很大的扩展列表，绝大部分常用的扩展都能找到，省去了自己添加收藏集的麻烦了，同时也可以访问 &lt;code&gt;about:config&lt;/code&gt; 修改高级选项。但是 Iceraven 的维护者对于版本更新很不积极，经常落后官方版本很多。&lt;/p&gt;&lt;p&gt;&lt;a href="https://f-droid.org/zh_Hans/packages/org.mozilla.fennec_fdroid/" target="_blank"&gt;Fennec F-Droid&lt;/a&gt; 是 &lt;a href="https://f-droid.org/zh_Hans/" target="_blank"&gt;F-Droid&lt;/a&gt; 商店基于 Fenix 代码构建的浏览器，更新进度基本与官方一致，可能稍有落后，构建时移除了非自由部分和遥测，功能与官方版基本一样，不同的是支持进入 about:config 界面修改高级选项，同时也支持自定义附加组件收藏集。值得一提的是，不知什么原因，Fennec 安装扩展后，扩展的设置页面默认都是英文的，有些扩展可以在自己的设置页面修改语言，比如 Tampermonkey，有些就改不了。&lt;/p&gt;&lt;p&gt;虽然 Iceraven 和 Fennec 可以通过 &lt;code&gt;about:config&lt;/code&gt; 修改高级设置，Arkenfox 修改了上百个选项，照着 &lt;code&gt;user.js&lt;/code&gt; 在小屏幕上一个个修改很是难受，有没有什么更好的方法呢？&lt;/p&gt;&lt;p&gt;那么这就要提到 &lt;a href="https://f-droid.org/zh_Hans/packages/us.spotco.fennec_dos/" target="_blank"&gt;Mull&lt;/a&gt; 了，这个浏览器基于上文提到的 Fennec，但是已经默认集成了 Arkenfox 的高级设置，少数的需要覆盖的选项可以自行修改，省去了很多麻烦。&lt;/p&gt;&lt;p&gt;不过值得一提的是，和 Arkenfox 一样，Mull 默认启用了阻止指纹识别的选项，在是在移动端上开启这一选项后会使界面刷新率锁在 60Hz，这是个已知 bug，如果使用高刷手机且比较介意的话可以关闭。另外我还发现 Violentmonkey 扩展在 Mull 上不能正常工作，Tampermonkey 就可以正常工作，这两个扩展在 Fennec 上都可以正常使用的，不知道是什么原因。&lt;/p&gt;&lt;h2&gt;结语&lt;/h2&gt;&lt;p&gt;以上基本就是我对于 Firefox 的使用心得，其实还有一些没有讲到，比如通过自定义 CSS 文件来修改 Firefox 外观，我没有深入研究过，就不细讲了，这里只分享一个包含很多现成的 CSS 的 &lt;a href="https://github.com/MrOtherGuy/firefox-csshacks" target="_blank"&gt;Github Repo&lt;/a&gt;。感兴趣可以自己研究，文章到这里已经接近一万字了，如果文章发出去，真的有人看到这里的话，我很是感激。&lt;/p&gt;&lt;p&gt;&amp;gt; 下载 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;少数派 2.0 客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，解锁全新阅读体验 📰&lt;/p&gt;&lt;p&gt;&amp;gt; 实用、好用的 &lt;a href="https://sspai.com/mall" target="_blank"&gt;正版软件&lt;/a&gt;，少数派为你呈现 🚀&lt;/p&gt;&lt;/div&gt;</description><author>so1ar</author><guid>https://sspai.com/post/76688</guid><pubDate>Tue, 08 Nov 2022 06:26:10 GMT</pubDate></item><item><title>App Store 对订阅功能再出手：这是你需要关注的新变化</title><link>https://sspai.com/post/76669</link><description>&lt;div&gt;&lt;p&gt;说起 App Store 的订阅模式，最早可以追溯到 2011 年；彼时 Apple &lt;a href="https://www.apple.com.cn/newsroom/2011/02/15Apple-Launches-Subscriptions-on-the-App-Store/" target="_blank"&gt;宣布&lt;/a&gt;面向 App Store 中所有基于内容的应用程序的发行商提供全新的订阅服务，包括杂志、报纸、视频、音乐等。&lt;/p&gt;&lt;p&gt;掐指一算，App Store 为开发者和用户提供的订阅制度，已经有长达十年之久的历史；而在这一举措推出的 5 年之后，App Store 的订阅模式终于在 2016 年迎来了重大更新：时任 Apple 全球营销高级副总裁的 Phil Schller 在 WWDC 全球开发者大会开幕前夕接受了&lt;a href="https://www.theverge.com/2016/6/8/11880730/apple-app-store-subscription-update-phil-schiller-interview" target="_blank"&gt;外媒 The Verge 的采访&lt;/a&gt;，宣布 App Store 进入 2.0 时代。全新 App Store 的重要内容之一，就是向所有类型的 app 开放了订阅付费模式；同时，对于订阅时长超过一年的用户，开发者收入将由第一年的订阅价格的 70% 增加至 85%。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/08/a451c2ce521304c425f5afa5754bd0cf.jpg" src="https://cdn.sspai.com/2022/11/08/a451c2ce521304c425f5afa5754bd0cf.jpg"/&gt;&lt;figcaption&gt;图源 The Verge。&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;App Store 进入 2.0 时代，不仅为开发者提供了更高并且可持续的收入，也让用户在购买 app 时有了更加灵活的付费模式。当然，这一新的订阅模式在推行之初，也遭受了不少批评；对于订阅模式开放可能带来的滥用、付费成本增加等问题，都是用户与行业人士持续讨论和质疑的话题。&lt;/p&gt;&lt;p&gt;Apple 自然也意识到了这些潜在问题的存在，因此在 App Store 迈入 2.0 时代至今的 6 年多时间里，这项全新的订阅模式也经过了多次调整。&lt;/p&gt;&lt;p&gt;比如在 2019 年推出 iOS 13 之后，用户删除 app 时系统会提醒用户当前删除的 app 存在仍然有效的订阅服务，并提醒用户取消续订该服务；在 2020 年底，App Store 更新支持了向家庭成员共享订阅服务的功能，开发者可以直接允许用户向家庭成员共享当前订阅服务、或者推出单独的支持家庭共享的订阅项目；在同一个时间段，App Store 面向开发者推出了「&lt;a href="https://developer.apple.com/cn/news/?id=g20wyc9c" target="_blank"&gt;订阅优惠代码&lt;/a&gt;」，这种新的兑换码种类在有效时长、生成数量、优惠价格等方面都有更多的灵活性，能够帮助开发者更加平稳地将用户迁移到订阅计划中来，同时让不同用户享受到更加合理的优惠价格。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/08/2a5d4785291401b7b1d94be206e15260.png" src="https://cdn.sspai.com/2022/11/08/2a5d4785291401b7b1d94be206e15260.png"/&gt;&lt;figcaption&gt;删除 app 时会提示管理订阅项目。&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;而在今年 5 月，App Store 又有了一项新的功能调整：订阅通知。不过，这项功能最开始仅在海外推出，直到上周才在中国大陆地区正式上线；这项新的调整生效之后，还在海外用户中引起了一阵负面的反馈与评价。要想知道海外用户的争议之处，不妨先让我们看看订阅通知到底做了什么调整。&lt;/p&gt;&lt;p&gt;根据 &lt;a href="https://developer.apple.com/cn/news/?id=tpgp89cl" target="_blank"&gt;Apple 开发者网站的消息显示&lt;/a&gt;，订阅通知的主要更新如下：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;当开发者提高订阅服务的价格时，需要用户同意才会在当前周期的订阅服务到期之后自动续订，否则用户订阅将被终止。&lt;/li&gt;&lt;li&gt;在特定情形下则不需要用户同意，除非用户主动取消，否则当前订阅将自动续订：非年度订阅价格上调需要不超过 5 美元和 50% (同时满足) / 年度订阅价格上调不超过 50 美元和 50% (同时满足)，开发者每年的提价次数不超过 1 次，且在法律允许的范围内。&lt;/li&gt;&lt;li&gt;不管是上述何种情形，用户都将收到来自 Apple 针对 app 订阅服务价格即将上涨的通知，包含邮件、推送通知、app 内消息等途径。&lt;/li&gt;&lt;li&gt;根据 &lt;a href="https://help.apple.com/app-store-connect/?lang=zh-cn#/devc9870599e" target="_blank"&gt;App Store Connect 帮助文档&lt;/a&gt;所示，如果用户正在以优惠后的价格订阅服务——比如订阅优惠代码——那么在订阅优惠代码有效的当前订阅周期结束之后，用户将以上调之前相同周期的常规价格继续订阅当前服务，以确保系统提前至少 30 天发送价格上调通知或询问是否同意新价格。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;接下来就以具体的例子，让我们更加详细地了解一下 App Store 的这项变化。&lt;/p&gt;&lt;p&gt;以近期&lt;a href="https://www.macrumors.com/2022/10/24/apple-price-increase-services/" target="_blank"&gt;宣布上调订阅价格的 Apple One 订阅服务&lt;/a&gt;为例。Apple 在美国当地时间 10 月 24 日宣布 Apple One 高级订阅方案的价格由原来的 29.95 美元上调至 32.95 美元，根据 App Store 订阅通知的相关规定，Apple 也在第一时间向我发送了邮件通知。而由于 Apple One 的订阅价格调整没有超过 5 美元、且涨幅小于 50% ((32.95-29.95)/32.95≈9%)，因此 Apple 只向我发送了这一价格变化的相关通知，并没有询问我是否需要允许价格上调就继续为我保留和订阅了该项服务。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/07/934fd3b30c1566dd4f38a7bd32baee67.png" src="https://cdn.sspai.com/2022/11/07/934fd3b30c1566dd4f38a7bd32baee67.png"/&gt;&lt;/figure&gt;&lt;p&gt;不过，虽然我当前没有享受任何优惠订阅 Apple One 服务；但是由于续订日期为 10 月 25 日，距离 Apple 宣布该项措施仅有一日之隔，因此我在 10 月 25 日续订 Apple One 时仍然以 29.95 美元的价格完成了自动续订，同时 App Store 显示我在 11 月 25 日续订 Apple One 的价格为 32.95 美元。&lt;/p&gt;&lt;p&gt;可以看出，App Store 对于订阅价格调整的处理方式算是比较合理，为用户预留了充足的决定和调整时间。同时对于用户而言订阅管理的体验也有相应保证，毕竟在面对一项长期且高频使用的订阅服务时，在确保享有服务调整的知情权的同时又不需要繁琐的操作和确认步骤，不会对用户造成太多干扰。&lt;/p&gt;&lt;p&gt;比如近期除了 Apple One，Netflix、Spotify、Disney+、YouTube Premium 等都宣布了即将或在未来调整订阅服务价格的相关举措，相信不少人或多或少都订阅了其中的多项服务，也都需要保留其中的大多数订阅项目；如果每一项服务的调整都要确认一遍的话，确实也挺麻烦；而现在用户仅需对于少数不需要保留的服务操作即可。&lt;/p&gt;&lt;p&gt;不过，App Store 的这项举措引起的负面评论也源于此。在此之前，如果一项 app 的订阅服务需要上调价格，那么需要用户主动同意之后，服务才会保持续订状态，否则订阅将会被取消和终止。而现在在很多情形之下，用户可能会在无形之中以更高的价格订阅了自己不想继续保留的服务，也就相当于将用户续订服务的主动权削弱，也许会增加用户管理订阅服务的学习和使用成本。&lt;/p&gt;&lt;p&gt;The Verge 的新闻记者 Mitchell Clark &lt;a href="https://www.theverge.com/2022/5/16/23078313/apple-app-store-subscription-price-increase-permission-rules" target="_blank"&gt;提出&lt;/a&gt;，如果 App Store 能够提供选项，让用户决定是否需要在订阅服务涨价时主动做出选择，似乎是一种更好的处理方式。对于更加在意使用体验与便利性的用户而言，他们可以选择始终续订 app 服务，而不需要在价格上调时重新确认；而对价格更为敏感的用户而言，也可以选择原有的订阅通知方案，不管价格上调多少，都需要主动确认才可继续保有订阅服务。&lt;/p&gt;&lt;p&gt;可以肯定的是，Mitchell 提出的这项方案是一个合理的选择，虽然我们无法确定 Apple 未来是否会有类似修改。不过，我们也无法断言这项建议与 Apple 已经推出的这项新的举措而言，究竟孰优孰劣，就像上面提到的一样，不同的用户对于订阅管理必然会有不同的个人倾向和偏好。&lt;/p&gt;&lt;p&gt;从我个人的感受和需求而言，App Store 的这项变化没有造成太大影响；因为我在选择订阅时已经算是比较谨慎了，因此即使遇到如 Apple One 这样订阅价格上调的情形，理论上也不太会需要频繁做出决定和操作。&lt;/p&gt;&lt;p&gt;但是，还有一种更多的情况是许多用户也许会为了试用某款 app，选择以月度或者更短的周期订阅其服务，通过若干个周期的尝试之后再决定是否长期订阅。对于这种情况而言，用户除了需要更谨慎地选择订阅试用服务，也要更加全面地了解和掌握管理订阅项目的方式和方法。&lt;/p&gt;&lt;p&gt;Apple 也提供了足够多且直观的方式和方法，帮助我们管理订阅服务；比如除了上述提到删除 app 时系统会主动提醒用户管理和取消对应的订阅服务，我们也可以从系统的 Apple ID 设置或者 App Store 的设置页面，以较短的路径到达订阅管理页面。此外，即使来自第三方 app 的订阅服务没有调整价格，Apple 也会在每次服务续订之前，通过邮件等形式主动告知用户，并注明续订的价格。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/07/9e2059e87e9492135e10863f67f4c077.png" src="https://cdn.sspai.com/2022/11/07/9e2059e87e9492135e10863f67f4c077.png"/&gt;&lt;/figure&gt;&lt;p&gt;借助庞大的 App Store 应用生态，我们也能找到非常多与订阅管理相关的 app，它们提供了更加详细的订阅数据报告、更加丰富的订阅提醒通知，都能帮助我们及时更新、取消不需要的订阅服务，获取自己的订阅项目支出情况。比如我们此前介绍过的 &lt;a href="https://sspai.com/post/75429" target="_blank"&gt;Pandora&lt;/a&gt;、&lt;a href="https://sspai.com/post/58679" target="_blank"&gt;Bobby&lt;/a&gt; 等等，都是这类工具的好选择。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/07/78f60e5aa16b19d7ace780d76d9cbfd1.jpg" src="https://cdn.sspai.com/2022/11/07/78f60e5aa16b19d7ace780d76d9cbfd1.jpg"/&gt;&lt;figcaption&gt;Pandora 截图，来自开发者。&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Notion、Airtable 甚至是 Numbers、日历这类工具也能成为我们管理订阅服务的好帮手，比如我们此前发布的&lt;a href="https://sspai.com/post/57337" target="_blank"&gt;这篇文章&lt;/a&gt;就介绍了如何用 Notion 强大的自定义能力制作一个订阅服务数据库。这些工具和服务不仅能帮我们厘清 App Store 中的订阅项目，对于 App Store 以外提醒渠道和能力更弱的第三方订阅项目，能够起到更加显著的提示和管理效果。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/11/07/880596ceb5a3cc3dbff03d259fd5db4b.png" src="https://cdn.sspai.com/2022/11/07/880596ceb5a3cc3dbff03d259fd5db4b.png"/&gt;&lt;/figure&gt;&lt;p&gt;换个角度而言，由于 App Store 对于订阅服务上调不需要用户确认的情形提出了严格的限制条件——比如每年只允许调价一次——这能防止开发者恶意持续性地小幅上调订阅价格，骗取用户的订阅费用等等行为，这在为用户提供一定便利性的同时，也有效地保障了用户的相关权益不受侵害。&lt;/p&gt;&lt;p&gt;反过来说，对于更多寻求公平竞争开发者而言，其他开发者的恶意调价行为被限制在某种程度上也是一件好事。而在产品层面，他们也将更加谨慎、合理地制定订阅服务的价格。&lt;/p&gt;&lt;p&gt;在面对这项新的举措时开发者需要做的，则是进一步确保自己的 app 在 Apple 提供的邮件、删除 app 提醒等通知之外，给予用户充分的订阅费用调整提示；继 App Store 在去年放宽开发者获取用户联系信息的&lt;a href="https://sspai.com/post/68571" target="_blank"&gt;相关政策&lt;/a&gt;之后，这些新的条款和举措都是开发者可以善加利用以触达用户的手段。这些处理方式不仅能让自己的产品政策更加完善，更加全面地通知用户相信也能在更多程度上降低自己的售后压力。&lt;/p&gt;&lt;p&gt;总的来说，虽然此次 App Store 只是在订阅功能上推出了一个小的变化，但却可能对开发者未来在产品中推行、调整订阅模式产生重要影响，开发者需要更加全面和谨慎地考虑 app 的收费方案与模式，同时也将向用户提供更为合理的付费计划，帮助建立更加完善、健全的产品机制，稳定用户评价与口碑。&lt;/p&gt;&lt;p&gt;从用户的角度来看，这样的调整方式自然是有利也有弊。有利之处在于，在给予用户充分的知情权的同时，也给了像我这样对于订阅管理的便利性抱有偏好的用户更好的体验；但同时也要承认这样的改变会增加部分用户尤其是像长辈群体更多的学习和使用成本。&lt;/p&gt;&lt;p&gt;当然不管 App Store 未来还将在订阅功能上推出何种举措，培养良好的订阅管理意识和习惯都是对用户来说非常重要的一件事；因为在 App Store 之外，还有更多更复杂的订阅模式和机制可能需要我们面对，只有这样我们才能在合理享受订阅模式带来的灵活性的同时，甄别不合理的订阅行为，保护我们作为消费者的合法权益。也希望在不远的将来能够看到 App Store 继续完善订阅功能，让开发者和用户持续从中受益，共同创建良好的应用市场环境与秩序。&lt;/p&gt;&lt;/div&gt;</description><author>waychane</author><guid>https://sspai.com/post/76669</guid><pubDate>Tue, 08 Nov 2022 03:32:48 GMT</pubDate></item><item><title>马斯克宣布 Twitter 禁止未经标注的模仿账号</title><link>https://sspai.com/post/76689</link><description>&lt;p&gt;11 月 7 日，马斯克宣布所有不标注为「模仿」的冒充他人的 Twitter 账号均会遭到永久封禁。此事发生后两小时，Sarah Silverman、Kathy Griffin 等曾将自己已认证的账号头像和名称改为 Elon Musk 进行模仿的喜剧演员，称自己收到了暂时封禁通知。Twitter 的社区规范此前就有规定，称模仿账号应明确说明账号与被模仿对象没有关系，而本次管理显然更加严格。Elon Musk 在推文中进一步说明，该规定是为了防止「恶意欺骗」。&lt;/p&gt;&lt;p&gt;值得一提的是，同期被封禁的还有一个明确标注了「模仿」，并有 230 万关注者的 Elon Musk 模仿账号。&lt;a href="https://arstechnica.com/tech-policy/2022/11/musk-announces-twitter-ban-on-unlabeled-parody-after-celebs-impersonate-him/" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;figure&gt;&lt;img alt="boxcnodEC7uFcINU7EMYOaphE3c" data-original="https://cdn.sspai.com/editor/u_/cdkqo6tb34tcdjag432g" src="https://cdn.sspai.com/editor/u_/cdkqo6tb34tcdjag432g"/&gt;&lt;/figure&gt;&lt;h3&gt;HBO 宣布取消《西部世界》&lt;/h3&gt;&lt;p&gt;11 月 5 日，HBO 宣布取消《西部世界》系列。《西部世界》于 2016 年首次于 HBO 亮相，至今共拍摄 4 季作品，最近一期于今年 8 月结束。该作品以西部元素以及高科技为核心元素进行展开，并获得了 54 项艾美奖提名。据外媒分析，本次需求剧集的原因很可能是因为 HBO 收视率持续降低，导致收益和开支无法平衡，对此官方暂未作出明确回应。&lt;a href="https://www.npr.org/2022/11/05/1134542805/hbo-cancels-westworld" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;figure&gt;&lt;img alt="boxcnBrT9i8aV4uAVsn8yMWm7je" data-original="https://cdn.sspai.com/editor/u_/cdkqo6tb34tcd6q36a00" src="https://cdn.sspai.com/editor/u_/cdkqo6tb34tcd6q36a00"/&gt;&lt;/figure&gt;&lt;h3&gt;Netflix 手游「怪奇物语：解谜奇谭」重新上线&lt;/h3&gt;&lt;figure&gt;&lt;img alt="boxcnezqb5mPCi15KxOF4J5MeOH" data-original="https://cdn.sspai.com/editor/u_/cdkqo75b34tcdb5tu02g" src="https://cdn.sspai.com/editor/u_/cdkqo75b34tcdb5tu02g"/&gt;&lt;/figure&gt;&lt;p&gt;近日，Netflix 重新上架消除类游戏「怪奇物语：解谜奇谭」。该游戏目前已支持使用第 4 季剧集角色进行游玩，也增加了新的玩法。此前，该游戏于 2021 年在 App Store 与 Google Play 上首发，但随着游戏开发商被 Netflix 收购后，游戏被下架。重新上架后，游戏经过了大幅度调整，并正式转为 Netflix 会员限定。此外，Netflix 称正在怪奇物语的世界观下开发一款 VR 游戏，预计在 2023 年登陆主流平台。&lt;a href="https://techcrunch.com/2022/11/06/netflix-is-bringing-back-stranger-things-puzzle-tales-with-new-gameplay/" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;索尼半导体发布手机图像传感器新品牌「光喻」LYTIA&lt;/h3&gt;&lt;p&gt;索尼半导体解决方案集团于 11 月 7 日正式推出手机图像传感器全新品牌「光喻」LYTIA，旨在通过其先进的手机图像传感器实现超越过往的影像创作体验。从「图像」「感知」「智能」三方位优化手机拍摄体验。索尼表示，创建「光喻」品牌是为了以一种更易于理解的方式传达索尼移动图像传感器所承载的世界观和价值，「光喻」将通过多种技术实现高画质照片和视频的拍摄，致力于构建一个让每位用户都能享受充满创造力的未来。&lt;a href="https://www.sony.com.cn/content/sonyportal/zh-cn/cms/newscenter/techonology/2022/2022-11-07.html.html" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;figure&gt;&lt;img alt="boxcn13Q3acCPLaRoXCp21SJsgg" data-original="https://cdn.sspai.com/editor/u_/cdkqo7lb34tcdtg9eueg" src="https://cdn.sspai.com/editor/u_/cdkqo7lb34tcdtg9eueg"/&gt;&lt;/figure&gt;&lt;h3&gt;工信部公开征求对《关于促进网络安全保险规范健康发展的意见（征求意见稿）》的意见&lt;/h3&gt;&lt;p&gt;工信部于 11 月 7 日发文，针对此前同银保监会起草的《关于促进网络安全保险规范健康发展的意见（征求意见稿）》公开征求意见。该意见稿提出，完善网络安全保险政策制度。加强网络安全产业政策对网络安全保险的支持，推动网络安全技术服务赋能网络安全保险发展，引导关键信息基础设施保护、新兴融合领域网络安全保障等充分运用网络安全保险。加强保险业政策对网络安全保险的支持，指导网络安全保险创新发展，引导开发符合网络安全特点规律的保险产品。推动健全完善财政政策，鼓励提供保险减税、保险购买补贴等政策。&lt;a href="https://www.miit.gov.cn/gzcy/yjzj/art/2022/art_d7492c4755a74e87a07f626451d0f036.html" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;看看就行的小道消息&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;近日，知名爆料人 OnLeaks 和 Zoutons 公布了一组小米 13 Pro 的高清渲染图纸。根据图片信息显示，该手机采用了中部挖空双曲面屏，并搭载了后置三摄的镜头组合，整机尺寸约为 163.0 x 74.6 x 8.8mm。此外，前者还透露小米 13 Pro 在印度地区的售价为 66800 卢比，计划于 12 月 30 日正式发布。&lt;a href="https://www.androidauthority.com/xiaomi-13-pro-renders-leak-check-out-that-camera-bump-3231767/" target="_blank"&gt;来源&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure&gt;&lt;img alt="boxcnndyJgiXykoc6fKTSXUfFbe" data-original="https://cdn.sspai.com/editor/u_/cdkqo7lb34tcdtg9euf0" src="https://cdn.sspai.com/editor/u_/cdkqo7lb34tcdtg9euf0"/&gt;&lt;/figure&gt;&lt;ul&gt;&lt;li&gt;今日，9to5Mac 发现 Apple 内部正在进行 iOS 16.1.1 的开发，并计划在该版本中对其广告框架 SKAdNetwork 的 Bug 进行修复。&lt;a href="https://9to5mac.com/2022/11/07/ios-16-1-1-testing/" target="_blank"&gt;来源&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;少数派的近期动态&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;🎵 用现代耳机致敬经典 iPod，少数派 × SONGX 联名耳机 &lt;a href="https://sspai.com/page/pipods" target="_blank"&gt;PiPods 正式上线众筹&lt;/a&gt;。&lt;/li&gt;&lt;li&gt;🛒 满赠红包封面，还有周边上新，少数派商店&lt;a href="https://sspai.com/post/76409" target="_blank"&gt;双十一活动&lt;/a&gt;已经开启。&lt;/li&gt;&lt;li&gt;🗞 会员计划栏目派周报总结每周会员内容，并讨论近期科技热点，上周话题是&lt;a href="https://sspai.com/prime/story/pi-weekly-016" target="_blank"&gt;推特对认证徽章收费&lt;/a&gt;。&lt;/li&gt;&lt;li&gt;✍️ 我们制作了一份《&lt;a href="https://sspai.com/post/76154" target="_blank"&gt;少数派创作手册&lt;/a&gt;》，编纂和更新了少数派与内容创作相关的流程和规范，欢迎与我们继续共创。&lt;/li&gt;&lt;li&gt;🎙 少数派与知名播客制作人婉莹和甜食一道，为每一位想要用声音表达的创作者，准备了新栏目《&lt;a href="https://sspai.com/post/75849" target="_blank"&gt;100 小时后请叫我播客主理人&lt;/a&gt;》，现正上架优惠中。&lt;/li&gt;&lt;li&gt;⬆️ 超频你的生产力，来看看&lt;a href="https://sspai.com/post/76551" target="_blank"&gt;这份人人都能学会的 PPT 制作方法论&lt;/a&gt;。&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;你可能错过的文章&lt;/h2&gt;&lt;p&gt;&amp;gt; 下载 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;少数派 2.0 客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，解锁全新阅读体验 📰&lt;/p&gt;&lt;p&gt;&amp;gt; 实用、好用的 &lt;a href="https://sspai.com/mall" target="_blank"&gt;正版软件&lt;/a&gt;，少数派为你呈现 🚀&lt;/p&gt;</description><author>少数派编辑部</author><guid>https://sspai.com/post/76689</guid><pubDate>Tue, 08 Nov 2022 01:12:20 GMT</pubDate></item></channel></rss>