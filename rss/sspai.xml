<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>少数派</title><link>https://sspai.com</link><description>少数派RSS Feed-文章完整抓取版</description><language>zh-CN</language><managingEditor>contact@sspai.com (少数派)</managingEditor><lastBuildDate>Thu, 31 Aug 2023 05:00:07 GMT</lastBuildDate><generator>RSSEngine powered by PyRSS2Gen-1.1.0</generator><image><url>https://i0.hdslb.com/bfs/face/bbe80dc05f67e9543a33b067764227b02504bfa0.jpg</url><title>icon</title><link>https://i0.hdslb.com/bfs/face/bbe80dc05f67e9543a33b067764227b02504bfa0.jpg</link></image><item><title>导出多年微信聊天记录，我用可视化分析了出自己的口头禅</title><link>https://sspai.com/post/82577</link><description>&lt;div&gt;&lt;p&gt;&lt;strong&gt;Matrix 首页推荐&lt;/strong&gt; &lt;/p&gt;&lt;p&gt;&lt;a href="https://sspai.com/matrix" target="_blank"&gt;Matrix&lt;/a&gt; 是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。 &lt;br/&gt;文章代表作者个人观点，少数派仅对标题和排版略作修改。&lt;/p&gt;&lt;hr/&gt;&lt;h2&gt;前言&lt;/h2&gt;&lt;p&gt;微信，承载了多数人生活的方方面面。从亲人好友之间的沟通，到公司事情的交代。对于大多数人来说，已经活在了微信的世界里了。那么如果把微信的聊天记录导出，做一个聊天记录分析，用全局视角来分析分析聊天记录，会有怎样一种有趣的收获呢？这篇文章将会以导出微信聊天记录为切入点，结合数据分析学科的知识，对微信进行聊天记录进行分析。本文分为十一个小节，读者可以根据自己的需求跳转感兴趣的章节阅读。&lt;/p&gt;&lt;h3&gt;数据分析效果预览&lt;/h3&gt;&lt;p&gt;为了能让读者对本文实现的效果有最直观的感受，本文中有四个实践案例，最后生成的图片如下：&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/3ad683c00b9770ecd1c5960f71fcb00b.png" src="https://cdn.sspai.com/2023/08/31/3ad683c00b9770ecd1c5960f71fcb00b.png"/&gt;&lt;figcaption&gt;分析群聊/私聊生成高频词的词云&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/65eab89ce07d957b6884c6dc5bd76d61.png" src="https://cdn.sspai.com/2023/08/31/65eab89ce07d957b6884c6dc5bd76d61.png"/&gt;&lt;figcaption&gt;词云添加指定形状的遮罩，并自定义任意背景颜色&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/35b249ceed697048efac823ea1e29566.png" src="https://cdn.sspai.com/2023/08/31/35b249ceed697048efac823ea1e29566.png"/&gt;&lt;figcaption&gt;分析群聊/私聊，统计发送和接收到的所有表情或者单词数量，生成二维柱状图&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/6854851444c97d63225cf37d7f0fbb87.png" src="https://cdn.sspai.com/2023/08/31/6854851444c97d63225cf37d7f0fbb87.png"/&gt;&lt;figcaption&gt;分析每天聊天记录数量，生成不同配色方案的聊天频率热力图&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;文章阅读提示&lt;/h3&gt;&lt;p&gt;本文大体可以分为两个部分：微信聊天记录导出和微信聊天记录分析。获取微信微信聊天数据的加密密钥，对于 arm CPU 构架的 MacBook 用户来说比较简单，Intel CPU 构架的用户需要多一些耐心，根据文章教程逐步操作，相信最后也一定能获取到对应的密钥。&lt;/p&gt;&lt;p&gt;微信聊天记录分析部分，使用 Python 代码来做数据清洗和图片生成，需要读者稍微懂一些 Python 方面的知识。&lt;/p&gt;&lt;p&gt;文章中所有的代码不一定需要复制下来运行，文章中出现的代码或者截图，只是方便读者配合文字阅读理解。在 &lt;a href="https://github.com/JamesHopbourn/WeChatDataAnalysis/tree/master/" target="_blank"&gt;JamesHopbourn/WeChatDataAnalysis&lt;/a&gt; 代码仓库中提供了本文需要的全部代码和素材。&lt;/p&gt;&lt;h2&gt;获取微信聊天记录数据库加密密钥&lt;/h2&gt;&lt;p&gt;前置知识：微信使用 SQLite 数据库在本地保存聊天记录，为了保证聊天记录不被轻易窃取，微信基于 SQLCipher 封装了腾讯自己的 &lt;a href="https://github.com/Tencent/wcdb" target="_blank"&gt;WCDB&lt;/a&gt; 数据库框架。为了能够导出微信聊天记录，就需要通过技术手段获取数据库的加密密钥，这就是本小结需要达成的目标。&lt;/p&gt;&lt;p&gt;准备工作：为了全面分析聊天记录，我们先要进行数据同步。将移动设备上的聊天记录都同步到 MacBook 上。在移动设备上点击「设置 &amp;gt; 通用 &amp;gt; 聊天记录迁移与备份 &amp;gt; 迁移」并根据实际情况选择「迁移全部聊天记录」或者「迁移指定聊天记录」。以笔者的 52GB 聊天记录为例，花了 50 分钟左右。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/a3cc0a8bf8cac344637a6e7207884a98.png" src="https://cdn.sspai.com/2023/08/31/a3cc0a8bf8cac344637a6e7207884a98.png"/&gt;&lt;/figure&gt;&lt;p&gt;目前 macOS 平台有 Intel 和 arm 两种架构，两个构架使用的获取密钥的方法不同，请根据自己的 MacBook CPU 构架，选择对应的解密方式操作。&lt;/p&gt;&lt;h3&gt;arm CPU 架构获取密钥方法（简易方法）&lt;/h3&gt;&lt;p&gt;通过阅读百灵鸟安全团队发布的文章「&lt;a href="https://mp.weixin.qq.com/s?__biz=MzU0NzczMDg4Mg==&amp;amp;mid=2247483863&amp;amp;idx=1&amp;amp;sn=ae6d1069a517e0176822efad9835dbd3&amp;amp;chksm=fb48a57acc3f2c6c412cf96a1dececc42ec8853931386f0988b404c9df92b0d2f3d9ee8f5491&amp;amp;mpshare=1&amp;amp;scene=1&amp;amp;srcid=0818f2cWp0w1sgFkUmhGL4Oe&amp;amp;sharer_sharetime=1692294905463&amp;amp;sharer_shareid=92340da57488f8262c6c5e5b5e83ac2b#rd" target="_blank"&gt;打造 macOS 下最强的微信取证工具&lt;/a&gt;」，我们可以知道获取微信数据库密钥的方法。文章的后半部分，作者还开发了一个可用于获得密钥的程序，下载并运行此程序便可直接得到密钥。下一步，我们将测试这个程序，看看其效果如何。&lt;/p&gt;&lt;p&gt;访问 &lt;a href="https://github.com/kekeimiku/PointerSearcher-X" target="_blank"&gt;PointerSearcher-X&lt;/a&gt; 发布的 &lt;a href="https://github.com/kekeimiku/PointerSearcher-X/releases/tag/v0.2.0" target="_blank"&gt;_ptrsx-dumper&lt;/a&gt;_ 二进制文件，点击第一个 &lt;a href="https://github.com/kekeimiku/PointerSearcher-X/releases/download/v0.2.0/ptrsx-aarch64-apple-darwin.tar.gz" target="_blank"&gt;_ptrsx-dumper&lt;/a&gt;_ 下载解压即可。然后打开微信，点击左上角微信菜单里的「关于微信」，查看当前的微信版本号。此处作者使用的微信版本是 3.8.1 (26639)，记住这个版本号，下一步就要使用到它了。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/01935104b15a197de59cd62e748273b9.png" src="https://cdn.sspai.com/2023/08/31/01935104b15a197de59cd62e748273b9.png"/&gt;&lt;/figure&gt;&lt;p&gt;访问 &lt;a href="https://github.com/kekeimiku/dumpkey" target="_blank"&gt;dumpkey&lt;/a&gt; 项目主页，可以看到在 README.md 文件里，有不同版本微信所对应的操作命令。根据上一步查到的 3.8.1 (26639)，复制下对应的命令即可，例如 3.8.1 (26639) 版本的命令如下：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;ptrsx-dumper test --pid $(pgrep WeChat |head -1) --path &amp;quot;WeChat+0x4B0F700-&amp;gt;0-&amp;gt;8-&amp;gt;8-&amp;gt;16-&amp;gt;32-&amp;gt;8-&amp;gt;8-&amp;gt;64-&amp;gt;8-&amp;gt;0-&amp;gt;0&amp;quot; -n 32
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/5c5a282c15229e55ff87bf1f020d3c56.png" src="https://cdn.sspai.com/2023/08/31/5c5a282c15229e55ff87bf1f020d3c56.png"/&gt;&lt;/figure&gt;&lt;p&gt;最后，打开终端执行下面两条命令即可获取微信数据库的密钥，首先使用 cd 命令切换到解压出来的文件夹目录里，也可以打一个 cd 空格，然后直接把对应的文件夹拖入终端即可。然后执行上面查阅到的命令，在前面加上 &lt;code&gt;./&lt;/code&gt; 代表这条命令是在当前目录下的，回车执行即可获取到微信数据库的加密密钥。&lt;/p&gt;&lt;p&gt;加密密钥在第二行，也就是 &lt;code&gt;353e&lt;/code&gt; 开头的那行，但是这个十六进制的密钥，所以在实际使用的时候，需要在前面加上 &lt;code&gt;0x&lt;/code&gt; 这两个字符，下一步使用这个密钥的时候会再具体说明。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 切换到解压文件夹路径
cd ~/Downloads/ptrsx-aarch64-apple-darwin
    
./ptrsx-dumper test --pid $(pgrep WeChat |head -1) --path &amp;quot;WeChat+0x4B0F700-&amp;gt;0-&amp;gt;8-&amp;gt;8-&amp;gt;16-&amp;gt;32-&amp;gt;8-&amp;gt;8-&amp;gt;64-&amp;gt;8-&amp;gt;0-&amp;gt;0&amp;quot; -n 32
0x600001f00f60
353e9afab4b6422981d110d65e6d555557f1aca0afaa4431a5dab66fef384596
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/83a70e76f8467f60cdac7edcb7ecde74.png" src="https://cdn.sspai.com/2023/08/31/83a70e76f8467f60cdac7edcb7ecde74.png"/&gt;&lt;/figure&gt;&lt;h3&gt;Intel CPU 架构获取密钥方法（通杀方法）&lt;/h3&gt;&lt;p&gt;相对于 arm 构架的 CPU 来说，因为 &lt;a href="https://security.feishu.cn/link/safety?target=https%3A%2F%2Fgithub.com%2Fkekeimiku%2Fdumpkey&amp;amp;scene=ccm&amp;amp;logParams=%7B%22location%22%3A%22ccm_default%22%7D&amp;amp;lang=zh-CN" target="_blank"&gt;dumpkey&lt;/a&gt; 项目作者没有提供 x86 的密钥导出实现，所以就需要读者自己动手，以动态调试的方式，从内存中直接读取密钥。虽然过程较为繁琐一些，但还达不到超出多数读者理解的水平。所以只要跟着步骤一步步操作，应该都是可以获取到加密密钥的。另外提一句话 &lt;a href="https://security.feishu.cn/link/safety?target=https%3A%2F%2Fgithub.com%2Fkekeimiku%2Fdumpkey&amp;amp;scene=ccm&amp;amp;logParams=%7B%22location%22%3A%22ccm_default%22%7D&amp;amp;lang=zh-CN" target="_blank"&gt;dumpkey&lt;/a&gt; 项目目前只提供了 3.6.2 到 3.8.2 版本微信的命令，如果以后项目不再添加微信新版本的命令，也可以通过这个方法获取加密密钥。这是一个通杀的方法，任意微信版本，任意 CPU 架构都可以使用这个方法。接下来就正式开始通过动态调试获取密钥。&lt;/p&gt;&lt;p&gt;安装 lldb：lldb 是 Xcode 内置的开发者工具，可以用来调试 C/OC/C++/Swift 程序的调试器。为了能够使用 lldb，需要先安装一下开发者工具。在终端中执行 lldb 命令，弹出如下所示的提示框，那就是说明没有安装过 lldb，根据指示进行安装即可。如果以前执行过 &lt;code&gt;xcode-select --install&lt;/code&gt; 或者已经安装过 Homebrew 的话，电脑上应该已经有了这个工具。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/29f7e772ed70a5162121fb7137ebdac1.png" src="https://cdn.sspai.com/2023/08/31/29f7e772ed70a5162121fb7137ebdac1.png"/&gt;&lt;/figure&gt;&lt;p&gt;正确安装 lldb 之后可以尝试输出版本号，如果能够正确输出版本号，就代表着安装成功了。如下图所示作者使用的 lldb 版本是：lldb-1403.0.17.67&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/fbdfe35b66a581d13b80d513c1cd8cec.png" src="https://cdn.sspai.com/2023/08/31/fbdfe35b66a581d13b80d513c1cd8cec.png"/&gt;&lt;/figure&gt;&lt;p&gt;临时关闭系统的 SIP（SystemIntegrityProtection）即系统完整性保护，默认情况下 lldb 是无法调试微信，需要关闭 SIP。在 macOS 上关闭 SIP 需要进入恢复模式的终端里去执行命令。Intel MacBook 按下开机键后按住 Command-R 组合键进入恢复模式，arm MacBook 按住开机键不放直到出现选择界面，进入恢复模式进行操作。如果仍有疑问，可以参考下面这两篇文章：&lt;/p&gt;&lt;p&gt;进入恢复模式的终端中，执行以下两条命令，关闭 SIP 并重启电脑进入正常系统。如果操作正确 SIP 就能关闭了，如果对于这个步骤仍有疑问的读者，可以参考少数派上的文章 &lt;a href="https://sspai.com/post/55066" target="_blank"&gt;「macOS 开启或关闭 SIP」&lt;/a&gt;，有加详细的图文解释。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 关闭 SIP 保护
csrutil disable
    
# 重启电脑进入正常系统
reboot&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;正常进入系统之后，就可以使用 lldb 程序调试工具调试微信了。先运行微信，但是不要登录，让它保持在登陆窗口。然后打开终端输入 &lt;code&gt;lldb -p $(pgrep WeChat)&lt;/code&gt; 获取微信的进程 ID，指定 lldb 通过进程 ID 挂载 debug 程序。成功挂载微信程序之后，会显示出类似如下的界面：&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/242f69664964b8934e3b4a4a6e5af181.png" src="https://cdn.sspai.com/2023/08/31/242f69664964b8934e3b4a4a6e5af181.png"/&gt;&lt;/figure&gt;&lt;p&gt;接下来就是打断点了，在微信里的 &lt;code&gt;sqlite3_key&lt;/code&gt; 函数上打一个断点，当程序运行到这个函数的时候就会暂停下来，等待输入调试命令。&lt;/p&gt;&lt;p&gt;输入命令 &lt;code&gt;br set -n sqlite3_key&lt;/code&gt; 即可，lldb 回显：&lt;code&gt;Breakpoint 1: 2 locations.&lt;/code&gt;，说明 lldb 已经成功在这两个地方打上了断点。&lt;/p&gt;&lt;p&gt;然后继续输入命令 &lt;code&gt;c&lt;/code&gt; 回车即可，lldb 回显：&lt;code&gt;Process 59241 resuming&lt;/code&gt;，此处的 &lt;code&gt;c&lt;/code&gt; 即为 continue，执行完这条命令之后，程序就能正常继续向下执行，直到触发断点。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;(lldb) br set -n sqlite3_key
Breakpoint 1: 2 locations.
(lldb) c
Process 58802 resuming
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/63bc2d390b0f463475862248909aa2c6.png" src="https://cdn.sspai.com/2023/08/31/63bc2d390b0f463475862248909aa2c6.png"/&gt;&lt;/figure&gt;&lt;p&gt;那么如何触发断点呢？现在微信已经恢复正常运行了，只需要点击登陆或者扫码登陆微信即可。点击完登陆或者扫码确认之后，lldb 就会拦截到这个断点，让微信再次暂停运行，这时候微信会卡住，这是正常现象。&lt;/p&gt;&lt;p&gt;切换回终端查看，可以看到 lldb 已经正确地把微信在 &lt;code&gt;sqlite3_key&lt;/code&gt; 函数的入口处断点了&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/b0f0446a7d8175ae3359d06923ad1996.png" src="https://cdn.sspai.com/2023/08/31/b0f0446a7d8175ae3359d06923ad1996.png"/&gt;&lt;/figure&gt;&lt;p&gt;最后一步，输出内存里的密钥值。在日常生活中，大家可能听说过：「电脑上临时存储数据，经常会说把数据存在内存里，因为这样比较快等类似的话」。但是很少有人会直接跟内存去打交道。但是现在在 lldb 的帮助下，就可以直接读取到内存的值，此处要读取的就是数据库的密钥。&lt;/p&gt;&lt;p&gt;Intel CPU 构架命令 &lt;code&gt;memory read --size 1 --format x --count 32 $rsi&lt;/code&gt;&lt;/p&gt;&lt;p&gt;arm CPU 架构命令 &lt;code&gt;memory read --size 1 --format x --count 32 $x1&lt;/code&gt;&lt;/p&gt;&lt;p&gt;以 arm CPU 架构为例，最后得到的结果如下所示，复制四行以十六进制表示的内存数据，后续使用 Python 处理即可获取到正确的密钥。最后输入 exit 并再次输入 y 确认退出 lldb 调试，微信即可继续正常运行。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;(lldb) memory read --size 1 --format x --count 32 $x1
0x60000240c760: 0x35 0x3e 0x9a 0xfa 0xb4 0xb6 0x42 0x29
0x60000240c768: 0x81 0xd1 0x10 0xd6 0x5e 0x6d 0x55 0x55
0x60000240c770: 0x57 0xf1 0xac 0xa0 0xaf 0xaa 0x44 0x31
0x60000240c778: 0xa5 0xda 0xb6 0x6f 0xef 0x38 0x45 0x96
    
(lldb) exit
Quitting lldb will detach from one or more processes. Do you really want to proceed: [Y/n] y
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/2cd83ca99b39082d74f0c300eb397b1f.png" src="https://cdn.sspai.com/2023/08/31/2cd83ca99b39082d74f0c300eb397b1f.png"/&gt;&lt;/figure&gt;&lt;p&gt;使用 Python 将内存中读取的密钥进行处理，去掉开头的 &lt;code&gt;0x&lt;/code&gt; 并把四行合并为一行，即可获得可以使用的密钥，代码如下：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!/usr/bin/env python3
    
source = &amp;#x27;&amp;#x27;&amp;#x27;
0x60000240c760: 0x35 0x3e 0x9a 0xfa 0xb4 0xb6 0x42 0x29
0x60000240c768: 0x81 0xd1 0x10 0xd6 0x5e 0x6d 0x55 0x55
0x60000240c770: 0x57 0xf1 0xac 0xa0 0xaf 0xaa 0x44 0x31
0x60000240c778: 0xa5 0xda 0xb6 0x6f 0xef 0x38 0x45 0x96
&amp;#x27;&amp;#x27;&amp;#x27;
    
key = &amp;#x27;0x&amp;#x27; + &amp;#x27;&amp;#x27;.join(i.partition(&amp;#x27;:&amp;#x27;)[2].replace(&amp;#x27;0x&amp;#x27;, &amp;#x27;&amp;#x27;).replace(&amp;#x27; &amp;#x27;, &amp;#x27;&amp;#x27;) for i in source.split(&amp;#x27;\n&amp;#x27;)[1:5])
print(key)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最后输出密钥：&lt;code&gt;0x353e9afab4b6422981d110d65e6d555557f1aca0afaa4431a5dab66fef384596&lt;/code&gt;&lt;/p&gt;&lt;p&gt;对比上一个小节，使用 ptrsx-dumper 获取的密钥：&lt;code&gt;353e9afab4b6422981d110d65e6d555557f1aca0afaa4431a5dab66fef384596&lt;/code&gt;，除了开头需要手动补全的 &lt;code&gt;0x&lt;/code&gt; 之外完全一致。&lt;/p&gt;&lt;h2&gt;导出聊天记录文件&lt;/h2&gt;&lt;p&gt;为了能够打开数据库文件进行导出操作，需要下载 &lt;a href="https://sqlitebrowser.org/dl/" target="_blank"&gt;DB Browser for SQLite &lt;/a&gt;进行操作。下载并安装完成之后，就该去寻找微信的数据库文件了。此处就不用通过 Finder 一层层地去找了，有一个简单的办法可快速找到数据库文件位置：打开任意聊天记录，选择图片或者文件，直接右键点击「在 Finder 中显示」即可。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/832b7e80635019608b49c58fa3994636.png" src="https://cdn.sspai.com/2023/08/31/832b7e80635019608b49c58fa3994636.png"/&gt;&lt;/figure&gt;&lt;p&gt;在打开的 Finder 中，向外回退两层目录，所有的 &lt;code&gt;msg_数字.db&lt;/code&gt; 里面存储的都是聊天记录。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/551544fc697e13b0300f2829e1b1ee21.png" src="https://cdn.sspai.com/2023/08/31/551544fc697e13b0300f2829e1b1ee21.png"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;为了避免在操作过程中因为错误操作损坏数据库文件，建议先退出微信&lt;/strong&gt;。将 msg 数据库文件从 &lt;code&gt;msg_0.db&lt;/code&gt; 到 &lt;code&gt;msg_9.db&lt;/code&gt; 十个数据库文件单独拷贝出来操作。此处使用命令实现，如果读者对 Unix 命令比较陌生，也可以按照注释操作手动创建文件夹，复制数据库文件。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 在桌面上创建 WeChatDB 目录
mkdir ~/Desktop/WeChatDB
    
# 切换到数据库文件所在的目录，不要直接复制此处的路径，直接从 Finder 拉到终端里
cd /Users/james/Library/Containers/com.tencent.xinWeChat/Data/Library/Application\ Support/com.tencent.xinWeChat/2.0b4.0.9/5a22781f14219edfffa333cb38aa92cf/Message
    
# 把所有的 msg 数据库文件拷贝到 WeChatDB 目录
cp msg*.db ~/Desktop/WeChatDB
    
# 在 WeChatDB 目录里创建空文件夹，从 db0 到 db9
mkdir ~/Desktop/WeChatDB/db{0..9}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最终效果如下图所示，把所有的 db 数据库文件都拷贝到新建的 WeChatDB 目录下，并创建了从 db0 到 db9 十个空文件夹。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/4349140fb988c6ee7bc88b85e3836e3b.png" src="https://cdn.sspai.com/2023/08/31/4349140fb988c6ee7bc88b85e3836e3b.png"/&gt;&lt;/figure&gt;&lt;p&gt;使用 DB Browser for SQLite 任意打开一个数据库文件，此处有三个注意点：&lt;/p&gt;&lt;p&gt;密码类型：选择「原始密钥」&lt;/p&gt;&lt;p&gt;密码，第一种使用 ptrsx-dumper 获取到的密码前面没有 &lt;code&gt;0x&lt;/code&gt; 字符，需要自己手动加上，第二种 Python 解析出来的密码可以直接使用，例如此处作者填写的密码就是：&lt;code&gt;0x353e9afab4b6422981d110d65e6d555557f1aca0afaa4431a5dab66fef384596&lt;/code&gt;&lt;/p&gt;&lt;p&gt;加密设置：选择「SQLCipher 3 默认」&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/834144a15be79e659b8e958188a20844.png" src="https://cdn.sspai.com/2023/08/31/834144a15be79e659b8e958188a20844.png"/&gt;&lt;/figure&gt;&lt;p&gt;正确设置三个值以后，就可以回车解密微信聊天记录了，进入之后看到如下的界面：&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/e510c6fec40ea3cc5ce2d92735c0deb5.png" src="https://cdn.sspai.com/2023/08/31/e510c6fec40ea3cc5ce2d92735c0deb5.png"/&gt;&lt;/figure&gt;&lt;p&gt;切换到「浏览数据」选项，通过选择不同表就可以查看和不同好友之间的聊天记录，如下所示就是一份聊天记录。其中模糊部分就是聊天信息的具体内容。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/5c831a0d05e3423f92a35043e0869dcb.png" src="https://cdn.sspai.com/2023/08/31/5c831a0d05e3423f92a35043e0869dcb.png"/&gt;&lt;/figure&gt;&lt;p&gt;但是这样的浏览意义有限，可以将所有的聊天记录都导出 JSON，以便接下来使用 Python 进行数据分析。前往「文件 &amp;gt; 导出」，点击「表到 JSON…」&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/ba1b6c9614a51a831727ab4025d0034f.png" src="https://cdn.sspai.com/2023/08/31/ba1b6c9614a51a831727ab4025d0034f.png"/&gt;&lt;/figure&gt;&lt;p&gt;在弹出的表选择框中，按下 command+A 选择全部的数据表，也就是全部的聊天记录，继续点击「保存」。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/d2b860748830e08de0a7fe44a9dd6266.png" src="https://cdn.sspai.com/2023/08/31/d2b860748830e08de0a7fe44a9dd6266.png"/&gt;&lt;/figure&gt;&lt;p&gt;那么保存到哪里合适呢？刚才创建 WeChatDB 文件夹的最后一步，创建了 db0 到 db9 十个空文件夹。此时就可以对号入座，把对应数据库的 JSON 文件保存到对应的 db 文件夹里。为什么要这么做，而不是把所有的聊天记录都直接放在 WeChatDB 里呢？举个例子，如果隔了一段时间，又和好友聊了很多话之后，想要对这段时间的聊天记录再次做一个分析。通过关键词检索，很快就可以找到这个好友的聊天记录放在哪一个数据库文件里，而不需要再次手动将十个数据库文件都做一次导出，然后才能进行处理。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/06a84f8c6a1b6c4801cd62e707a334d6.png" src="https://cdn.sspai.com/2023/08/31/06a84f8c6a1b6c4801cd62e707a334d6.png"/&gt;&lt;/figure&gt;&lt;p&gt;如下图所示，就是全部数据库都导出之后的效果&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/3851d47ce72dd38758d270dbf89eca6e.png" src="https://cdn.sspai.com/2023/08/31/3851d47ce72dd38758d270dbf89eca6e.png"/&gt;&lt;/figure&gt;&lt;h2&gt;环境配置&lt;/h2&gt;&lt;p&gt;接下来将会大量使用 Python 来实现绘制词云，绘制表格，生成 Excel 等功能，所以为了避免缺少各种库而导致报错，可以提前将环境都准备，使用如下命令安装所有依赖库：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;pip3 install wordcloud matplotlib pandas jieba mplfonts imageio openpyxl numpy
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果读者是使用 conda 来配置虚拟环境，也可以通过 conda 来创建虚拟环境来运行脚本：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;(base) conda create -n WeChatDataAnalysis python=3.9 matplotlib wordcloud pandas imageio openpyxl -y
    
(base) conda activate WeChatDataAnalysis
    
(WeChatDataAnalysis) pip3 install jieba mplfonts
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;关联阅读：&lt;/strong&gt;&lt;a href="https://sspai.com/post/69595" target="_blank"&gt;《为非技术人群准备的 Python 安装指南》&lt;/a&gt;&lt;/p&gt;&lt;p&gt;使用完成之后如果退出删除环境，使用以下两条命令：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;(WeChatDataAnalysis)  conda deactivate
    
(base) conda remove -n WeChatDataAnalysis --all
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;制作词云&lt;/h2&gt;&lt;h3&gt;前置知识&lt;/h3&gt;&lt;p&gt;有了所有好友和群聊的聊天记录，就可以正式开始制作词云了。但是在此之前，需要先对微信聊天记录导出的 JSON 结构有一个基础了解。如下所示，是一个比较简单的聊天信息的 JSON 数据。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;{
  &amp;quot;CompressContent&amp;quot;: null,
  &amp;quot;ConBlob&amp;quot;: &amp;quot;chN3eGlkX3k2OHh0MDk4NHFjczIxeglsaXV6b25nZGGAAQCYAQCgAQC4AQDIAQDQAQDwAQD4AQCIAgI=&amp;quot;,
  &amp;quot;IntRes1&amp;quot;: 0,
  &amp;quot;IntRes2&amp;quot;: 0,
  &amp;quot;StrRes1&amp;quot;: null,
  &amp;quot;StrRes2&amp;quot;: null,
  &amp;quot;mesDes&amp;quot;: 0,
  &amp;quot;mesLocalID&amp;quot;: 8,
  &amp;quot;mesSvrID&amp;quot;: 9004976427286855000,
  &amp;quot;messageType&amp;quot;: 1,
  &amp;quot;msgContent&amp;quot;: &amp;quot;投稿一日一技&amp;quot;,
  &amp;quot;msgCreateTime&amp;quot;: 1611106801,
  &amp;quot;msgImgStatus&amp;quot;: 1,
  &amp;quot;msgSeq&amp;quot;: 0,
  &amp;quot;msgSource&amp;quot;: &amp;quot;&amp;quot;,
  &amp;quot;msgStatus&amp;quot;: 2,
  &amp;quot;msgVoiceText&amp;quot;: null
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其中比较值得关注的字段如下：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;msgContent：消息内容&lt;/li&gt;&lt;li&gt;msgCreateTime：消息创建时间，使用 Unix Time 表示&lt;/li&gt;&lt;li&gt;messageType：消息类型&lt;ul&gt;&lt;li&gt;文本：1&lt;/li&gt;&lt;li&gt;图片：3&lt;/li&gt;&lt;li&gt;语音：34&lt;/li&gt;&lt;li&gt;视频：43&lt;/li&gt;&lt;li&gt;表情包：47&lt;/li&gt;&lt;li&gt;位置：48&lt;/li&gt;&lt;li&gt;分享消息：49&lt;/li&gt;&lt;li&gt;系统消息：10000&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;msgStatus：消息状态&lt;ul&gt;&lt;li&gt;收到消息：4&lt;/li&gt;&lt;li&gt;发出消息：2、3&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;msgVoiceText：微信的语音转文字识别结果&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;基础框架思路&lt;/h3&gt;&lt;p&gt;前置知识有了，就可以开始动手写代码了。制作词云图片，只需要提取出所有 messageType 等于 1 的记录，并把这些聊天记录进行分词之后，就可以制作词云了。&lt;/p&gt;&lt;p&gt;那么新的问题来了，如何快速找到那个好友/群聊对应的 JSON 文件？使用 grep 命令即可。找到想要生成词云的群聊，任意选择一句聊天记录，只要和别的群有一定区分度即可。例如图中的「每次放烟雾弹都有你」就是一句比较有区分度的话，其他群里不太可能有人发过类似的话。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/a057943810fa8148453162df611c8efb.png" src="https://cdn.sspai.com/2023/08/31/a057943810fa8148453162df611c8efb.png"/&gt;&lt;/figure&gt;&lt;p&gt;打开终端，使用 grep 命令指定在 WeChatDB 目录下搜索这句话出现在哪个文件里即可，命令如下：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;grep -r &amp;#x27;每次放烟雾弹都有你&amp;#x27; ~/Desktop/WeChatDB
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/61e6fd0a25a648ea8afaa80f29dc08ea.png" src="https://cdn.sspai.com/2023/08/31/61e6fd0a25a648ea8afaa80f29dc08ea.png"/&gt;&lt;/figure&gt;&lt;p&gt;可以看到 grep 已经输出了所对应的文件路径：&lt;code&gt;/Users/james/Desktop/WeChatDB/db2/Chat_3c0825dcf3b568028bcf00ee45656d60.json&lt;/code&gt;&lt;/p&gt;&lt;p&gt;快速写一个 Python 脚本验证一下想法，但是可以看到，msgContent 除了记录消息信息之外，还在第一行标记了是谁发的这条消息，这并不是期望的结果，所以需要对程序进行调整。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/49213e68b3a5699193b80faef0309892.png" src="https://cdn.sspai.com/2023/08/31/49213e68b3a5699193b80faef0309892.png"/&gt;&lt;/figure&gt;&lt;p&gt;将代码稍做修改，定义 content 变量用来保存消息文本。如果消息超过一行，就丢弃掉第一行的微信号，否则直接拼接到 content，最后打印出 content 即可。此处可能有读者会有疑问，为什么是超过一行，这样处理？如果是等于一行是什么情况呢？那就是自己发送的消息了，也就是对应 else 代码处理的部分。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!/usr/bin/env python3
import os
import json
    
data = open(&amp;#x27;你的 JSON 文件路径&amp;#x27;).read()
data = json.loads(data)
    
content = &amp;quot;&amp;quot;
for item in data:
    if (item[&amp;#x27;messageType&amp;#x27;] == 1):
        message = item[&amp;#x27;msgContent&amp;#x27;].split(&amp;#x27;\n&amp;#x27;)
        if len(message) &amp;gt; 1:
            content += &amp;quot; &amp;quot;.join(message[1:])+ &amp;quot;\n&amp;quot;
        else:
            content += message[0] + &amp;quot;\n&amp;quot;
print(content)
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/44b7c0ac0a9b930b6c450e82f5c530da.png" src="https://cdn.sspai.com/2023/08/31/44b7c0ac0a9b930b6c450e82f5c530da.png"/&gt;&lt;/figure&gt;&lt;h3&gt;结巴分词&lt;/h3&gt;&lt;p&gt;聊天记录清洗出来之后，就可以开始分词了。为了剔除没有意义的字符，例如：啊、吧、呢和吗等等等，此处直接删除了所有一个字符的词，如果读者有自己的想法，可以根据实际情况修改。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 引入结巴分词，对群聊记录进行分词
import jieba
ls = jieba.lcut(content)
    
# 如果分词出来只有一个字符剔除这个字符
ls = [i for i in ls if len(i) &amp;gt; 1]
    
text = &amp;#x27; &amp;#x27;.join(ls)
print(text)
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/b400d49e5a655e5540e877c77ec90c77.png" src="https://cdn.sspai.com/2023/08/31/b400d49e5a655e5540e877c77ec90c77.png"/&gt;&lt;/figure&gt;&lt;h3&gt;生成词云&lt;/h3&gt;&lt;p&gt;最后一步，引入 wordcloud 生成词云。请注意最后一行代码保存图片文件，保存在当前目录下，所以这个目前编辑的 Python 代码一定是要已经保存为文件的状态。为了支持中文字体，可以从网上下载任意喜欢的中文字体，将它的 tff 字体文件放在和 Python 脚本同级的目录下。并在代码中指定 &lt;code&gt;font_path&lt;/code&gt; 参数为字体名字即可。&lt;/p&gt;&lt;p&gt;此处给出两个可供下载的中文字体：&lt;a href="https://done.alibabadesign.com/puhuiti2.0" target="_blank"&gt;阿里巴巴普惠体2.0&lt;/a&gt;、&lt;a href="https://www.dafontfree.io/simsun-font/" target="_blank"&gt;SIMSUN&lt;/a&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import wordcloud
    
wc = wordcloud.WordCloud(
    font_path=&amp;quot;SIMSUN.ttf&amp;quot;,
    width=1000,
    height=1000,
    background_color=&amp;quot;skyblue&amp;quot;,
    max_words=200)
    
wc.generate(text)
wc.to_file(&amp;quot;result.png&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;生成的词云效果图如下：&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/ae5a8417d69aed7dfa8ad38d51e53c9c.png" src="https://cdn.sspai.com/2023/08/31/ae5a8417d69aed7dfa8ad38d51e53c9c.png"/&gt;&lt;/figure&gt;&lt;h3&gt;配置停止词&lt;/h3&gt;&lt;p&gt;上图中，捂脸、偷笑、破涕为笑这几个都是表情，由于大家经常发这几个表情，所以占了比较大的面积。但是这样的词不具有生成词云的意义。所以可以引入 wordcloud 的 stopwords 停止词功能，将这些不太重要的词排除掉。&lt;/p&gt;&lt;p&gt;有了这个想法之后，新的问题又来了，微信的表情包有将近 50 个默认表情包，自己一个个去统计岂不是太麻烦了？简单粗暴一点的办法就是直接上，把微信默认的表情都按一遍过去。发给自己，然后拷贝出来。使用 sed 命令处理一下，就可以使用了。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;pbpaste|sed &amp;quot;s|\]\[|&amp;#x27;,&amp;#x27;|g ; s|\[|\[&amp;#x27;| ; s|\]|&amp;#x27;\]|&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/2284bec9844f37ab22eab2ab3f2d020d.png" src="https://cdn.sspai.com/2023/08/31/2284bec9844f37ab22eab2ab3f2d020d.png"/&gt;&lt;/figure&gt;&lt;p&gt;更新停止词之后的代码如下所示：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 引入词云
import wordcloud
    
# 引入停止词模块
from wordcloud import WordCloud, STOPWORDS
stopwords = STOPWORDS
# 添加新的停止词
stopwords.update([&amp;#x27;微笑&amp;#x27;,&amp;#x27;撇嘴&amp;#x27;,&amp;#x27;色&amp;#x27;,&amp;#x27;发呆&amp;#x27;,&amp;#x27;得意&amp;#x27;,&amp;#x27;流泪&amp;#x27;,&amp;#x27;害羞&amp;#x27;,&amp;#x27;闭嘴&amp;#x27;,&amp;#x27;睡&amp;#x27;,&amp;#x27;大哭&amp;#x27;,&amp;#x27;尴尬&amp;#x27;,&amp;#x27;发怒&amp;#x27;,&amp;#x27;调皮&amp;#x27;,&amp;#x27;呲牙&amp;#x27;,&amp;#x27;惊讶&amp;#x27;,&amp;#x27;难过&amp;#x27;,&amp;#x27;囧&amp;#x27;,&amp;#x27;抓狂&amp;#x27;,&amp;#x27;吐&amp;#x27;,&amp;#x27;偷笑&amp;#x27;,&amp;#x27;愉快&amp;#x27;,&amp;#x27;白眼&amp;#x27;,&amp;#x27;傲慢&amp;#x27;,&amp;#x27;困&amp;#x27;,&amp;#x27;惊恐&amp;#x27;,&amp;#x27;憨笑&amp;#x27;,&amp;#x27;悠闲&amp;#x27;,&amp;#x27;咒骂&amp;#x27;,&amp;#x27;疑问&amp;#x27;,&amp;#x27;嘘&amp;#x27;,&amp;#x27;晕&amp;#x27;,&amp;#x27;衰&amp;#x27;,&amp;#x27;骷髅&amp;#x27;,&amp;#x27;敲打&amp;#x27;,&amp;#x27;再见&amp;#x27;,&amp;#x27;擦汗&amp;#x27;,&amp;#x27;抠鼻&amp;#x27;,&amp;#x27;鼓掌&amp;#x27;,&amp;#x27;坏笑&amp;#x27;,&amp;#x27;右哼哼&amp;#x27;,&amp;#x27;鄙视&amp;#x27;,&amp;#x27;委屈&amp;#x27;,&amp;#x27;快哭了&amp;#x27;,&amp;#x27;阴险&amp;#x27;,&amp;#x27;亲亲&amp;#x27;,&amp;#x27;可怜&amp;#x27;,&amp;#x27;笑脸&amp;#x27;,&amp;#x27;生病&amp;#x27;,&amp;#x27;脸红&amp;#x27;,&amp;#x27;破涕为笑&amp;#x27;,&amp;#x27;恐惧&amp;#x27;,&amp;#x27;失望&amp;#x27;,&amp;#x27;无语&amp;#x27;,&amp;#x27;嘿哈&amp;#x27;,&amp;#x27;捂脸&amp;#x27;,&amp;#x27;奸笑&amp;#x27;,&amp;#x27;机智&amp;#x27;,&amp;#x27;皱眉&amp;#x27;,&amp;#x27;耶&amp;#x27;,&amp;#x27;吃瓜&amp;#x27;,&amp;#x27;加油&amp;#x27;,&amp;#x27;汗&amp;#x27;,&amp;#x27;天啊&amp;#x27;,&amp;#x27;Emm&amp;#x27;,&amp;#x27;社会社会&amp;#x27;,&amp;#x27;旺柴&amp;#x27;,&amp;#x27;好的&amp;#x27;,&amp;#x27;打脸&amp;#x27;,&amp;#x27;哇&amp;#x27;,&amp;#x27;翻白眼&amp;#x27;,&amp;#x27;666&amp;#x27;,&amp;#x27;让我看看&amp;#x27;,&amp;#x27;叹气&amp;#x27;,&amp;#x27;苦涩&amp;#x27;,&amp;#x27;裂开&amp;#x27;,&amp;#x27;嘴唇&amp;#x27;,&amp;#x27;爱心&amp;#x27;,&amp;#x27;心碎&amp;#x27;,&amp;#x27;拥抱&amp;#x27;,&amp;#x27;强&amp;#x27;,&amp;#x27;弱&amp;#x27;,&amp;#x27;握手&amp;#x27;,&amp;#x27;胜利&amp;#x27;,&amp;#x27;抱拳&amp;#x27;,&amp;#x27;勾引&amp;#x27;,&amp;#x27;拳头&amp;#x27;,&amp;#x27;OK&amp;#x27;,&amp;#x27;合十&amp;#x27;,&amp;#x27;啤酒&amp;#x27;,&amp;#x27;咖啡&amp;#x27;,&amp;#x27;蛋糕&amp;#x27;,&amp;#x27;玫瑰&amp;#x27;,&amp;#x27;凋谢&amp;#x27;,&amp;#x27;菜刀&amp;#x27;,&amp;#x27;炸弹&amp;#x27;,&amp;#x27;便便&amp;#x27;,&amp;#x27;月亮&amp;#x27;,&amp;#x27;太阳&amp;#x27;,&amp;#x27;庆祝&amp;#x27;,&amp;#x27;礼物&amp;#x27;,&amp;#x27;红包&amp;#x27;,&amp;#x27;發&amp;#x27;,&amp;#x27;福&amp;#x27;,&amp;#x27;烟花&amp;#x27;,&amp;#x27;爆竹&amp;#x27;,&amp;#x27;猪头&amp;#x27;,&amp;#x27;跳跳&amp;#x27;,&amp;#x27;发抖&amp;#x27;,&amp;#x27;转圈&amp;#x27;])
    
wc = wordcloud.WordCloud(
    font_path=&amp;quot;SIMSUN.ttf&amp;quot;,
    width=1000,
    height=1000,
    background_color=&amp;quot;skyblue&amp;quot;,
    max_words=200,
    # 配置停止词参数
    stopwords=stopwords)
    
wc.generate(text)
wc.to_file(&amp;quot;resultStop.png&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最后得到的结果如下图所示，可以看到表情相关的单词都已经剔除了，生成了一张群聊高频词的词云。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/ff014ccbd48df091a1fa7a02dafc8643.png" src="https://cdn.sspai.com/2023/08/31/ff014ccbd48df091a1fa7a02dafc8643.png"/&gt;&lt;/figure&gt;&lt;h3&gt;词云形状&lt;/h3&gt;&lt;p&gt;不少人会使用词云来生成和爱人的聊天记录图片，在这种场景下，可以在词云参数里配置一张爱心图片的遮罩，会更加符合使用场景需求。接下来就要开始设置爱心遮罩了。首先需要一个爱心的图片，网上的图片由于清晰度不够，生成的效果欠佳，所以可以自己绘制一个。将两个圆的半圆部分和正方形混合，再设置一下颜色，旋转 315 度即可得到一个高清自制的爱心图片。步骤截图如下：&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/cd0f17ca5db1efbd38871e53dbce2c3c.png" src="https://cdn.sspai.com/2023/08/31/cd0f17ca5db1efbd38871e53dbce2c3c.png"/&gt;&lt;/figure&gt;&lt;p&gt;导出爱心的时候建议把导出像素不要设置太大，否则脚本运行时间会非常长，导出像素设置为 200 或者 300 即可。下面是一张制作好的爱心图片，可直接拿来使用。另外，文章开头提供的 GitHub 仓库链接里已经放置了这张图片。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/d2009ba362feca5bbbe6bfd032086801.png" src="https://cdn.sspai.com/2023/08/31/d2009ba362feca5bbbe6bfd032086801.png"/&gt;&lt;/figure&gt;&lt;p&gt;更新后的代码如下所示：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 引入结巴分词，对群聊记录进行分词
import jieba
ls = jieba.lcut(content)
# 如果分词出来只有一个字符剔除这个字符
ls = [i for i in ls if len(i) &amp;gt; 1]
text = &amp;#x27; &amp;#x27;.join(ls)
    
# 引入词云
import wordcloud
# 引入停止词模块
from wordcloud import WordCloud, STOPWORDS
stopwords = STOPWORDS
# 添加新的停止词
stopwords.update([&amp;#x27;微笑&amp;#x27;,&amp;#x27;撇嘴&amp;#x27;,&amp;#x27;色&amp;#x27;,&amp;#x27;发呆&amp;#x27;,&amp;#x27;得意&amp;#x27;,&amp;#x27;流泪&amp;#x27;,&amp;#x27;害羞&amp;#x27;,&amp;#x27;闭嘴&amp;#x27;,&amp;#x27;睡&amp;#x27;,&amp;#x27;大哭&amp;#x27;,&amp;#x27;尴尬&amp;#x27;,&amp;#x27;发怒&amp;#x27;,&amp;#x27;调皮&amp;#x27;,&amp;#x27;呲牙&amp;#x27;,&amp;#x27;惊讶&amp;#x27;,&amp;#x27;难过&amp;#x27;,&amp;#x27;囧&amp;#x27;,&amp;#x27;抓狂&amp;#x27;,&amp;#x27;吐&amp;#x27;,&amp;#x27;偷笑&amp;#x27;,&amp;#x27;愉快&amp;#x27;,&amp;#x27;白眼&amp;#x27;,&amp;#x27;傲慢&amp;#x27;,&amp;#x27;困&amp;#x27;,&amp;#x27;惊恐&amp;#x27;,&amp;#x27;憨笑&amp;#x27;,&amp;#x27;悠闲&amp;#x27;,&amp;#x27;咒骂&amp;#x27;,&amp;#x27;疑问&amp;#x27;,&amp;#x27;嘘&amp;#x27;,&amp;#x27;晕&amp;#x27;,&amp;#x27;衰&amp;#x27;,&amp;#x27;骷髅&amp;#x27;,&amp;#x27;敲打&amp;#x27;,&amp;#x27;再见&amp;#x27;,&amp;#x27;擦汗&amp;#x27;,&amp;#x27;抠鼻&amp;#x27;,&amp;#x27;鼓掌&amp;#x27;,&amp;#x27;坏笑&amp;#x27;,&amp;#x27;右哼哼&amp;#x27;,&amp;#x27;鄙视&amp;#x27;,&amp;#x27;委屈&amp;#x27;,&amp;#x27;快哭了&amp;#x27;,&amp;#x27;阴险&amp;#x27;,&amp;#x27;亲亲&amp;#x27;,&amp;#x27;可怜&amp;#x27;,&amp;#x27;笑脸&amp;#x27;,&amp;#x27;生病&amp;#x27;,&amp;#x27;脸红&amp;#x27;,&amp;#x27;破涕为笑&amp;#x27;,&amp;#x27;恐惧&amp;#x27;,&amp;#x27;失望&amp;#x27;,&amp;#x27;无语&amp;#x27;,&amp;#x27;嘿哈&amp;#x27;,&amp;#x27;捂脸&amp;#x27;,&amp;#x27;奸笑&amp;#x27;,&amp;#x27;机智&amp;#x27;,&amp;#x27;皱眉&amp;#x27;,&amp;#x27;耶&amp;#x27;,&amp;#x27;吃瓜&amp;#x27;,&amp;#x27;加油&amp;#x27;,&amp;#x27;汗&amp;#x27;,&amp;#x27;天啊&amp;#x27;,&amp;#x27;Emm&amp;#x27;,&amp;#x27;社会社会&amp;#x27;,&amp;#x27;旺柴&amp;#x27;,&amp;#x27;好的&amp;#x27;,&amp;#x27;打脸&amp;#x27;,&amp;#x27;哇&amp;#x27;,&amp;#x27;翻白眼&amp;#x27;,&amp;#x27;666&amp;#x27;,&amp;#x27;让我看看&amp;#x27;,&amp;#x27;叹气&amp;#x27;,&amp;#x27;苦涩&amp;#x27;,&amp;#x27;裂开&amp;#x27;,&amp;#x27;嘴唇&amp;#x27;,&amp;#x27;爱心&amp;#x27;,&amp;#x27;心碎&amp;#x27;,&amp;#x27;拥抱&amp;#x27;,&amp;#x27;强&amp;#x27;,&amp;#x27;弱&amp;#x27;,&amp;#x27;握手&amp;#x27;,&amp;#x27;胜利&amp;#x27;,&amp;#x27;抱拳&amp;#x27;,&amp;#x27;勾引&amp;#x27;,&amp;#x27;拳头&amp;#x27;,&amp;#x27;OK&amp;#x27;,&amp;#x27;合十&amp;#x27;,&amp;#x27;啤酒&amp;#x27;,&amp;#x27;咖啡&amp;#x27;,&amp;#x27;蛋糕&amp;#x27;,&amp;#x27;玫瑰&amp;#x27;,&amp;#x27;凋谢&amp;#x27;,&amp;#x27;菜刀&amp;#x27;,&amp;#x27;炸弹&amp;#x27;,&amp;#x27;便便&amp;#x27;,&amp;#x27;月亮&amp;#x27;,&amp;#x27;太阳&amp;#x27;,&amp;#x27;庆祝&amp;#x27;,&amp;#x27;礼物&amp;#x27;,&amp;#x27;红包&amp;#x27;,&amp;#x27;發&amp;#x27;,&amp;#x27;福&amp;#x27;,&amp;#x27;烟花&amp;#x27;,&amp;#x27;爆竹&amp;#x27;,&amp;#x27;猪头&amp;#x27;,&amp;#x27;跳跳&amp;#x27;,&amp;#x27;发抖&amp;#x27;,&amp;#x27;转圈&amp;#x27;])
    
# 引入 imageio 读取爱心图片文件
from imageio.v2 import imread
# 读取爱心图片文件并赋值给 background 变量
background = imread(&amp;#x27;heart.png&amp;#x27;)
    
wc = wordcloud.WordCloud(
    font_path=&amp;quot;SIMSUN.ttf&amp;quot;,
    width=1000,
    height=1000,
    # 词云背景颜色
    background_color=&amp;quot;skyblue&amp;quot;,
    max_words=200,
    # 配置停止词参数
    stopwords=stopwords,
    # 配置爱心图片遮罩
    mask = background)
    
wc.generate(text)
wc.to_file(&amp;quot;resultHeart.png&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;确认 heart.png 和 Python 脚本在同一目录下之后，运行 Python 脚本，即可在目录下看到生成的 resultHeart.png 爱心词云图片。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/79bde63602d86e03d40833361490ff9e.png" src="https://cdn.sspai.com/2023/08/31/79bde63602d86e03d40833361490ff9e.png"/&gt;&lt;/figure&gt;&lt;h3&gt;背景颜色&lt;/h3&gt;&lt;p&gt;自定义完了形状，为了让这张图片更加贴合主题，还可以再给它换一个背景颜色。单独摘出词云背景颜色的定义参数来看，只需要传入对应颜色名字即可修改背景颜色。除此之外还可以传入六位十六进制的 RGB 值，通过 hex code 直接定义颜色，用这种方法可以定义任意一种颜色。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;    # 词云背景颜色
    background_color=&amp;quot;skyblue&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以中国传统色为例，找到一个喜欢颜色，在颜色名字下方就有对应颜色的 hex code。以下图中的「石蕊红」为例，它的 hex code 是 &lt;code&gt;#f0c9cf&lt;/code&gt;。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/4521843dd18039d2e1a1cea7c70ed5f1.png" src="https://cdn.sspai.com/2023/08/31/4521843dd18039d2e1a1cea7c70ed5f1.png"/&gt;&lt;/figure&gt;&lt;p&gt;用 &lt;code&gt;#f0c9cf&lt;/code&gt; 替换原来代码中的 &lt;code&gt;skyblue&lt;/code&gt;，就可以替换背景颜色了，效果图如下。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/aef8304f23afebc3ff4a1672cb5db9d7.png" src="https://cdn.sspai.com/2023/08/31/aef8304f23afebc3ff4a1672cb5db9d7.png"/&gt;&lt;/figure&gt;&lt;h2&gt;表情数量统计&lt;/h2&gt;&lt;h3&gt;表情字典获取&lt;/h3&gt;&lt;p&gt;关键词出现频率分析完了，再对刚才忽略掉的表情进行专门统计。在上一小节的操作中，已经获取到了所有的表情定义，但是还不能直接拿来使用。重新放一下刚才上面这张配图，注意看它的表情是放在方括号里的。所以为了准确统计到每个表情数量，需要对原始表情文本重新加工一下。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/0100a6654d8dcf796f9d21ccaa2e0f45.png" src="https://cdn.sspai.com/2023/08/31/0100a6654d8dcf796f9d21ccaa2e0f45.png"/&gt;&lt;/figure&gt;&lt;p&gt;此处依旧使用 sed 来处理一下表情数据，把它们变成带方括号的元素形式，方便接下来在 Python 中统计。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;pbpaste|sed &amp;quot;s|\[|&amp;#x27;\[|g ; s|\]|\]&amp;#x27;,|g&amp;quot;
&amp;#x27;[微笑]&amp;#x27;,&amp;#x27;[撇嘴]&amp;#x27;,&amp;#x27;[色]&amp;#x27;,&amp;#x27;[发呆]&amp;#x27;,&amp;#x27;[得意]&amp;#x27;,&amp;#x27;[流泪]&amp;#x27;,&amp;#x27;[害羞]&amp;#x27;,&amp;#x27;[闭嘴]&amp;#x27;,&amp;#x27;[睡]&amp;#x27;,&amp;#x27;[大哭]&amp;#x27;,&amp;#x27;[尴尬]&amp;#x27;,&amp;#x27;[发怒]&amp;#x27;,&amp;#x27;[调皮]&amp;#x27;,&amp;#x27;[呲牙]&amp;#x27;,&amp;#x27;[惊讶]&amp;#x27;,&amp;#x27;[难过]&amp;#x27;,&amp;#x27;[囧]&amp;#x27;,&amp;#x27;[抓狂]&amp;#x27;,&amp;#x27;[吐]&amp;#x27;,&amp;#x27;[偷笑]&amp;#x27;,&amp;#x27;[愉快]&amp;#x27;,&amp;#x27;[白眼]&amp;#x27;,&amp;#x27;[傲慢]&amp;#x27;,&amp;#x27;[困]&amp;#x27;,&amp;#x27;[惊恐]&amp;#x27;,&amp;#x27;[憨笑]&amp;#x27;,&amp;#x27;[悠闲]&amp;#x27;,&amp;#x27;[咒骂]&amp;#x27;,&amp;#x27;[疑问]&amp;#x27;,&amp;#x27;[嘘]&amp;#x27;,&amp;#x27;[晕]&amp;#x27;,&amp;#x27;[衰]&amp;#x27;,&amp;#x27;[骷髅]&amp;#x27;,&amp;#x27;[敲打]&amp;#x27;,&amp;#x27;[再见]&amp;#x27;,&amp;#x27;[擦汗]&amp;#x27;,&amp;#x27;[抠鼻]&amp;#x27;,&amp;#x27;[鼓掌]&amp;#x27;,&amp;#x27;[坏笑]&amp;#x27;,&amp;#x27;[右哼哼]&amp;#x27;,&amp;#x27;[鄙视]&amp;#x27;,&amp;#x27;[委屈]&amp;#x27;,&amp;#x27;[快哭了]&amp;#x27;,&amp;#x27;[阴险]&amp;#x27;,&amp;#x27;[亲亲]&amp;#x27;,&amp;#x27;[可怜]&amp;#x27;,&amp;#x27;[笑脸]&amp;#x27;,&amp;#x27;[生病]&amp;#x27;,&amp;#x27;[脸红]&amp;#x27;,&amp;#x27;[破涕为笑]&amp;#x27;,&amp;#x27;[恐惧]&amp;#x27;,&amp;#x27;[失望]&amp;#x27;,&amp;#x27;[无语]&amp;#x27;,&amp;#x27;[嘿哈]&amp;#x27;,&amp;#x27;[捂脸]&amp;#x27;,&amp;#x27;[奸笑]&amp;#x27;,&amp;#x27;[机智]&amp;#x27;,&amp;#x27;[皱眉]&amp;#x27;,&amp;#x27;[耶]&amp;#x27;,&amp;#x27;[吃瓜]&amp;#x27;,&amp;#x27;[加油]&amp;#x27;,&amp;#x27;[汗]&amp;#x27;,&amp;#x27;[天啊]&amp;#x27;,&amp;#x27;[Emm]&amp;#x27;,&amp;#x27;[社会社会]&amp;#x27;,&amp;#x27;[旺柴]&amp;#x27;,&amp;#x27;[好的]&amp;#x27;,&amp;#x27;[打脸]&amp;#x27;,&amp;#x27;[哇]&amp;#x27;,&amp;#x27;[翻白眼]&amp;#x27;,&amp;#x27;[666]&amp;#x27;,&amp;#x27;[让我看看]&amp;#x27;,&amp;#x27;[叹气]&amp;#x27;,&amp;#x27;[苦涩]&amp;#x27;,&amp;#x27;[裂开]&amp;#x27;,&amp;#x27;[嘴唇]&amp;#x27;,&amp;#x27;[爱心]&amp;#x27;,&amp;#x27;[心碎]&amp;#x27;,&amp;#x27;[拥抱]&amp;#x27;,&amp;#x27;[强]&amp;#x27;,&amp;#x27;[弱]&amp;#x27;,&amp;#x27;[握手]&amp;#x27;,&amp;#x27;[胜利]&amp;#x27;,&amp;#x27;[抱拳]&amp;#x27;,&amp;#x27;[勾引]&amp;#x27;,&amp;#x27;[拳头]&amp;#x27;,&amp;#x27;[OK]&amp;#x27;,&amp;#x27;[合十]&amp;#x27;,&amp;#x27;[啤酒]&amp;#x27;,&amp;#x27;[咖啡]&amp;#x27;,&amp;#x27;[蛋糕]&amp;#x27;,&amp;#x27;[玫瑰]&amp;#x27;,&amp;#x27;[凋谢]&amp;#x27;,&amp;#x27;[菜刀]&amp;#x27;,&amp;#x27;[炸弹]&amp;#x27;,&amp;#x27;[便便]&amp;#x27;,&amp;#x27;[月亮]&amp;#x27;,&amp;#x27;[太阳]&amp;#x27;,&amp;#x27;[庆祝]&amp;#x27;,&amp;#x27;[礼物]&amp;#x27;,&amp;#x27;[红包]&amp;#x27;,&amp;#x27;[發]&amp;#x27;,&amp;#x27;[福]&amp;#x27;,&amp;#x27;[烟花]&amp;#x27;,&amp;#x27;[爆竹]&amp;#x27;,&amp;#x27;[猪头]&amp;#x27;,&amp;#x27;[跳跳]&amp;#x27;,&amp;#x27;[发抖]&amp;#x27;,&amp;#x27;[转圈]&amp;#x27;
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/c632145d893cbbed8027f79b5d1bc079.png" src="https://cdn.sspai.com/2023/08/31/c632145d893cbbed8027f79b5d1bc079.png"/&gt;&lt;/figure&gt;&lt;p&gt;将上面处理好的表情元素定义为 stickers 列表，再通过字典推导式创一个含有 stickers 中元素，但是 value 全部为 0 的 stickers_dict 字典。接下来只要遍历聊天记录，遇到一个表情就让对应表情的计数 +1 即可。由于微信默认的表情里不包含 Emoji 表情，所以在代码要使用 stickers.extend() 函数去扩展 stickers 表情列表，将聊天过程中常用的 Emoji 表情都添加进去。&lt;strong&gt;此处读者甚至还可以根据自己的需求，添加想要统计的单词数量进去。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;此处为了输出这个表情字典，使用了 &lt;code&gt;json.dumps()&lt;/code&gt; 方法，指定了两个参数。&lt;code&gt;ensure_ascii&lt;/code&gt; 参数是为了能够让中文能够正常显示出来，如果不指定这个参数，看到的会是文字对应的 Unicode 码。&lt;code&gt;indent&lt;/code&gt; 设置了四个空格长度的缩进，方便阅读查看。如果读者在读完本篇文章之后，想要自行编写其他数据分析脚本，也可以使用这个方法去查看输出是否符合预期。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import json
    
stickers = [&amp;#x27;[微笑]&amp;#x27;,&amp;#x27;[撇嘴]&amp;#x27;,&amp;#x27;[色]&amp;#x27;,&amp;#x27;[发呆]&amp;#x27;,&amp;#x27;[得意]&amp;#x27;,&amp;#x27;[流泪]&amp;#x27;,&amp;#x27;[害羞]&amp;#x27;,&amp;#x27;[闭嘴]&amp;#x27;,&amp;#x27;[睡]&amp;#x27;,&amp;#x27;[大哭]&amp;#x27;,&amp;#x27;[尴尬]&amp;#x27;,&amp;#x27;[发怒]&amp;#x27;,&amp;#x27;[调皮]&amp;#x27;,&amp;#x27;[呲牙]&amp;#x27;,&amp;#x27;[惊讶]&amp;#x27;,&amp;#x27;[难过]&amp;#x27;,&amp;#x27;[囧]&amp;#x27;,&amp;#x27;[抓狂]&amp;#x27;,&amp;#x27;[吐]&amp;#x27;,&amp;#x27;[偷笑]&amp;#x27;,&amp;#x27;[愉快]&amp;#x27;,&amp;#x27;[白眼]&amp;#x27;,&amp;#x27;[傲慢]&amp;#x27;,&amp;#x27;[困]&amp;#x27;,&amp;#x27;[惊恐]&amp;#x27;,&amp;#x27;[憨笑]&amp;#x27;,&amp;#x27;[悠闲]&amp;#x27;,&amp;#x27;[咒骂]&amp;#x27;,&amp;#x27;[疑问]&amp;#x27;,&amp;#x27;[嘘]&amp;#x27;,&amp;#x27;[晕]&amp;#x27;,&amp;#x27;[衰]&amp;#x27;,&amp;#x27;[骷髅]&amp;#x27;,&amp;#x27;[敲打]&amp;#x27;,&amp;#x27;[再见]&amp;#x27;,&amp;#x27;[擦汗]&amp;#x27;,&amp;#x27;[抠鼻]&amp;#x27;,&amp;#x27;[鼓掌]&amp;#x27;,&amp;#x27;[坏笑]&amp;#x27;,&amp;#x27;[右哼哼]&amp;#x27;,&amp;#x27;[鄙视]&amp;#x27;,&amp;#x27;[委屈]&amp;#x27;,&amp;#x27;[快哭了]&amp;#x27;,&amp;#x27;[阴险]&amp;#x27;,&amp;#x27;[亲亲]&amp;#x27;,&amp;#x27;[可怜]&amp;#x27;,&amp;#x27;[笑脸]&amp;#x27;,&amp;#x27;[生病]&amp;#x27;,&amp;#x27;[脸红]&amp;#x27;,&amp;#x27;[破涕为笑]&amp;#x27;,&amp;#x27;[恐惧]&amp;#x27;,&amp;#x27;[失望]&amp;#x27;,&amp;#x27;[无语]&amp;#x27;,&amp;#x27;[嘿哈]&amp;#x27;,&amp;#x27;[捂脸]&amp;#x27;,&amp;#x27;[奸笑]&amp;#x27;,&amp;#x27;[机智]&amp;#x27;,&amp;#x27;[皱眉]&amp;#x27;,&amp;#x27;[耶]&amp;#x27;,&amp;#x27;[吃瓜]&amp;#x27;,&amp;#x27;[加油]&amp;#x27;,&amp;#x27;[汗]&amp;#x27;,&amp;#x27;[天啊]&amp;#x27;,&amp;#x27;[Emm]&amp;#x27;,&amp;#x27;[社会社会]&amp;#x27;,&amp;#x27;[旺柴]&amp;#x27;,&amp;#x27;[好的]&amp;#x27;,&amp;#x27;[打脸]&amp;#x27;,&amp;#x27;[哇]&amp;#x27;,&amp;#x27;[翻白眼]&amp;#x27;,&amp;#x27;[666]&amp;#x27;,&amp;#x27;[让我看看]&amp;#x27;,&amp;#x27;[叹气]&amp;#x27;,&amp;#x27;[苦涩]&amp;#x27;,&amp;#x27;[裂开]&amp;#x27;,&amp;#x27;[嘴唇]&amp;#x27;,&amp;#x27;[爱心]&amp;#x27;,&amp;#x27;[心碎]&amp;#x27;,&amp;#x27;[拥抱]&amp;#x27;,&amp;#x27;[强]&amp;#x27;,&amp;#x27;[弱]&amp;#x27;,&amp;#x27;[握手]&amp;#x27;,&amp;#x27;[胜利]&amp;#x27;,&amp;#x27;[抱拳]&amp;#x27;,&amp;#x27;[勾引]&amp;#x27;,&amp;#x27;[拳头]&amp;#x27;,&amp;#x27;[OK]&amp;#x27;,&amp;#x27;[合十]&amp;#x27;,&amp;#x27;[啤酒]&amp;#x27;,&amp;#x27;[咖啡]&amp;#x27;,&amp;#x27;[蛋糕]&amp;#x27;,&amp;#x27;[玫瑰]&amp;#x27;,&amp;#x27;[凋谢]&amp;#x27;,&amp;#x27;[菜刀]&amp;#x27;,&amp;#x27;[炸弹]&amp;#x27;,&amp;#x27;[便便]&amp;#x27;,&amp;#x27;[月亮]&amp;#x27;,&amp;#x27;[太阳]&amp;#x27;,&amp;#x27;[庆祝]&amp;#x27;,&amp;#x27;[礼物]&amp;#x27;,&amp;#x27;[红包]&amp;#x27;,&amp;#x27;[發]&amp;#x27;,&amp;#x27;[福]&amp;#x27;,&amp;#x27;[烟花]&amp;#x27;,&amp;#x27;[爆竹]&amp;#x27;,&amp;#x27;[猪头]&amp;#x27;,&amp;#x27;[跳跳]&amp;#x27;,&amp;#x27;[发抖]&amp;#x27;,&amp;#x27;[转圈]&amp;#x27;]
# 除了微信自带的表情，添加一些常用的 Emoji 表情，除此之外还可以添加一些想要统计的单词
stickers.extend([&amp;#x27;😂&amp;#x27;,&amp;#x27;🤣&amp;#x27;,&amp;#x27;🥰&amp;#x27;,&amp;#x27;😅&amp;#x27;,&amp;#x27;🥹&amp;#x27;,&amp;#x27;😘&amp;#x27;,&amp;#x27;🤩&amp;#x27;,&amp;#x27;🥺&amp;#x27;,&amp;#x27;😓&amp;#x27;,&amp;#x27;🙄&amp;#x27;,&amp;#x27;🤡&amp;#x27;, &amp;#x27;哈哈&amp;#x27;]) 
stickers_dict = {stickers: 0 for stickers in stickers}
    
print(json.dumps(stickers_dict, ensure_ascii=False, indent=4))
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/c34a3fe74980c9ec16cab359c8f3a161.png" src="https://cdn.sspai.com/2023/08/31/c34a3fe74980c9ec16cab359c8f3a161.png"/&gt;&lt;/figure&gt;&lt;h3&gt;遍历 JSON 统计表情出现次数&lt;/h3&gt;&lt;p&gt;读取数据，for 循环遍历数据，和上一个小节几乎一样的操作。唯一值得一提的就是 &lt;code&gt;count()&lt;/code&gt; 方法。&lt;code&gt;count()&lt;/code&gt; 方法可以统计某个字符串里包含了多少个指定字符。举个例子来说 &lt;code&gt;print(&amp;quot;11112345&amp;quot;.count(&amp;quot;1&amp;quot;))&lt;/code&gt; 的结果就是 4，因为 1 在字符串里出现了四次。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;data = open(&amp;#x27;/Users/james/Desktop/WeChatDB/db8/Chat_c361fce587751cedffb3e34d40fddb6b.json&amp;#x27;)
data = data.read()
data = json.loads(data)
    
# 循环所有的消息记录
for item in data:
    # 循环表情字典里的所有键
    for word in stickers_dict.keys():
        # 使用文本的 count 函数，计算里面包含了多少个 word 变量，然后加回去
        stickers_dict[word] += item[&amp;#x27;msgContent&amp;#x27;].count(word)
print(json.dumps(stickers_dict, ensure_ascii=False, indent=4))
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用这两层 for 循环处理完之后，就可以得到每个表情都发了多少次了。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/9d1fcea7d75967071ddda8a66aad6e6a.png" src="https://cdn.sspai.com/2023/08/31/9d1fcea7d75967071ddda8a66aad6e6a.png"/&gt;&lt;/figure&gt;&lt;p&gt;但是同时也发现了一些不足之处，有一部分表情从来都没发过，它们的计数是 0，没有统计意义需要直接剔除掉。只需要一行代码即可实现：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 剔除计数为 0 的表情
data = {key: value for key, value in stickers_dict.items() if value != 0}
    
print(json.dumps(data, ensure_ascii=False, indent=4))
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/f885963e68fd815bc1e3d49e5bcc5cdb.png" src="https://cdn.sspai.com/2023/08/31/f885963e68fd815bc1e3d49e5bcc5cdb.png"/&gt;&lt;/figure&gt;&lt;h3&gt;引入 pandas 生成 Excel&lt;/h3&gt;&lt;p&gt;经过上面的表情数量统计和数据清洗，现在已经得到了每个表情包都发了多少次的统计数量。现在只需要引入 pandas 将清洗干净的数据生成 Excel，代码层面的工作就大功告成了。&lt;/p&gt;&lt;p&gt;接下来这部分 pandas 的代码都是 ChatGPT 实现的，如果读者有自己的个性化筛选或者排序需求，也可以试试让 ChatGPT 实现。对于 pandas 这种有固定语法且资料丰富的开源库来说，使用 ChatGPT 来生成对应代码的效率和准确性还是比较高的。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import pandas as pd
# 使用 DataFrame.from_dict() 将字典转换为 DataFrame
df = pd.DataFrame.from_dict(data, orient=&amp;#x27;index&amp;#x27;, columns=[&amp;#x27;数量&amp;#x27;])
    
# 添加表情列
df[&amp;#x27;表情&amp;#x27;] = df.index
    
# 按数量降序排序
df = df.sort_values(by=&amp;#x27;数量&amp;#x27;, ascending=False)
    
# 重置索引
df = df[[&amp;#x27;表情&amp;#x27;, &amp;#x27;数量&amp;#x27;]]
df = df.reset_index(drop=True)
    
# 保存 DataFrame 到 Excel 文件
df.to_excel(&amp;#x27;~/Desktop/emoji_data.xlsx&amp;#x27;, index=False)
    
print(&amp;quot;数据已保存到 ~/Desktop/emoji_data.xlsx 文件中。&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;Number 生成横向柱状图&lt;/h3&gt;&lt;p&gt;打开桌面上的 emoji_data.xlsx 选中所有表情数据，切换到菜单栏上的插入菜单，插入二位横向条形图即可。但是 Excel 出来的图片效果达不到预期，笔者把数据复制了一份粘贴到了 Numbers 去生成横向条形图。如果读者是 Excel 高手，也可以在 Excel 里根据自己的喜欢进行处理。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/d6f877d97832481a3d4919b2b7bfe1cf.png" src="https://cdn.sspai.com/2023/08/31/d6f877d97832481a3d4919b2b7bfe1cf.png"/&gt;&lt;/figure&gt;&lt;p&gt;将数据复制到 Numbers 里，生成二维条形图，根据自己的喜欢修改一下颜色，添加必要的文字说明。此处为了做出的图表便于展示，只选择了前 30 条数据制作图表。&lt;/p&gt;&lt;p&gt;选中二维条形图，右键点击「拷贝」将二维条形图拷贝到系统剪切板。然后就可以将它粘贴到任意位置，例如粘贴到微信聊天发送框，或者打开预览 App 按下 command+N 从剪切板读取图片，然后将这张图片保存下来。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/060344be59e2c8d39f502c227cc8e2f2.png" src="https://cdn.sspai.com/2023/08/31/060344be59e2c8d39f502c227cc8e2f2.png"/&gt;&lt;/figure&gt;&lt;p&gt;刚在上面的步骤中，为了演示添加指定单词统计的功能，将「哈哈」这个单词添加到了统计数据里。如下图所示，「哈哈」这个单词加起来的数量，已经比前三个表情的总和还多了，说明这个群聊气氛还是比较欢乐的。&lt;/p&gt;&lt;p&gt;再看到旺柴表情包，在表情的统计数量里也是一骑绝尘，断崖式地领先于其他各个表情包。特地算了一下，旺柴表情包在所有表情包里发送占比 33% 😂&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/3ba21de274aca3bc3da790ccf11d6ffe.png" src="https://cdn.sspai.com/2023/08/31/3ba21de274aca3bc3da790ccf11d6ffe.png"/&gt;&lt;/figure&gt;&lt;h3&gt;排版设计优化&lt;/h3&gt;&lt;p&gt;在研究微信聊天记录数据分析的过程中，在少数派上看到 &lt;a href="https://sspai.com/post/58498" target="_blank"&gt;无需编程：制作 iMessage 年度数据报告&lt;/a&gt; 这篇文章，其中的几张图效果做得很不错。如果读有余力，可以参考这样的排版设计来设计最终的效果图。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/477a6c2b8bc9d66399f15761380a7226.png" src="https://cdn.sspai.com/2023/08/31/477a6c2b8bc9d66399f15761380a7226.png"/&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/5d1d978a3ed8909bf30d487fa42c1bf7.png" src="https://cdn.sspai.com/2023/08/31/5d1d978a3ed8909bf30d487fa42c1bf7.png"/&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/db9e559641a6b43635873bf33116d530.png" src="https://cdn.sspai.com/2023/08/31/db9e559641a6b43635873bf33116d530.png"/&gt;&lt;/figure&gt;&lt;h2&gt;时间分段聊天频率分析&lt;/h2&gt;&lt;h3&gt;前置知识&lt;/h3&gt;&lt;p&gt;关键词出现频率分析完了，接下来就可以对单位时间段内聊天频率进行分析了。在前置知识中已经介绍过了，消息的发送时间对应的是 msgCreateTime，它使用 Unix Time 表示。对于部分不太了解计算机知识的读者来说，此处有必要简单介绍一下什么是 Unix Time，简单说它就是代表了从 1970–01–01 08:00:00 到目前为止经过的秒数。&lt;/p&gt;&lt;p&gt;如果想要更直观地体会一下如何从 Unix Time 转换到方便阅读的日期文本，可用使用命令 &lt;code&gt;brew install coreutils&lt;/code&gt; 安装 GNU 核心工具包，然后就可以使用 gdate 命令来转换 Unix Time 了。&lt;/p&gt;&lt;p&gt;如下图所示 &lt;code&gt;@&lt;/code&gt; 后面跟上秒数即可看到转换之后的结果。使用&lt;code&gt;gdate +%s&lt;/code&gt; 也可以获取当前的 Unix Time，然后再使用 &lt;code&gt;gdate -d ``@1692789201&lt;/code&gt; 同样可以将时间转换回来。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/dd23710f8cf3272246c659695c80d67e.png" src="https://cdn.sspai.com/2023/08/31/dd23710f8cf3272246c659695c80d67e.png"/&gt;&lt;/figure&gt;&lt;h3&gt;统计时间块消息数量&lt;/h3&gt;&lt;p&gt;有了刚才制作词云和表情数量统计的经验，就可以照葫芦画瓢，写出获取所有消息发送时间的代码了。读取 JSON 文件，使用 &lt;code&gt;json.loads()&lt;/code&gt; 加载为 Python 的 JSON 对象。然后遍历每一条记录的 &lt;code&gt;msgCreateTime&lt;/code&gt; 打印出来即可。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!/usr/bin/env python3
import os
import json
import datetime
    
data = open(&amp;#x27;/Users/james/Desktop/WeChatDB/db2/Chat_3c0825dcf3b568028bcf00ee45656d60.json&amp;#x27;).read()
data = json.loads(data)
    
dict = {}
for item in data:
    # 获取消息发送时间
    unixtime = (item[&amp;#x27;msgCreateTime&amp;#x27;])
    print(unixtime)
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/b4788abee2d8ec2e38ebf8bd0cdfcc66.png" src="https://cdn.sspai.com/2023/08/31/b4788abee2d8ec2e38ebf8bd0cdfcc66.png"/&gt;&lt;/figure&gt;&lt;p&gt;获取到时间之后，还需要对它进行格式化处理，Python 内置了日期时间处理模块 datetime，可以直接调用来解析 Unix Time，可以看到现在打印出来的 value 变量已经是可阅读的「小时:分钟」格式了。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/5e5d4c7307cf35b86eb6ebfaab5dac92.png" src="https://cdn.sspai.com/2023/08/31/5e5d4c7307cf35b86eb6ebfaab5dac92.png"/&gt;&lt;/figure&gt;&lt;p&gt;接下来就是最重要的一个步骤：时刻点分区，把某些时刻分类到一个区间里。例如把 08:0008:29 这个时间段里发送的消息都算到 08:00 里面，把 08:3008:59 都算到 08:30 里面。&lt;/p&gt;&lt;p&gt;可以看到时间分区之后，每个时间段里一共发送了多少条消息。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/6929f5e7a57f2eef81f3bc3a3280767d.png" src="https://cdn.sspai.com/2023/08/31/6929f5e7a57f2eef81f3bc3a3280767d.png"/&gt;&lt;/figure&gt;&lt;p&gt;但是新的问题又来了，时间是分区好了，但是目前的分区是乱序的，需要再次处理一下，把它按照顺序整理成从 0000 到 2330 的格式。使用 &lt;code&gt;sorted()&lt;/code&gt; 方法对 &lt;code&gt;dict.items()&lt;/code&gt; 进行排序，使用 lambda 表达式指定使用第一个元素进行排序。这样处理之后在右侧就可以看到顺序的「时刻-消息数量」关系。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/31/article/2144ac9401bd527269bb748456500cc6" src="https://cdn.sspai.com/2023/08/31/article/2144ac9401bd527269bb748456500cc6"/&gt;&lt;/figure&gt;&lt;h3&gt;导入 maplotlib 生成图片&lt;/h3&gt;&lt;p&gt;经过上面的数据清洗、时刻分区和时刻排序之后，现在已经得到了「时刻-消息数量」关系字典，对于这样的 x-y 数据，使用 matplotlib 来生成二维柱状图是不错的选择。但是在此之前，还是和 wordcloud 一样的操作，需要配置一下中文字体，使得图片上能够正常显示中文。&lt;/p&gt;&lt;p&gt;此处配置中文字体的方式与 wordcloud 有所不同，matplotlib 有专门用于管理字体的程序。在「环境配置」小节中已经安装过了，只要初始化一下就可以使用，命令如下：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 初始化 mplfonts
mplfonts init
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果稍后发现依旧无法正常显示中文，还有另一种解决方式，通过 mplfonts 导入本地的其他中文字体。例如在项目目录下有一个 SIMSUN.ttf 字体文件，使用如下命令也可以添加这个字体。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 导入本地字体
mplfonts install --update SIMSUN.ttf
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;只需要以上简单的一条命令，即可完成中文字体的配置。maplotlib 这一部分的代码比较简单，直接上代码来看：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import matplotlib.pyplot as plt
    
# 导入字体管理模块
from mplfonts import use_font
#指定中文字体（这里的中文字体根据实际情况修改）
#use_font(&amp;#x27;SIMSUN&amp;#x27;)
use_font(&amp;#x27;Noto Serif CJK SC&amp;#x27;)
    
axis_x=[i[:2]+&amp;#x27;\n点\n&amp;#x27;+i[2:] for i in result]
axis_y=[result[i] for i in result]
    
plt.bar(axis_x,axis_y)
plt.xlabel(&amp;quot;时间段&amp;quot;)
plt.ylabel(&amp;quot;消息数量&amp;quot;)
plt.title(&amp;quot;蓝翼运动大众群&amp;quot;)
plt.show()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;运行 Python 程序即可生成时间段-消息数量的柱状图，点击下方最后一个保存按钮，即可将生成的图片保存到磁盘。&lt;/p&gt;&lt;p&gt;通过这张图可以看出，在中午饭点和晚饭之后这两个时间段里，大家的聊天活跃度是最高的。其次就是 22:0022:30 的时间段。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/4b4088c806022d2bb51a3504bc362960.png" src="https://cdn.sspai.com/2023/08/31/4b4088c806022d2bb51a3504bc362960.png"/&gt;&lt;/figure&gt;&lt;h2&gt;聊天频率热图&lt;/h2&gt;&lt;h3&gt;前置知识&lt;/h3&gt;&lt;p&gt;有了上面日期解析和字体设置的知识储备之后，就可以试着来挑战一下热力图了。对于数据分析不太了解的读者需要先直观地认识一下什么是热力图，&lt;a href="https://sspai.com/post/58498" target="_blank"&gt;无需编程：制作 iMessage 年度数据报告&lt;/a&gt; 这篇文章里有如下这样一张配图，数字越大颜色越深。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/0a5ac9e7c832b33d43c844f56d38480f.png" src="https://cdn.sspai.com/2023/08/31/0a5ac9e7c832b33d43c844f56d38480f.png"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;a href="http://tuzhidian.com/chart?id=5c56e4284a8c5e048189c6fe" target="_blank"&gt;热力图 - Heatmap&lt;/a&gt; 这篇文章里给热力图做了一个比较好的定义：热力图，是一种通过对色块着色来显示数据的统计图表。 绘图时，需指定颜色映射的规则。 例如，较大的值由较深的颜色表示，较小的值由较浅的颜色表示；较大的值由偏暖的颜色表示，较小的值由较冷的颜色表示。&lt;/p&gt;&lt;h3&gt;快速上手体验&lt;/h3&gt;&lt;p&gt;这一小节的内容就是带领读者，通过 Python 处理微信聊天记录，生成好友或者群聊的热力图。为了让读者有一个直观的代码体验，下面是一个简单的生成热力的代码，如果上面的环境配置正确，运行下面这段代码就可以看到对应的热力图效果。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!/usr/bin/env python3
import numpy as np
import matplotlib.pyplot as plt
# 导入字体管理模块
from mplfonts import use_font
#指定中文字体（这里的中文字体根据实际情况修改）
use_font(&amp;#x27;SIMSUN&amp;#x27;)
    
x_labels = [&amp;quot;周一&amp;quot;, &amp;quot;周二&amp;quot;, &amp;quot;周三&amp;quot;, &amp;quot;周四&amp;quot;, &amp;quot;周五&amp;quot;, &amp;quot;周六&amp;quot;, &amp;quot;周日&amp;quot;]
y_labels = [202327, 202328, 202329, 202330]
values = np.array([
        [0, 0, 0, 0, 0, 38, 0],
        [7, 3, 0, 0, 28, 0, 31],
        [20, 0, 0, 16, 0, 0, 0],
        [0, 0, 78, 10, 7, 0, 0]
])
    
    
fig, axe = plt.subplots(figsize=(8, 3))
axe.set_xticks(np.arange(len(x_labels)))
axe.set_yticks(np.arange(len(y_labels)))
axe.set_xticklabels(x_labels)
axe.set_yticklabels(y_labels)
im = axe.imshow(values, cmap=plt.cm.Greens)
axe.figure.colorbar(im, ax=axe)
plt.show()
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/1441d73a42120dd97744e729ad605326.png" src="https://cdn.sspai.com/2023/08/31/1441d73a42120dd97744e729ad605326.png"/&gt;&lt;/figure&gt;&lt;p&gt;通过运行上面这个快速上手的例子不难看出，只要传入对应的 &lt;code&gt;y_labels&lt;/code&gt; 和 &lt;code&gt;values&lt;/code&gt; 就可以绘制出自己的热力图。那么现在的问题就转变成了如何处理聊天记录数据，将数据转为换为下面这种形式：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Y 轴：哪一年的哪一周，即年和周数&lt;/li&gt;&lt;li&gt;Value 数据：星期几发了多少条消息&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;使用 Python 处理数据&lt;/h3&gt;&lt;p&gt;直接上代码，读取文件，读取 &lt;code&gt;msgCreateTime&lt;/code&gt; 的值，使用 datetime 库去解析 Unix Time，这是上一个小节的内容，此处不再赘述。但是值得注意的是，此处作者将 Unix Time 解析成了 &lt;code&gt;%Y%W&lt;/code&gt; 的格式。%Y 是用四位数字表示的年份，&lt;code&gt;%W&lt;/code&gt; 是用两位数字表示的周数，例如当前的写稿日期 2023 年 8 月 23 日，是今年的第 35 周，那就标记为 &lt;code&gt;202335&lt;/code&gt;。&lt;/p&gt;&lt;p&gt;在 &lt;code&gt;week&lt;/code&gt; 变量的后面加上了一个数字 1，这是因为 datetime 库里第一周是用 00 表示，此处加一让它变为 01 更加符合大众的计数习惯。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!/usr/bin/env python3
import os
import json
import datetime
    
data = open(&amp;#x27;/Users/james/Desktop/WeChatDB/db2/Chat_55ce213c2ad742d8ea91bf2c5ee282fb.json&amp;#x27;).read()
data = json.loads(data)
    
statistics_dict = {}
for item in data:
        unixtime = item.get(&amp;#x27;msgCreateTime&amp;#x27;)
        if isinstance(unixtime, int):
                # key 格式：年份 周数
                week = int(datetime.datetime.fromtimestamp(unixtime).strftime(&amp;#x27;%Y%W&amp;#x27;)) + 1
                print(week)
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/a483c08054ae78bf4c48eacbe4db584a.png" src="https://cdn.sspai.com/2023/08/31/a483c08054ae78bf4c48eacbe4db584a.png"/&gt;&lt;/figure&gt;&lt;p&gt;现在 Y 轴年份周数数据有了，接下来就是把星期几发了多少条聊天记录统计进去，此处可以用数组来存储消息计数。看到上面代码的第 9 行，定义了一个 &lt;code&gt;statistics_dict&lt;/code&gt; 字典。稍后就是要把计数以 &lt;code&gt;key-value&lt;/code&gt; 的形式存储进去，只是此处的 &lt;code&gt;value&lt;/code&gt; 是一个数组。&lt;/p&gt;&lt;p&gt;下面就是一个数据结果的例子。拿 &lt;code&gt;202328&lt;/code&gt; 这条数据来看，后面跟着 &lt;code&gt;[0, 0, 0, 0, 0, 38, 0]&lt;/code&gt;这样一个数组，代表周一发了 7 条消息，周二 3 条，周三周四 0 条，周五 28 条，周六 0 条，周末 31 条。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;{
    202328: [7, 3, 0, 0, 28, 0, 31],
    202329: [20, 0, 0, 16, 0, 0, 0],
    202330: [0, 0, 78, 10, 7, 0, 0]
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;接下来就是代码实现，因为上面定义的 &lt;code&gt;statistics_dict&lt;/code&gt; 里没有任何 key，如何直接去 set 这个 value 会报错找不到这个 key。所以要先判断一下当前循环的「年份周数」key 是否存在，如何不存在就先进行初始化，然后再赋值。下面这段代码中从 6 到 9 行就是「年份周数」key 的初始化。初始化完成之后，将对应天数的索引位置数值 +1。在 datetime 库中使用 &lt;code&gt;%w&lt;/code&gt; 来表示解析的日期是星期几，从 0–6 分别代表从周一到周末。&lt;/p&gt;&lt;p&gt;最后打印一下 &lt;code&gt;statistics_dict&lt;/code&gt; 字典，可以看到已经正确收集到了所有的统计数据。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;for item in data:
        unixtime = item.get(&amp;#x27;msgCreateTime&amp;#x27;)
        if isinstance(unixtime, int):
                # key 格式：年份.周
                week = int(datetime.datetime.fromtimestamp(unixtime).strftime(&amp;#x27;%Y%W&amp;#x27;)) + 1
                # 判断「年份周数」key 是否存在
                if statistics_dict.get(week) is None:
                        # 如果不存在，初始化这周的数据为全 0
                        statistics_dict[week] = [0, 0, 0, 0, 0, 0, 0]
                # 对应的天数 +1
                day = int(datetime.datetime.fromtimestamp(unixtime).strftime(&amp;#x27;%w&amp;#x27;))
                statistics_dict[week][day] = statistics_dict[week][day] + 1
print(statistics_dict)
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/1b31cb2d6e5e4e97c1ede9b3dc9377ba.png" src="https://cdn.sspai.com/2023/08/31/1b31cb2d6e5e4e97c1ede9b3dc9377ba.png"/&gt;&lt;/figure&gt;&lt;h3&gt;排序整理&lt;/h3&gt;&lt;p&gt;但是心细的读者可能也注意到了，此处输出字典依旧是乱序的。需要像「时间分段聊天频率分析」小节里一样，对数据进行排序处理。可以看到在排序之后，数据变成了元组 (tuple) 的列表形式。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;sort = sorted(statistics_dict.items(), key=lambda x:x[0])
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/bb862e1345520999b4d9b8dc052d74aa.png" src="https://cdn.sspai.com/2023/08/31/bb862e1345520999b4d9b8dc052d74aa.png"/&gt;&lt;/figure&gt;&lt;p&gt;回想一下在「快速上手体验」小节的分析，只要整理出了 Y 轴 和 value 的数据，就可以生成所需要的热力图。那就趁热打铁，直接循环这个列表，把里面的所有数据都追加到 &lt;code&gt;y_labels&lt;/code&gt; 和 &lt;code&gt;values&lt;/code&gt; 里即可，成功就在眼前！&lt;/p&gt;&lt;p&gt;直接上代码，将元组里第 0 个元素追加到 &lt;code&gt;y_labels&lt;/code&gt;，第 1 个元素追加到 &lt;code&gt;values&lt;/code&gt;，可以看到最终的结果符合预期。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/431cbde500073e4dcde92ce4dad4d1c7.png" src="https://cdn.sspai.com/2023/08/31/431cbde500073e4dcde92ce4dad4d1c7.png"/&gt;&lt;/figure&gt;&lt;h3&gt;整合代码 matplotlib 代码出效果图&lt;/h3&gt;&lt;p&gt;有了上面处理好的数据，再整合 matplotlib 就可以绘图了。此处有一点需要注意，&lt;code&gt;figsize = (15, 15)&lt;/code&gt; 是设置画布的大小。如果读者的聊天记录时间跨度比较大，比如说一年两年甚至三年，就需要把后面的数字适当地增加，扩大画布的高度让图片能够正常显示。代码最后一行调用 &lt;code&gt;plt.savefig(&amp;#x27;history.png&amp;#x27;)&lt;/code&gt; 把图片保存到当前目录下，名为 history.png 的图片，所以这段代码一定要先保存再运行。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 导入 matplotlib 绘图
import numpy as np
import matplotlib.pyplot as plt
from mplfonts import use_font
use_font(&amp;#x27;SimHei&amp;#x27;)
    
x_labels = [&amp;quot;周一&amp;quot;, &amp;quot;周二&amp;quot;, &amp;quot;周三&amp;quot;, &amp;quot;周四&amp;quot;, &amp;quot;周五&amp;quot;, &amp;quot;周六&amp;quot;, &amp;quot;周日&amp;quot;]
    
fig, axe = plt.subplots(figsize = (15, 15))
axe.set_xticks(np.arange(len(x_labels)))
axe.set_yticks(np.arange(len(y_labels)))
axe.set_xticklabels(x_labels)
axe.set_yticklabels(y_labels)
im = axe.imshow(values, cmap=plt.cm.Greens)
# 是否开启参考刻度，如果不需要开启，注释下面这行代码
axe.figure.colorbar(im, ax=axe)
plt.savefig(&amp;#x27;history.png&amp;#x27;)
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/1f610dfaa786068323b7493cf7731203.png" src="https://cdn.sspai.com/2023/08/31/1f610dfaa786068323b7493cf7731203.png"/&gt;&lt;/figure&gt;&lt;h3&gt;自定义颜色&lt;/h3&gt;&lt;p&gt;觉得绿色这样的配置不好看，想要自定义格子颜色要如何操作呢？看到 matplotlib 部分的下面这行代码，cmap 就指定了图片使用什么样的配色方案。例如作者比较喜欢的另一个配色方案是 &lt;code&gt;Wistia_r&lt;/code&gt;，那么只要把 &lt;code&gt;Greens&lt;/code&gt; 这个单词换成 &lt;code&gt;Wistia_r&lt;/code&gt; 即可，前面的 &lt;code&gt;cmap=plt.cm.&lt;/code&gt; 不需要去修改，下面几张效果图是作者比较喜欢的配色方案的展示。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;im = axe.imshow(values, cmap=plt.cm.Greens)
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/f476615240d0712266948fd2589ede14.png" src="https://cdn.sspai.com/2023/08/31/f476615240d0712266948fd2589ede14.png"/&gt;&lt;/figure&gt;&lt;p&gt;那么如何获取所有的配置方案呢？直接代码循环遍历即可。如果觉得这样的配色方案不够直观，还需要一个个去尝试，还可以参考下面这幅配色方案总览图，快速找到心仪的配色方案。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import json
import matplotlib.pyplot as plt
    
print(json.dumps(plt.colormaps(), indent=4))
# [&amp;#x27;magma&amp;#x27;, &amp;#x27;inferno&amp;#x27;, &amp;#x27;plasma&amp;#x27;, &amp;#x27;viridis&amp;#x27;, &amp;#x27;cividis&amp;#x27;, &amp;#x27;twilight&amp;#x27;, &amp;#x27;twilight_shifted&amp;#x27;, &amp;#x27;turbo&amp;#x27;, &amp;#x27;Blues&amp;#x27;, &amp;#x27;BrBG&amp;#x27;, &amp;#x27;BuGn&amp;#x27;, &amp;#x27;BuPu&amp;#x27;, &amp;#x27;CMRmap&amp;#x27;, &amp;#x27;GnBu&amp;#x27;, &amp;#x27;Greens&amp;#x27;, &amp;#x27;Greys&amp;#x27;, &amp;#x27;OrRd&amp;#x27;, &amp;#x27;Oranges&amp;#x27;, &amp;#x27;PRGn&amp;#x27;, &amp;#x27;PiYG&amp;#x27;, &amp;#x27;PuBu&amp;#x27;, &amp;#x27;PuBuGn&amp;#x27;, &amp;#x27;PuOr&amp;#x27;, &amp;#x27;PuRd&amp;#x27;, &amp;#x27;Purples&amp;#x27;, &amp;#x27;RdBu&amp;#x27;, &amp;#x27;RdGy&amp;#x27;, &amp;#x27;RdPu&amp;#x27;, &amp;#x27;RdYlBu&amp;#x27;, &amp;#x27;RdYlGn&amp;#x27;, &amp;#x27;Reds&amp;#x27;, &amp;#x27;Spectral&amp;#x27;, &amp;#x27;Wistia&amp;#x27;, &amp;#x27;YlGn&amp;#x27;, &amp;#x27;YlGnBu&amp;#x27;, &amp;#x27;YlOrBr&amp;#x27;, &amp;#x27;YlOrRd&amp;#x27;, &amp;#x27;afmhot&amp;#x27;, &amp;#x27;autumn&amp;#x27;, &amp;#x27;binary&amp;#x27;, &amp;#x27;bone&amp;#x27;, &amp;#x27;brg&amp;#x27;, &amp;#x27;bwr&amp;#x27;, &amp;#x27;cool&amp;#x27;, &amp;#x27;coolwarm&amp;#x27;, &amp;#x27;copper&amp;#x27;, &amp;#x27;cubehelix&amp;#x27;, &amp;#x27;flag&amp;#x27;, &amp;#x27;gist_earth&amp;#x27;, &amp;#x27;gist_gray&amp;#x27;, &amp;#x27;gist_heat&amp;#x27;, &amp;#x27;gist_ncar&amp;#x27;, &amp;#x27;gist_rainbow&amp;#x27;, &amp;#x27;gist_stern&amp;#x27;, &amp;#x27;gist_yarg&amp;#x27;, &amp;#x27;gnuplot&amp;#x27;, &amp;#x27;gnuplot2&amp;#x27;, &amp;#x27;gray&amp;#x27;, &amp;#x27;hot&amp;#x27;, &amp;#x27;hsv&amp;#x27;, &amp;#x27;jet&amp;#x27;, &amp;#x27;nipy_spectral&amp;#x27;, &amp;#x27;ocean&amp;#x27;, &amp;#x27;pink&amp;#x27;, &amp;#x27;prism&amp;#x27;, &amp;#x27;rainbow&amp;#x27;, &amp;#x27;seismic&amp;#x27;, &amp;#x27;spring&amp;#x27;, &amp;#x27;summer&amp;#x27;, &amp;#x27;terrain&amp;#x27;, &amp;#x27;winter&amp;#x27;, &amp;#x27;Accent&amp;#x27;, &amp;#x27;Dark2&amp;#x27;, &amp;#x27;Paired&amp;#x27;, &amp;#x27;Pastel1&amp;#x27;, &amp;#x27;Pastel2&amp;#x27;, &amp;#x27;Set1&amp;#x27;, &amp;#x27;Set2&amp;#x27;, &amp;#x27;Set3&amp;#x27;, &amp;#x27;tab10&amp;#x27;, &amp;#x27;tab20&amp;#x27;, &amp;#x27;tab20b&amp;#x27;, &amp;#x27;tab20c&amp;#x27;, &amp;#x27;magma_r&amp;#x27;, &amp;#x27;inferno_r&amp;#x27;, &amp;#x27;plasma_r&amp;#x27;, &amp;#x27;viridis_r&amp;#x27;, &amp;#x27;cividis_r&amp;#x27;, &amp;#x27;twilight_r&amp;#x27;, &amp;#x27;twilight_shifted_r&amp;#x27;, &amp;#x27;turbo_r&amp;#x27;, &amp;#x27;Blues_r&amp;#x27;, &amp;#x27;BrBG_r&amp;#x27;, &amp;#x27;BuGn_r&amp;#x27;, &amp;#x27;BuPu_r&amp;#x27;, &amp;#x27;CMRmap_r&amp;#x27;, &amp;#x27;GnBu_r&amp;#x27;, &amp;#x27;Greens_r&amp;#x27;, &amp;#x27;Greys_r&amp;#x27;, &amp;#x27;OrRd_r&amp;#x27;, &amp;#x27;Oranges_r&amp;#x27;, &amp;#x27;PRGn_r&amp;#x27;, &amp;#x27;PiYG_r&amp;#x27;, &amp;#x27;PuBu_r&amp;#x27;, &amp;#x27;PuBuGn_r&amp;#x27;, &amp;#x27;PuOr_r&amp;#x27;, &amp;#x27;PuRd_r&amp;#x27;, &amp;#x27;Purples_r&amp;#x27;, &amp;#x27;RdBu_r&amp;#x27;, &amp;#x27;RdGy_r&amp;#x27;, &amp;#x27;RdPu_r&amp;#x27;, &amp;#x27;RdYlBu_r&amp;#x27;, &amp;#x27;RdYlGn_r&amp;#x27;, &amp;#x27;Reds_r&amp;#x27;, &amp;#x27;Spectral_r&amp;#x27;, &amp;#x27;Wistia_r&amp;#x27;, &amp;#x27;YlGn_r&amp;#x27;, &amp;#x27;YlGnBu_r&amp;#x27;, &amp;#x27;YlOrBr_r&amp;#x27;, &amp;#x27;YlOrRd_r&amp;#x27;, &amp;#x27;afmhot_r&amp;#x27;, &amp;#x27;autumn_r&amp;#x27;, &amp;#x27;binary_r&amp;#x27;, &amp;#x27;bone_r&amp;#x27;, &amp;#x27;brg_r&amp;#x27;, &amp;#x27;bwr_r&amp;#x27;, &amp;#x27;cool_r&amp;#x27;, &amp;#x27;coolwarm_r&amp;#x27;, &amp;#x27;copper_r&amp;#x27;, &amp;#x27;cubehelix_r&amp;#x27;, &amp;#x27;flag_r&amp;#x27;, &amp;#x27;gist_earth_r&amp;#x27;, &amp;#x27;gist_gray_r&amp;#x27;, &amp;#x27;gist_heat_r&amp;#x27;, &amp;#x27;gist_ncar_r&amp;#x27;, &amp;#x27;gist_rainbow_r&amp;#x27;, &amp;#x27;gist_stern_r&amp;#x27;, &amp;#x27;gist_yarg_r&amp;#x27;, &amp;#x27;gnuplot_r&amp;#x27;, &amp;#x27;gnuplot2_r&amp;#x27;, &amp;#x27;gray_r&amp;#x27;, &amp;#x27;hot_r&amp;#x27;, &amp;#x27;hsv_r&amp;#x27;, &amp;#x27;jet_r&amp;#x27;, &amp;#x27;nipy_spectral_r&amp;#x27;, &amp;#x27;ocean_r&amp;#x27;, &amp;#x27;pink_r&amp;#x27;, &amp;#x27;prism_r&amp;#x27;, &amp;#x27;rainbow_r&amp;#x27;, &amp;#x27;seismic_r&amp;#x27;, &amp;#x27;spring_r&amp;#x27;, &amp;#x27;summer_r&amp;#x27;, &amp;#x27;terrain_r&amp;#x27;, &amp;#x27;winter_r&amp;#x27;, &amp;#x27;Accent_r&amp;#x27;, &amp;#x27;Dark2_r&amp;#x27;, &amp;#x27;Paired_r&amp;#x27;, &amp;#x27;Pastel1_r&amp;#x27;, &amp;#x27;Pastel2_r&amp;#x27;, &amp;#x27;Set1_r&amp;#x27;, &amp;#x27;Set2_r&amp;#x27;, &amp;#x27;Set3_r&amp;#x27;, &amp;#x27;tab10_r&amp;#x27;, &amp;#x27;tab20_r&amp;#x27;, &amp;#x27;tab20b_r&amp;#x27;, &amp;#x27;tab20c_r&amp;#x27;]
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/5a51ad2d7b78aa06d57e3d1fb70e698e.png" src="https://cdn.sspai.com/2023/08/31/5a51ad2d7b78aa06d57e3d1fb70e698e.png"/&gt;&lt;/figure&gt;&lt;h2&gt;总结&lt;/h2&gt;&lt;p&gt;本文以破解微信聊天数据库为出发点，导出聊天记录之后，使用 Python 结合 jieba、numpy、matplotlib 等工具对聊天记录进行数据分析。得到了一些比较有趣的数据，或者制作出了一些有意义的图片。&lt;/p&gt;&lt;p&gt;本文一共有 4 个例子，如果读者能够将这几个例子都理解透了，也可以根据自己的想法，实现一些更有意思的数据分析工作。除了数据分析之外，如果读者在 AIGC 方面有所涉略，还可以参考文章 &lt;a href="https://sspai.com/post/79230" target="_blank"&gt;用 10 万条微信聊天记录和 280 篇博客文章，我克隆了一个数字版自己&lt;/a&gt;，将自己的好友聊天记录数据清洗出来，然后用同样的方法训练一个类似自己思想的聊天机器人。&lt;/p&gt;&lt;p&gt;本文抛砖引玉，希望有更多读者，以不同的视角来解析微信聊天记录。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关联阅读：&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&amp;gt; 下载少数派 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;客户端 &lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号 &lt;/a&gt;，了解更妙的数字生活 🍃&lt;/p&gt;&lt;p&gt;&amp;gt; 想申请成为少数派作者？&lt;a href="https://sspai.com/apply/writing" target="_blank"&gt;冲！&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><author>JamesHopbourn</author><guid>https://sspai.com/post/82577</guid><pubDate>Thu, 31 Aug 2023 03:37:31 GMT</pubDate></item><item><title>派早报：SDC23 大会时间确认、PS Plus 上调订阅价等</title><link>https://sspai.com/post/82574</link><description>&lt;div&gt;&lt;h2&gt;你可能错过的新鲜事&lt;/h2&gt;&lt;h3&gt;三星确认 SDC23 大会召开时间&lt;/h3&gt;&lt;p&gt;8 月 30 日，三星公司宣布将于 10 月 5 日在美国旧金山举办 2023 年三星开发者大会（Samsung Developer Conference 2023，简称「SDC23」）。本届大会将聚焦三星电子旗下的 SmartThings、Bixby、Knox 及 Tizen 等子品牌或产品。&lt;a href="https://www.samsungdeveloperconference.com/" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/article/4645d84fa667d25200fffde3811527d1" src="https://cdn.sspai.com/2023/08/31/article/4645d84fa667d25200fffde3811527d1"/&gt;&lt;figcaption&gt;活动宣传图，图片来自新闻源&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;美图发布 AI 数字人生成工具 DreamAvatar&lt;/h3&gt;&lt;p&gt;8 月 30 日，美图公司发布 AI 数字人生成工具 DreamAvatar，用户可以上传带有人物的视频素材，DreamAvatar 可以将其替换为 AI 演员，动作与真人同步。目前 DreamAvatar 支持最长 10 秒的 AI 角色替换，共有 11 款数字人可选。&lt;a href="https://www.pingwest.com/w/287652" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/article/f7a00d214a3cce9fa828eecb9dc7f0df" src="https://cdn.sspai.com/2023/08/31/article/f7a00d214a3cce9fa828eecb9dc7f0df"/&gt;&lt;figcaption&gt;产品宣传海报，图片来自新闻源&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;深港交通一卡通正式发行&lt;/h3&gt;&lt;p&gt;8 月 30 日，「湾区融合 通享全国」深港一卡通上线发布会在深圳福田地铁站举行，正式推出深港交通一卡通产品，用户持此卡即可在香港及内地的 327 个城市畅行。该卡由深圳通及八达通联合发行，卡内同时包含深圳通电子钱包（符合交通运输部全国交通一卡通标准）和八达通电子钱包，分别使用人民币和港币充值即可使用。&lt;a href="https://www.sznews.com/news/content/2023-08/30/content_30441626.htm" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/article/5a51ef96ab13e6e3370ff4a44f2e7eef" src="https://cdn.sspai.com/2023/08/31/article/5a51ef96ab13e6e3370ff4a44f2e7eef"/&gt;&lt;figcaption&gt;卡片外观图，图片来自新闻源&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;PS Plus 服务将上调订阅价格&lt;/h3&gt;&lt;p&gt;8 月 30 日，索尼公司宣布，PlayStation Plus 的订阅价格将从 9 月 6 日起进行调整。根据索尼公布的新价格来看，各档位的年度订阅价均有 20 至 40 美元左右的上调幅度。&lt;a href="https://blog.playstation.com/2023/08/30/playstation-plus-monthly-games-for-september-saints-row-black-desert-traveler-edition-generation-zero/" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/article/d512280b43be8940c3fa51b0f1badcc4" src="https://cdn.sspai.com/2023/08/31/article/d512280b43be8940c3fa51b0f1badcc4"/&gt;&lt;figcaption&gt;各档位新价格图，图片截取自新闻源&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Ayaneo 发布「鲲」Windows 掌机&lt;/h3&gt;&lt;p&gt;8 月 29 日，Ayaneo 品牌推出旗舰级 Windows 掌机「鲲」（KUN）。鲲搭载 AMD Ryzen 7840U 芯片及 8.4 英寸的 IPS 屏幕，拥有 75Wh 电池，支持 Windows Hello 人脸识别，最高 TDP 性能释放可达 54W。产品售价 7399 元起，目前已开启预售。&lt;a href="https://ayaneo.com.cn/goods/512" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/ff0806750bc05e7f4ff657aa09a81a74.png" src="https://cdn.sspai.com/2023/08/31/ff0806750bc05e7f4ff657aa09a81a74.png"/&gt;&lt;figcaption&gt;产品外观及核心参数图，图片来自新闻源&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;完美世界 CS:GO 竞技平台将关闭付费通道&lt;/h3&gt;&lt;p&gt;近日，完美世界公司宣布，旗下的 CS:GO 竞技平台将于 9 月关闭付费通道，未来将实现全免费运营。付费通道关闭后，当前会员权益和功能还会继续生效；非会员上线即可免费领取平台 7 选 2 限时权益礼包；8 月 21 日前所有已付费老会员上线即可免费领取更多会员时长。完美世界方面表示，在进入免费运营阶段后，平台将致力于完善匹配机制和反作弊系统。&lt;a href="https://www.gcores.com/articles/170228" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;少数派的近期动态&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Context 众筹火热进行中，低至 53 折、会员可享额外优惠。&lt;a href="https://sspai.com/post/82252" target="_blank"&gt;&lt;strong&gt;前往了解&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt; | &lt;/strong&gt;&lt;a href="https://sspai.com/bullet/1692689059" target="_blank"&gt;&lt;strong&gt;有奖讨论&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;少数派从科隆游戏展现场参观归来。阅读&lt;a href="https://sspai.com/post/82466" target="_blank"&gt;&lt;strong&gt;参展札记&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;友台《两颗皮蛋》（皮蛋漫游记）与少数派创始人老麦的对谈已上线。&lt;a href="https://sspai.com/post/82453" target="_blank"&gt;&lt;strong&gt;前往收听&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;入华 30 周年之际，我们参观了 Apple 智惠教育中心。&lt;a href="https://sspai.com/post/82407" target="_blank"&gt;&lt;strong&gt;一起看看&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;开学季三重优惠买栏目：985 快闪礼包、优惠翻倍、还有栏目史低价。&lt;a href="https://sspai.com/post/82520" target="_blank"&gt;&lt;strong&gt;快来享折扣&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;你可能错过的好文章&lt;/h2&gt;&lt;p&gt;&amp;gt; 下载 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;少数派 2.0 客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，解锁全新阅读体验 📰&lt;/p&gt;&lt;p&gt;&amp;gt; 实用、好用的 &lt;a href="https://sspai.com/mall" target="_blank"&gt;正版软件&lt;/a&gt;，少数派为你呈现 🚀&lt;/p&gt;&lt;/div&gt;</description><author>少数派编辑部</author><guid>https://sspai.com/post/82574</guid><pubDate>Thu, 31 Aug 2023 00:47:48 GMT</pubDate></item><item><title>从杂乱到有序：如何利用位置记忆技巧提高生活和工作效率</title><link>https://sspai.com/post/81586</link><description>&lt;div&gt;&lt;p&gt;&lt;strong&gt;Matrix 首页推荐&lt;/strong&gt; &lt;/p&gt;&lt;p&gt;&lt;a href="https://sspai.com/matrix" target="_blank"&gt;Matrix&lt;/a&gt; 是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。&lt;/p&gt;&lt;p&gt;文章代表作者个人观点，少数派仅对标题和排版略作修改。&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;想象一下，我们工作下班后回家，一开门把钥匙放在左边的鞋柜上，打开柜子门拿出倒是第二层的拖鞋。往前走再左拐走进客厅，把外套以及公文包挂在客厅角落的架子上，坐在沙发上，自然而然地拿着茶几上的遥控器打开前面的电视......&lt;/p&gt;&lt;p&gt;有没有感觉，一切都是很顺利自然的，每个细节我们好像都能记住，在整个过程中我们所提到的东西都跟位置信息有关系，于是，位置记忆也成了一种非常有效的记忆方法。&lt;/p&gt;&lt;p&gt;不知道你有没有看过《神探夏洛克》这部剧，在剧中总是有一个不断出现的场景是神探夏洛克·福尔摩斯在一幢房子里面，打开一间间房间去寻找他想要的东西。事实上这只存在于他的大脑之中，里面存放了他所有与办案相关的信息，就像我们前面讲的那样依靠房间的位置自然而然地记忆和查找这些信息。说到这样的人，我还能想起一个人，大家应该都很熟悉——食人者汉尼拔。这位可怕的连环杀手使用了一座巨大、精致、虚拟的宫殿图像，通过房间以及物品来记住各种事情。&lt;/p&gt;&lt;p&gt;这些就是他们的记忆宫殿，这是虚拟的，因为他们从未真正住在这座宫殿中。而这种记忆方法也叫做位置记忆法。&lt;/p&gt;&lt;p&gt;可能有人会说，我们本来记忆东西本身不就好了，现在再结合空间记忆岂不是增大我们的记忆负担？而事实上，现今我们所熟知的记忆大师，大多数都会利用这种方法记东西。并且这种记忆方法由来已久，早在公元前 500 年左右的古希腊就存在了。据说这是一个叫西摩尼得斯的诗人发现的。&lt;/p&gt;&lt;p&gt;一天，西摩尼得斯来到一位贵族家里参加宴会。宴会上，大家谈笑风生，西摩尼得斯还朗诵了一首自己创作的诗来表达对宴会主人的尊敬。不久，门口来了两位年轻人，要求西摩尼得斯出门与他们见面，于是他就离开了宴会厅。但是，命运总是充满惊喜，然而，就在他出门的一瞬间，宴会厅突然倒塌，宴会主人和所有的宾客都被埋在废墟下面，只有西摩尼得斯侥幸逃脱了这场灾难。当亲朋好友来到宴会现场安葬死者时，他们发现死者的面容已经全非，无法相认，于是他根据自己记忆中宾客们在宴会上所处的位置，然后对照所有尸体的位置，将所有的人都辨认出来，使他们得以安葬。西摩尼得斯将这个方法命名为「位置记忆法」。&lt;/p&gt;&lt;h2&gt;什么是位置记忆&lt;/h2&gt;&lt;p&gt;这种记忆方法的原理是将记忆对象与想象中的建筑、房间和家具建立联系，再通过回想这些想象物来回忆记忆对象，从而实现对记忆对象的有序记忆。&lt;/p&gt;&lt;p&gt;在我们的印象中，记忆是一种很神秘的东西，我们不知道它是如何运作的，而我们的社会又是非常重视能够记住大量信息的人。并且在一定程度上，一个人拥有良好的记忆力被视为天才，这种天分好像后天无法得到，而事实上，这是可以的。&lt;/p&gt;&lt;p&gt;一般来说人们的记忆保持不变，但是可以通过一些技巧来得到提升。&lt;/p&gt;&lt;p&gt;比如可以通过语音循环的方法或者成为一个领域的专家可以提高对于特定领域知识的记忆。&lt;/p&gt;&lt;p&gt;还有分块记忆，比如：记忆一串数字 1224200001012001，我们能把这些数字拆分成 12/24/2000 和 01/01/2001，信息仍然是一样的，但却变得容易了许多，因为我们把一整个信息组合成更容易记住的&lt;strong&gt;块。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;此外还有阐述性编码，即是通过感官信息来帮助记忆，比如说气味、视觉刺激等等。&lt;/p&gt;&lt;p&gt;一项关于单词考试的实验显示位置记忆能够有效对于单词的记忆，并且对于长期记忆也有明显效果。当记忆从短期变成长期的时候，我们的体内的记忆储存就由通过海马体来存储变成通过产生新的神经元来形成更稳定的记忆。&lt;/p&gt;&lt;p&gt;通过这种现象，研究人员可以通过观察使用位置记忆法的记忆者的大脑变化来发现位置记忆法使用的时候所涉及的脑区区域——包括内侧颞叶、外侧前额叶皮层、脾后皮质、脑干和小脑，这些区域中和记忆相关的部分。&lt;/p&gt;&lt;p&gt;因此在对于超级记忆者的脑扫描研究发现，90% 的被试都使用了位置记忆法，并且脑区中与空间知觉相关的部位被激活。&lt;/p&gt;&lt;p&gt;对于这项技能带来如此好的效果的一个说法是，在早期我们的祖先就是需要记忆一些关键信息与空间位置的关系，才能够生存下来。例如：哪里可以找到事物，哪里有危险……因此，位置记忆法就这样慢慢地存在于我们的记忆之中，而当下由于手机、计算机以及纸笔等工具的出现使我们的这项技能慢慢沉睡。&lt;/p&gt;&lt;h2&gt;为何要普及位置记忆&lt;/h2&gt;&lt;p&gt;在当今电子设备普及的时代，人们似乎淡忘了记忆的重要性，多数学校也缺乏对于这些技巧的培训或训练。&lt;/p&gt;&lt;p&gt;首先我想说的是，位置记忆法是一个很重要也很好的技能，特别是对于现阶段学生的学习。位置记忆对于学生的学术研究（毕竟记忆是学术活动中的一个重要的工具）以及成绩的提高都有显著的作用。&lt;/p&gt;&lt;p&gt;为什么我们要学习提高我们的记忆力，即使我们随时都能拿到书本和智能手机？原因很简单：因为你的记忆实际上可以帮助你取得更多成就。尽管我们能够将知识储存在手机以及笔记本等一些外部位置，但是对于这些外部知识的提取也需要用到记忆，在解决问题的时候我们也需要用到记忆来帮助我们确认相应问题所对应的解决方法存在的位置。这些时候，外部位置的信息提取速度，远不及我们内部的记忆宫殿的作用大。&lt;/p&gt;&lt;p&gt;在一个课堂上，教授演示位置记忆法（MoL）来帮助学生了解和应用这种记忆技巧。而后的研究结果表明，学生在使用 MoL 时能够显著提高对于序列列表的记忆能力，并且能够在日常生活中频繁使用这种记忆技巧。这种方法的练习不仅可以提高学生的记忆能力，还能增强他们的元认知能力，因此总的来说这种记忆方法可以提高学生的学习效果。&lt;/p&gt;&lt;p&gt;在实验中，教授让学生来记忆一份杂货清单，在实验前后进行了记忆测试以及问卷调查。学生可以在学校内选择一些熟悉的地点（例如教学楼、图书馆、食堂、宿舍等）根据自己的喜好来创建记忆宫殿。他们可以在地图上标出这些地点，并且通过每个地点与相应的杂货来利用地图记忆杂货清单。&lt;/p&gt;&lt;p&gt;当然，对于成年人以及老年人来说，并不是不需要这些方法。对于记忆的练习还能有效防止老年痴呆以及阿尔茨海默症。&lt;/p&gt;&lt;p&gt;根据实验所在的文献，文中提到了三种记忆测量方法，分别是 strict serial recall、lenient serial recall 和 nonserial recall。具体操作过程如下：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;strict serial recall（严格顺序回忆）：学生被要求在听到一个由 12 个杂货物品组成的列表后，尽量按照正确的顺序回忆这些物品。学生完成回忆任务后，自行评分，计算得分。每个正确回忆的物品位置得 1 分，最高得分为 12 分。&lt;/li&gt;&lt;li&gt;lenient serial recall（宽松顺序回忆）：学生同样被要求在听到一个由 12 个杂货物品组成的列表后，尽量按照正确的相对顺序回忆这些物品。例如，如果「苹果」在位置 3 而不是位置 4，但在前一个物品之后的正确顺序中，这也被视为正确。学生完成回忆任务后，自行评分，计算得分。每个正确回忆的物品相对位置得 1 分，最高得分为 12 分。&lt;/li&gt;&lt;li&gt;nonserial recall（非顺序回忆）：学生被要求在听到一个由 12 个杂货物品组成的列表后，尽量回忆这些物品，不考虑它们的顺序。学生完成回忆任务后，自行评分，计算得分。每个正确回忆的物品得 1 分，最高得分为 12 分。以上是三种记忆测量方法的具体操作过程。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;结果表明，学生们在所有三种记忆测量方法上的记忆能力都有所提高。也就是说位置记忆法可以有效提高学生对于 12 个物品的串联记忆能力。这个结果意味着，教授和实践记忆技巧可以帮助学生提高记忆能力，而 MoL 是一种有效的记忆技巧。这个研究还表明，大学生可能对于记忆技巧的了解和使用不足，需要更多的教育和实践。&lt;/p&gt;&lt;h2&gt;如何使用位置记忆法&lt;/h2&gt;&lt;p&gt;记忆是一个需要极致专注的过程，因此我们需要提高我们的注意力。基于此，我们要清除额外的思想，活在当下。我在&lt;a href="https://sspai.com/post/80746" target="_blank"&gt;进入精英状态的钥匙——深度工作&lt;/a&gt;中讲到过这些，首先我们不能让思绪朝不同方向发展，比如说在记忆的时候会被突然而来的电子邮件以及手机信息干扰。一个很好的起点就是停止多任务处理，根据神经科学专家的说法，多任务实际上会使我们的思考速度减慢50%并且增加我们犯错的几率。&lt;/p&gt;&lt;p&gt;我在以前的文章中讲到过&lt;strong&gt;任务切换耗散&lt;/strong&gt;这个概念，这个指的是当我们在同时处理多个任务的时候，我们的认知能力会在切换任务的时候消耗掉，也就是说，我们处理两件事平均分配到的注意力比一次只做一件事的要少一点，这是因为在任务切换的时候我们消耗掉了一部分注意力。&lt;/p&gt;&lt;p&gt;一个我认为可行的建议是通过给自己一个目标，防止你的思维漫游。这样，你就可以轻松地提醒自己，你为什么想要专注于某件事。我们都知道&lt;a href="https://sspai.com/post/80746" target="_blank"&gt;商人的特点是具有很强的目标感&lt;/a&gt;，为了赚到钱，他们会把所有精力都放在最关键的目标上，然后围着目标设定一系列实现方法，让自己迅速达成目标。&lt;/p&gt;&lt;p&gt;还有一个方法也能让你更加专注——好奇心。人们总好对自己好奇以及感兴趣的事物付出更多的精力，如果把目标、兴趣、好奇结合在一起，就构成了 PIC 规则。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;目标（Purpose）给你学习的理由。以学习编程语言为例，你的目的可以是为你的家人建立一个网站。&lt;/li&gt;&lt;li&gt;一旦你找到了一个目标，问自己一些问题，这样你就可以对你选择学习的东西感到感兴趣（Interested）；&lt;/li&gt;&lt;li&gt;和好奇（Curious）。 「这与我的生活有关吗？」或「我可以在工作中使用这个吗？」都是很好的开始。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;记忆宫殿是一种利用位置来记忆事物的方式，就像电脑硬盘一样，它有许多不同的房间，每个房间里有特征物，用来存储信息，就像电脑中的文件夹一样。这些特征物的位置可以是物理世界中真实的空间，比如家里的桌子或花瓶；也可以是抽象的，比如一篇文章或一本书，里面的句子可以作为特征物，用来记忆单词。因此，记忆宫殿并非神奇，而是一种用来编码和处理信息的方式。难怪老师们总是让我们背课文，因为这样能够让我们将枯燥无聊的单词记在生动有趣的句子和文章中。&lt;/p&gt;&lt;p&gt;位置记忆的过程可以分为三个步骤：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;查找（find）：找定起始位置，在脑海中激活该位置的存在形象。&lt;/li&gt;&lt;li&gt;移动（move）：不断从一个位置移动到另一个位置，同时记住扫描的位置。&lt;/li&gt;&lt;li&gt;检索（retrieve）：解码位置——物品关联的关系，并且检索物品名称。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;扫描是指在方法定位法中，被试需要在一系列空间位置中扫描，以找到特定的位置或物品。扫描是由移动过程完成的，该过程过程是一个迭代的过程，每次迭代都会生成下一个位置。扫描是一个顺序执行的过程，即逐个位置地扫描，每个位置的扫描时间是固定的。&lt;/p&gt;&lt;p&gt;研究显示，检索过程几乎没有错误的意思是，在使用位置记忆方法时，检索错误的程度较低。这表明位置记忆方法的可靠性较高，因为在这种方法中，检索过程是最终检索目标位置的过程，如果这个过程出现错误，就会导致记忆失败。因此，这个结果表明位置记忆方法是一种有效的记忆技巧。&lt;/p&gt;&lt;p&gt;一个好的建议是给自己设一个目标，时时刻刻提醒自己要专注，防止我们的思维漫游，这样我们既能轻松提醒自己为什么要专注于某件事情。&lt;/p&gt;&lt;h3&gt;跟我一起尝试位置记忆法&lt;/h3&gt;&lt;p&gt;接下来我来更加框架化地讲一下，首先花几分钟尽可能按顺序记住下面这些事物，你能记得多少？&lt;/p&gt;&lt;p&gt;鱼，地毯，香烟，铅笔，汉堡包，电话，足球，雨伞，钥匙，胡子，打字机，汽车轮胎，餐盘，耳朵，枕头，船，苹果树，牙刷，项链，一瓶啤酒。&lt;/p&gt;&lt;p&gt;大多数人不能记住超过九个，实际上没有人能记住超过十个。大多数人通过一遍又一遍重复背诵这个列表，如果时间够长的话，他们可能可以全部记住。&lt;/p&gt;&lt;p&gt;记忆的关键不在于学习的过程，而在于回忆。人类的大脑可以储存大量的信息，而在大多数情况下，我们不能那么容易直接从我们大脑中提取信息。&lt;/p&gt;&lt;p&gt;位置记忆法我们要构建记忆宫殿，那么我们要记忆的一切基本都要以视觉化的形式展示出来，因此对于物品的记忆我们首先要「视觉化」，这是一个很关键的一部分。&lt;/p&gt;&lt;p&gt;视觉化一定要做到以下几点：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;让图像越荒谬越好：我们的大脑对越离奇不寻常的图像的记忆能力越强，因此我们只要看到，我们就很难忘记。&lt;/li&gt;&lt;li&gt;在脑海中看到：我们要先在脑海中看过这个东西，我们才能记得这个东西、对这个东西印象更深刻。&lt;/li&gt;&lt;li&gt;让图像尽可能生动：我们可以近距离的观察他，然后动用所有感官，构造一个富含这些细节的场景。这不是一个静态图片，更像是一个视频剪辑或动画，我们可以任意角度地观察它。&lt;/li&gt;&lt;li&gt;让自己也存在于图像当中：你在这些场景中表现的越活跃，就越容易记住他们，感觉自然，把自己置身于这些场景。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;当你把自己置身于这些场景中时，你也有一种独特的可能性去给它们添加感官细节。你的场景是否包括一个苹果？在你的脑海中，看到你正在咬一口苹果。具体点。这是什么苹果？一个深红色的甜苹果？绿色的，酸的？咬一口，「感受」它的感觉。&lt;/p&gt;&lt;p&gt;接下来就是一个一个记住这些对象。&lt;/p&gt;&lt;p&gt;鱼和地毯，这是一个荒谬的联系。想象一下，你脚踩在一块由鱼缝制而成的地毯上，感受到油腻腻的鱼在你脚下。关上你的眼睛，真正去感受这个荒谬的画面。接下来，我们把地毯和香烟联系起来，处理图像，扩展它，感受地毯有多重。想象一下，你把这个地毯香烟放进嘴里，感受到它的质感。最后，把香烟和铅笔联系起来，写字的时候，用的是一根长长的、冒烟的香烟。把香烟做得比普通香烟大一点，你就会看到自己在吸地毯香烟。&lt;strong&gt;记住，让你的想象力发挥到极致，列出一系列荒谬的联系，用生动的图像去记忆它们，最后一定要去测试它们，看看它们的成效。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;如果你完成了上面的两个步骤，那么你已经算是初窥门道了。位置记忆法的关键在于&lt;strong&gt;存储空间关系的建立&lt;/strong&gt;，以下步骤可供参考。&lt;/p&gt;&lt;p&gt;首先选择一个自己&lt;strong&gt;熟悉的场景&lt;/strong&gt;（当然，自己完全建构的也行，只是初学者会比较困难），并在脑海中将其图像化作为我们的宫殿。&lt;/p&gt;&lt;p&gt;接着为了让我们的记忆更加有序，方便信息存储与提取，我们可以按照一个&lt;strong&gt;固有的路径&lt;/strong&gt;去巡视我们的宫殿。&lt;/p&gt;&lt;p&gt;接着在各个房间里找一些&lt;strong&gt;特征物&lt;/strong&gt;来作为锚定点连接我们分散的记忆，以便更好地进行回忆时的引导。这些特征物可以是家具、装饰品、窗户等等，只要能够在我们的宫殿中起到记忆的定位作用即可。比如，在宫殿的第一个房间，我们可以选择一张画作作为我们的第一个锚定点。接下来，在第二个房间，我们可以选择一件摆放在柜子上的瓷器作为第二个锚定点。这样，每当我们想要回忆起第一个房间的记忆时，只需要通过第一个锚定点回忆起它的位置，再顺着路径找到第二个锚定点即可。&lt;/p&gt;&lt;p&gt;为了进一步增强记忆效果，我们还可以给每个锚定点赋予一些特别的&lt;strong&gt;意义&lt;/strong&gt;或者以&lt;strong&gt;故事&lt;/strong&gt;的方式进行串联。例如，在第一个锚定点的画作中，我们可以选择一幅代表着重要的家庭时刻的图片，然后在第二个锚定点的瓷器上，我们可以选择一件象征着成功与进步的物品。通过这样的方式，不仅能够增加记忆的生动性和情感联结，还能够帮助我们更好地记忆和串联不同的信息。&lt;/p&gt;&lt;p&gt;对房子的每个房间，我们决定使用哪些物品/家具作为特征物。这是一开始就决定的事情。这些永远不会改变。每个特征物就像一个车站/公共汽车站，当我们在心里走过房子的房间时，我们总是以相同的顺序走来走去。这使得穿过我们的房子的旅程是连续的。&lt;/p&gt;&lt;p&gt;对于记忆内容，我想我们一定要一种夸张、荒谬的联想方式与特征物建立联系，就像我前文所说视觉化要越荒谬越好一样，我们的大脑更容易记住那些新奇好玩的事物。&lt;/p&gt;&lt;p&gt;每一个房间里的路径都是固定的。如果从左到右穿过房间时，沙发放在灯前，然后是电视机，然后是书架，那么这就是我们永远「走过」记忆宫殿的路线。物品的放置方式与现实生活房间中的放置方式完全相同，并且在使用记忆宫殿时，我们需要以相同的方向从左到右走过这些房间。当然，当我们穿过房子的房间时，所有物体/特征物都会以固定的顺序弹出它们所属的位置。&lt;/p&gt;&lt;h2&gt;补充技巧&lt;/h2&gt;&lt;h3&gt;记忆名字&lt;/h3&gt;&lt;p&gt;首先，构建生动的图像可以帮助我们记住他人的名字。举例来说，假设有一个叫做「Baker」的人，我们会想到一个面包师在烤箱前揉面团的场景，而不仅仅是他的名字。这将触发我们的大脑形成写实的记忆，从而更容易记住他的名字。&lt;/p&gt;&lt;p&gt;其次，四个 C 的方法可以帮助我们有效地记忆新的名字。首先是「集中」（Concentrate），要大声说出这个人的名字，并重复它。然后是「创造」（Create），像「Baker」的例子一样，用生动的图像创造出这个名字。第三步是「连接」（Connect），将这个图像与这个人的面部特征或其他显著特点进行连接。比如有个同事叫 Janice，她有冰冷的蓝眼睛，那就想象冰柱从她的眼睛里飞出。最后一步是「持续使用」（Continuous use），意指要经常性地回顾并使用这些名字，比如可以把这个人的名字写在日记中，或将他们添加到你的社交媒体联系人中，这样可以帮助你更好地记住这些名字。&lt;/p&gt;&lt;p&gt;总结上述方法，我们可以看到这是一个非常有效的策略来提高我们记忆别人名字的能力，通过使用生动的图像，集中注意力，创造记忆，连接记忆点和持续使用，我们可以更好地记住每一个遇见的人的名字。&lt;/p&gt;&lt;h3&gt;记忆数字&lt;/h3&gt;&lt;p&gt;图形化和故事化的方式来记忆一串随机数字：5489206。在这个例子中，为了将数字转化为一个可记忆的故事，我们首先给每个数字分配一个唯一的图像：例如，为了记住数字 5，我们可以想象一个鱼钩；数字 4 可以与旗子相关联；8 可以想象成葫芦，9 是小花猫，2 是小黄鸭；0 是太阳帽，6 是勺子。&lt;/p&gt;&lt;p&gt;然后，我们将这些图像放在一个熟悉的环境中进行编码，例如，在你的卧室里。在这个环境中，每个数字图像都与环境中的对象相互作用：例如，你可能会想象床分开并出现了一个鱼钩（5），然后旗子（4）在一旁挥动。这个鱼钩钓起了一个葫芦（8），葫芦跌落并吓醒了书桌上的小花猫（9）。然后小花猫撞到衣柜，衣柜被打开，流出了水，小黄鸭（2）在里面游泳。而你戴着太阳帽（0）乘坐勺子形状的船（6）去追小黄鸭。&lt;/p&gt;&lt;p&gt;通过这种方式，我们将一串无意义的数字转化为一个有趣的、图像丰富的故事，使得我们更容易记住这串数字。这种方法混合了图像、故事和环境因素，使记忆过程更具吸引力和形象化，从而提高记忆效果。&lt;/p&gt;&lt;h3&gt;记忆冗长文本&lt;/h3&gt;&lt;p&gt;一种记住冗长文本的有效方法是利用图像和情感化策略。首先，将信息情绪化，利用你的创造力把它变成一个栩栩如生的影像或故事。例如，你在学习西班牙语单词「pollo」（意为「鸡」）。你可以想象自己骑着一只庞大的鸡玩马球，这样就永远不会忘记这个单词。同样，如果你想记住澳大利亚首都堪培拉（Canberra），尝试想象一只袋鼠（KANgaroo）正在吃浆果（BERRies）。&lt;/p&gt;&lt;p&gt;为了使你的图想象显得更加生动且难以忘却，你可以使用「SEE」方法：感官（Senses），夸张（Exaggeration），和活力（Energize）。信息通过我们的感官进入我们的大脑。所以，试图记住「horse」这个词时，你可能想象其皮肤的质地，它的气味，甚至它的口感。创建出一个多感官的影像比记忆单凭五个字⺟要容易得多。&lt;/p&gt;&lt;p&gt;构建这个影像时，应该尽量夸张。你更可能记住穿着燕尾服的巨大粉红马，而不是普通的马。逻辑在这里并不重要，关键是创造出有趣且夸张的影像。性感或有趣的图像尤其有效，因为这些是我们的大脑最容易记住的类型。&lt;/p&gt;&lt;p&gt;然后要给你的图像注入活力。比如，你可能会想象一匹马全速冲向日落，相比静静站在马厩里的马应该更吸引你的注意力。加入动作可以使需要记忆的信息更加生动。&lt;/p&gt;&lt;p&gt;你也可以将情绪分配给要记忆的诗歌或散文。例如，奥地利记忆大师科琳娜·德拉什尔用感情代替图像来记忆长诗。她把诗歌分成几部分，并为每一节分配一个特定的情绪，把原本抽象的文字变得充满情感，通过情感来串联起诗歌的不同部分，让其变得更易于记忆。例如，对于描绘春天的部分，她可能会将其与坠入爱河的感觉相联系，而对于带有愤怒情绪的部分，她可能会将其与冬天的形象联系起来。&lt;/p&gt;&lt;p&gt;总的来说，通过利用你的想象力以及将情绪融入记忆过程，可以让要记住的信息变得更加生动且易于记忆。&lt;/p&gt;&lt;h2&gt;补充：VR 辅助&lt;/h2&gt;&lt;p&gt;随着位置记忆在记忆方法中的逐渐崭露头角，近些年来，人们也想方设法的通过一些外部工具来锻炼这种能力。人们在使用位置记忆法来记忆的时候，遇到的最大的挑战是，该法需要个体具有较强的空间想象力、创造力以及良好的视觉化能力，从而通过想象构建一个形象鲜明、稳定且具有一定复杂性的建筑物，这对初学者来说尤为困难。&lt;/p&gt;&lt;p&gt;已有的研究显示，VR 辅助记忆宫殿法对学生记忆能力提高的效果优于经典记忆宫殿法，并且学生的记忆能力随着训练强度的增加或训练时间的延长，均能显著提升并达到稳定状态。随着训练强度的增加和训练时间的延长，学生运用 VR 辅助记忆功能宫殿法的能力均能提高，更高强度的训练能使学生记忆能力在更短时间内达到最佳状态。&lt;/p&gt;&lt;p&gt;VR（虚拟现实）技术辅助的记忆宫殿方法已证明能显著提升记忆能力，因此，为其在多种场合的操作提供了可能。如，学生，无论学术水平或专业背景如何，都可以使用 VR 技术打造自己的记忆宫殿，以快速有效地记住术语、命名和专业知识。对记忆比赛选手而言，他们可以借助该方法创建包含丰富主题和大量记忆点的虚拟环境来应对各种记忆比赛挑战。另外，使用 VR 辅助的记忆宫殿策略也可用于治疗那些因年龄或神经性疾病带来的记忆问题，成为他们康复训练的有效工具。&lt;/p&gt;&lt;p&gt;尽管 VR 辅助的记忆宫殿方法有很多优点，但仍存在一些挑战。首先，VR 技术的成本相对较高，并未达到计算机、智能手机以及平板电脑等设备的普及水平，这在一定程度上限制了该方法的广泛应用。其次，一部分学生在使用 VR 设备时可能会出现眩晕和恶心的不适感，这降低了他们使用这种方法的意愿。当然了，随着科技的发展，我们可以期待能有更便宜、用户体验更好的 VR 设备的出现，从而解决这些问题。&lt;/p&gt;&lt;h2&gt;总结&lt;/h2&gt;&lt;p&gt;通过复习，我们能够防止自己遗忘学习的信息。当你完成学校教育后的两年时间里，据研究发现，你大概只记住了相当于三周时长的课程内容，也因此，没有进行记忆训练，忘记大部分学习过的内容是十分常见的情况。总的来说，没有将学习内容通过复习反复加以巩固，所有的学习努力很可能会白白浪费。&lt;/p&gt;&lt;p&gt;每次当你重温掌握的信息时，该信息在你大脑中的印象就会加深。因此，为确保你永远记得所学的内容，你应试图延长每次复习的间隔。比如，新学的内容应在一天、三天、七天后等进行复习，然后在两个月和三个月后再复习两次。&lt;/p&gt;&lt;p&gt;&lt;a href="https://sspai.com/post/80746" target="_blank"&gt;减少在社交媒体上的时间，保持专注于当前任务，你会发现获取新信息变得更加容易。很快，你就会发现，通过使用自己学到的记忆技巧，你甚至不需要写下每周的购物清单！&lt;/a&gt;&lt;/p&gt;&lt;p&gt;例如，查看电子邮件、在社交媒体上回应消息——这些通常都是表层工作，是一类非认知要求、经常在分心状态下执行的后勤任务。它们可能让人感觉良好，但是在一天结束的时候，并没有太多实质性的产出。&lt;/p&gt;&lt;p&gt;最后，我们也不能忽视记忆方法的缺点，例如，创建和记忆「记忆宫殿」需要花费不少的时间和精力，因此也许并不适合快速记忆大量信息的情况。另外，这需要较强的想象力和视觉化能力，不是每个人都能轻易掌握。然而这种记忆法的优点也是显而易见的，它是一种经过测试，被证实有效的记忆辅助技巧，帮助我们记住包括数字、名字、事件等各类信息。此外，通过构建有趣的故事和场景，这种记忆法有助于我们理解和记忆信息，同时还能提升我们的想象力和创造力。就诸如教育和日常生活这样的领域，它也可以发挥广泛的应用。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;参考资料&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Foer, J. (2011). &lt;i&gt;Moonwalking with Einstein : a journey through memory and the mind&lt;/i&gt;. Allen Lane.&lt;/li&gt;&lt;li&gt;Horsley, K., &amp;amp; Tck Publishing. (2016). &lt;i&gt;Unlimited memory : how to use advanced learning strategies to learn faster, remember more and be more productive&lt;/i&gt;. Tck Publishing.&lt;/li&gt;&lt;li&gt;Konnikova, M. (2014). &lt;i&gt;Mastermind&lt;/i&gt;. Canongate.&lt;/li&gt;&lt;li&gt;Lea, G. (1975). Chronometric analysis of the method of loci. &lt;i&gt;Journal of Experimental Psychology: Human Perception and Performance&lt;/i&gt;, &lt;i&gt;1&lt;/i&gt;(2), 95–104. &lt;a href="https://doi.org/10.1037/0096-1523.1.2.95" target="_blank"&gt;https://doi.org/10.1037/0096-1523.1.2.95&lt;/a&gt;&lt;/li&gt;&lt;li&gt;McCabe, J. A. (2015). Location, Location, Location! Demonstrating the Mnemonic Benefit of the Method of Loci. &lt;i&gt;Teaching of Psychology&lt;/i&gt;, &lt;i&gt;42&lt;/i&gt;(2), 169–173. &lt;a href="https://doi.org/10.1177/0098628315573143" target="_blank"&gt;https://doi.org/10.1177/0098628315573143&lt;/a&gt;&lt;/li&gt;&lt;li&gt;刘博豪,宋润东,赵荣辉,李启鑫,程广浩,高嘉蔚... &amp;amp; 王涛.(2021).虚拟现实辅助的记忆宫殿法对大学生记忆力的影响. 中国医学教育技术(05),620-626. doi:10.13566/j.cnki.cmet.cn61-1317/g4.202105020.&lt;/li&gt;&lt;li&gt;左泽.神奇的记忆宫殿——位置记忆法【J】.大科技(科学之谜).2014(10):48-49&lt;/li&gt;&lt;li&gt;影歌.我们能像福尔摩斯一样拥有记忆宫殿吗【J】.方圆.2016(05):64-65&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;gt; 下载少数派 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，了解更多的新玩意 🆒&lt;/p&gt;&lt;p&gt;&amp;gt; 特惠、好用的硬件产品，尽在 &lt;a href="https://shop549593764.taobao.com/?spm=a230r.7195193.1997079397.2.2ddc7e0bPqKQHc" target="_blank"&gt;少数派 sspai 官方店铺 &lt;/a&gt;🛒&lt;/p&gt;&lt;/div&gt;</description><author>愚人哲</author><guid>https://sspai.com/post/81586</guid><pubDate>Wed, 30 Aug 2023 09:24:12 GMT</pubDate></item><item><title>每个人都需要的「第三方授权登录」查询与解绑指南</title><link>https://sspai.com/post/82550</link><description>&lt;div&gt;&lt;p&gt;长久以来，随着我们使用的网络服务越来越多，每一次注册时都要不厌其烦的填写各种个人信息甚至已经变成了一项单纯的体力劳动。与此同时，每个人手中的各类互联网账号数量自然也是水涨船高，想要准确、安全的记忆和储存这些关乎各种个人隐私的数据也逐渐成为了一门生意，近期更是涌现了比如通行密钥（Passkey）这样的新标准，尝试从新的角度来决解这个繁杂的注册和登录问题。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/30/91f03cef0f4ed558f812129d3543b202.jpg" src="https://cdn.sspai.com/2023/08/30/91f03cef0f4ed558f812129d3543b202.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;关联阅读：&lt;/strong&gt;&lt;a href="https://sspai.com/post/77376" target="_blank"&gt;无密码、更安全的未来，你该如何登录？通行密钥上手体验&lt;/a&gt;&lt;/p&gt;&lt;p&gt;不过比起新兴的 Passkey 规范，针对这个账号问题，其实还有一个更为我们所熟知的替代品——第三方账号授权登录。虽然你可能没有听说过 OAuth 2.0 ，但这个基于 2006 年成立的 OAuth 联盟提出的授权标准的的确确已经陪伴了我们十年了——上至 Sign in with Apple、下到微信登录小程序，里面其实都能看到 OAuth 协议的影子，并且我们每个人都已经在或多或少的使用它了。&lt;/p&gt;&lt;p&gt;使用这些主流的软件账号体系进行授权登录，以及直接关联创建账号，对于亟需新用户的中小规模服务商来说是一笔划算的买卖，最显著的原因莫过于这样可以极大的简化注册流程、变相提升用户转化率。但是对于我们这样的终端用户而言，授权登录却更像是一把双刃剑：一方面，简化的注册流程的确提高了我们的效率，不必再满浏览器的寻找还没有被自己用来注册过的邮箱；但是另一方面，快捷无感的注册流程也为个人隐私泄露埋下了隐患，毕竟这里原本就是在《使用协议》和《授权协议》里玩文字游戏的绝佳场所。在很多情况下，我们其实是不清楚自己究竟授权出去了哪些权利的。&lt;/p&gt;&lt;p&gt;正因如此，能够及时且透彻的了解自己做过哪些授权登录，究竟授权了哪些信息和权限，并且最重要的——了解怎样撤销授权实际上是保护个人信息安全的重中之重。&lt;/p&gt;&lt;h2&gt;国外御三家&lt;/h2&gt;&lt;h3&gt;Apple&lt;/h3&gt;&lt;p&gt;在个人隐私保护方面，Apple 一直是动作比较积极的，甚至前一阵还在投放过甄子丹老师领衔主演的广告片宣传自己的隐私保护。而伴随着 2019 年 Sign in with Apple 功能的推出，Apple 正式为 Apple ID 拓展了第三方代理登录的功能，并且得益于 Apple 强大的生态号召力，为 Apple ID 登录提供支持软件和网站的范围在过去四年间迅速扩大——更难得的是，很多国产软件也相继提供了支持。&lt;/p&gt;&lt;figure&gt;&lt;img alt="SXDxbiRDMo0snpxvJGWcEHqlnPe" data-original="https://cdn.sspai.com/editor/u_/cjnb07db34tel7u5qvo0" src="https://cdn.sspai.com/editor/u_/cjnb07db34tel7u5qvo0"/&gt;&lt;/figure&gt;&lt;p&gt;与此同时，Apple 为 Sign in with Apple 提供了非常透明的管理方式。除了在已经登录了 Apple ID 的设备上可以在账号管理页面中的「登录与安全」里调整之外，也可以直接在 appleid.apple.com 上面使用网页端管理。对于每一个使用了 Sign in with Apple 注册和登录的网络服务，Apple 会记录授权登录的时间、执行邮件转发的虚拟邮箱，以及非常明确的中止授权（解绑）按钮：&lt;/p&gt;&lt;figure&gt;&lt;img alt="OxJMbWHGYoxkUMx2X3lclgBonPf" data-original="https://cdn.sspai.com/editor/u_/cjnb07lb34tel7u5qvog" src="https://cdn.sspai.com/editor/u_/cjnb07lb34tel7u5qvog"/&gt;&lt;figcaption&gt;取决于系统版本，这个管理窗口的样式也可能有一些细微差别&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Google&lt;/h3&gt;&lt;p&gt;相比起 Sign in with Apple ，Google 自己的授权登录功能 Sign in with Google 的知名度在国内则显而易见的不是很高。但如果你正在使用 Twitter&lt;sup&gt;1&lt;/sup&gt;、Pinterest、Medium 之类的平台的话，在创建新账号的时候就可以看到使用 Google 账号的选项了：&lt;/p&gt;&lt;figure&gt;&lt;img alt="NkBCb0zdeooVaHxpSa2cwG4Ynud" data-original="https://cdn.sspai.com/editor/u_/cjnb07tb34tel4rd8m10" src="https://cdn.sspai.com/editor/u_/cjnb07tb34tel4rd8m10"/&gt;&lt;/figure&gt;&lt;p&gt;与 Sign in with Apple 略有不同的是，除了直接通过 Google 账号邮箱创建账号之外，Sign in with Google 在适配的 app 或者网站中也可以扩展到提供 Google Drive 或者 Google 相册的访问。同时，它的使用场景也不仅仅是注册新账号，许多 Play Store 上面的游戏会选择接入 Google Play Games 服务、直接将 Google 账号作为游戏存档同步和奖杯系统的依据（类似依靠 iCloud 同步的 Game Center ）——换句话说，Sign in with Google 的被授权登录方能够接触到的账号信息相比 Apple 多了不少。&lt;/p&gt;&lt;p&gt;同样的，想要检查和管理这些账号授权的话，Google 也提供了 Android 设备中的 Google 账号管理和网页两种入口：在 myaccount.google.com 中进入「数据与隐私」界面，就可以找到所有你授权过的第三方 app 与服务（Your connections to third-party apps and services），点击进入详情之后就可以看到它们获得了哪些授权、获得日期、这些权限的具体内容，并且可以一键撤销。&lt;/p&gt;&lt;figure&gt;&lt;img alt="TD1EbXitroFRE5xYZVCc21MgnUb" data-original="https://cdn.sspai.com/editor/u_/cjnb08db34tel4rd8m1g" src="https://cdn.sspai.com/editor/u_/cjnb08db34tel4rd8m1g"/&gt;&lt;figcaption&gt;比如这个订阅管理软件就被授权使用 Google Drive 备份和同步&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Microsoft&lt;/h3&gt;&lt;p&gt;比起 Apple 和 Google ，微软账号的第三方授权使用场景不是那么丰富，反而是在通过第三方邮件客户端中登录 Outlook 邮箱、或者一些可以关联到 OneNote 的 RSS 客户端或是连接到 OneDrive 的第三方应用使用的比较多。对于微软账号，最方便的管理方式就是直接在微软账号的 &lt;a href="https://account.live.com/consent/Manage" target="_blank"&gt;网页管理界面&lt;/a&gt; 上操作了。&lt;/p&gt;&lt;figure&gt;&lt;img alt="OG1RbC6KyoPfaPxxYWycMnpknbG" data-original="https://cdn.sspai.com/editor/u_/cjnb08lb34temvgn26og" src="https://cdn.sspai.com/editor/u_/cjnb08lb34temvgn26og"/&gt;&lt;/figure&gt;&lt;p&gt;在曾经授权过的 app 的界面里，微软会列出你授权使用的具体信息、授权时间和最后使用的时间，以及撤销授权的开关，无需二次确认即可直接移除权限。&lt;/p&gt;&lt;figure&gt;&lt;img alt="MZJibYLfmohDWTxYCVEcDfP3nPh" data-original="https://cdn.sspai.com/editor/u_/cjnb08tb34tel7u5qvp0" src="https://cdn.sspai.com/editor/u_/cjnb08tb34tel7u5qvp0"/&gt;&lt;/figure&gt;&lt;h3&gt;Facebook (Meta)&lt;/h3&gt;&lt;p&gt;众所周知，御三家指的其实是四所公司 🌝 。&lt;/p&gt;&lt;p&gt;从前两年的高调改名，到扎克伯格的低分辨率截图，再到最近 Thread 横空出世以及八角笼决斗，Meta 公司这几年「不务正业」的氛围似乎越来越浓了。不过哪怕 CEO 和元宇宙都不靠谱，包括 Facebook、Instagram 和 WhatsApp 在内的 Meta 软件生态依然是不容小觑的。此外，由于 Facebook 相比前面三家拥有明显的强社交属性，它同样也成为了很多游戏愿意支持的账号系统。&lt;/p&gt;&lt;figure&gt;&lt;img alt="CFxkbRHCMooPBcx58zbcYheXn2f" data-original="https://cdn.sspai.com/editor/u_/cjnb095b34tel4rd8m20" src="https://cdn.sspai.com/editor/u_/cjnb095b34tel4rd8m20"/&gt;&lt;/figure&gt;&lt;p&gt;想要管理用 Facebook 账号授权过的第三方服务的话，可以在 Facebook app 或者网页版的设置中进入「Apps and websites」，里面会列出你授权的具体信息，比如用户名、邮箱、性别信息或者生日等等，同时还给出了一些更加细分的调整项——你可以选择续期，禁用通知甚至是本次授权的可见性（比如向你的好友展示你用 Facebook 账号登录了 Pinterest ）——当然，也可以简单干脆的一键撤销授权。&lt;/p&gt;&lt;figure&gt;&lt;img alt="YgAdbdDfHoJVwBxN5mmc2t10ncZ" data-original="https://cdn.sspai.com/editor/u_/cjnb09lb34telve6qrdg" src="https://cdn.sspai.com/editor/u_/cjnb09lb34telve6qrdg"/&gt;&lt;/figure&gt;&lt;h2&gt;简中三小龙&lt;/h2&gt;&lt;h3&gt;QQ 与微信&lt;/h3&gt;&lt;p&gt;作为国内网络环境中授权登录的大头，QQ 和微信在第三方授权的管理上还算透明。虽然不一定提供了 Apple 或者 Google 那样便捷的网页管理入口（至少 QQ 可以通过 &lt;a href="https://connect.qq.com" target="_blank"&gt;QQ 互联&lt;/a&gt; 来管理），但是在对应的 app 内操作还是相对直观的：&lt;/p&gt;&lt;figure&gt;&lt;img alt="LDLWbvah5odi6wxlgQpcDTzFneg" data-original="https://cdn.sspai.com/editor/u_/cjnb09tb34temvgn26p0" src="https://cdn.sspai.com/editor/u_/cjnb09tb34temvgn26p0"/&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img alt="Opu2bDjdVoxljAxUWF9cxA9enLd" data-original="https://cdn.sspai.com/editor/u_/cjnb0a5b34temvgn26pg" src="https://cdn.sspai.com/editor/u_/cjnb0a5b34temvgn26pg"/&gt;&lt;figcaption&gt;这里使用的是 TIM ，在 QQ app 中的路径相同&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;然而，虽然管理便捷，但仍然有一个部分是我们无法忽视的：微信小程序。比起使用微信号登录第三方 app ，微信对于使用微信账号授权登录小程序的态度可以说相当的模糊和暧昧——虽然登录小程序很方便、登录同时也可以选择是否要隐藏自己的昵称和头像，但是后续想要对这些授权进行管理却麻烦很多。&lt;/p&gt;&lt;p&gt;对于这些乱七八糟的小东西而言，在微信 app 顶部的小程序界面直接把小程序删除是不会清除掉里面的相关数据的。除了在一部分比较良心的小程序里面可以直接相关的账号信息管理之外，我们想要调整微信账号对于小程序的授权，本质上只有一种方法：&lt;/p&gt;&lt;figure&gt;&lt;img alt="TDZmboHgaoggUuxs5Z7cZQTZnsz" data-original="https://cdn.sspai.com/editor/u_/cjnb0alb34tel4rd8m2g" src="https://cdn.sspai.com/editor/u_/cjnb0alb34tel4rd8m2g"/&gt;&lt;/figure&gt;&lt;p&gt;但小程序开发者会不会完全删除你的相关信息呢？至少根据微信官方提供的 &lt;a href="https://developers.weixin.qq.com/miniprogram/dev/framework/security.html#" target="_blank"&gt;小程序开发指引&lt;/a&gt; ，以及微信开放社区中的 &lt;a href="https://developers.weixin.qq.com/community/develop/doc/000c2ec3e148d093024e5374651800" target="_blank"&gt;一些问答&lt;/a&gt; 来看，删除与否依然最终是开发者决定的、微信官方不会强制执行：&lt;/p&gt;&lt;figure&gt;&lt;img alt="K2cDbQox7oxscCxFfascJbSqnVg" data-original="https://cdn.sspai.com/editor/u_/cjnb0atb34tel7u5qvpg" src="https://cdn.sspai.com/editor/u_/cjnb0atb34tel7u5qvpg"/&gt;&lt;/figure&gt;&lt;p&gt;对于这样的情况，只能建议以后在授权微信账号登录小程序的时候，一定要考虑清楚了再给。&lt;/p&gt;&lt;h3&gt;支付宝&lt;/h3&gt;&lt;p&gt;支付宝，或者说整个阿里系应用的账号授权管理，同样因为相互授权和支付宝小程序的加入而变得相当混乱。不过至少对于支付宝来说，管理授权信息的方式相比微信还是更直观一些，你可以在支付宝 app 的「设置 - 隐私 - 个人信息授权管理」中对绝大多数你使用支付宝账户登录的第三方 app（比如高德地图）和支付宝小程序（比如楼下沙县小吃的点餐二维码）进行管理：&lt;/p&gt;&lt;figure&gt;&lt;img alt="WMyYb26tsoXkrGxFoRkc0zTsnng" data-original="https://cdn.sspai.com/editor/u_/cjnb0b5b34tel7u5qvq0" src="https://cdn.sspai.com/editor/u_/cjnb0b5b34tel7u5qvq0"/&gt;&lt;figcaption&gt;可惜还是没有批量选择和撤权&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2&gt;其他服务商&lt;/h2&gt;&lt;h3&gt;新浪微博&lt;/h3&gt;&lt;p&gt;如果说前面的那些大服务商至少还有个态度可言的话，新浪微博对于第三方登录授权的管理「虽然称不上是简洁明了吧，至少也可以说是胡搅蛮缠」。想要查看和修改使用微博账号授权登录过的第三方服务，新浪在这里给你留下的路上可谓是：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;大坑套小坑，小坑套老坑，坑里还有水，水里藏着钉&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;因为此时最大的问题，并不是管理的路径有多么曲折，而是新浪微博现在完全不允许你查看和撤销授权登录记录了。此前，你还可以通过登录网页版微博，在个人主页的「我的应用」界面下对调整登录过的第三方 app ，但是在某一次网页版更新之后，新浪直接去除了这个入口：&lt;/p&gt;&lt;figure&gt;&lt;img alt="GFmcbZuagozug5xsOBFcHVDWnMh" data-original="https://cdn.sspai.com/editor/u_/cjnb0bdb34tel7u5qvqg" src="https://cdn.sspai.com/editor/u_/cjnb0bdb34tel7u5qvqg"/&gt;&lt;figcaption&gt;最左为一份 2019 年的百度知道回答，此时管理界面仍然可见；右侧为目前的微博网页版界面&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;不过新浪微博也算是个「端起碗来吃肉、放下筷子骂娘」的数典忘祖的典范了，其各种强推移动端 app 弃网页版于不顾的行为简直沁竹难书。那么按理说第三方授权管理如果在网页端找不到，在移动端 app 上面一定得有个管理入口了吧？&lt;/p&gt;&lt;p&gt;新浪说：&lt;strong&gt;我不仅能骂娘，我还要砸锅&lt;/strong&gt;：&lt;/p&gt;&lt;figure&gt;&lt;img alt="BNK7b6eFOonsZWx6j2Tc3abOnKg" data-original="https://cdn.sspai.com/editor/u_/cjnb0c5b34tel4rd8m30" src="https://cdn.sspai.com/editor/u_/cjnb0c5b34tel4rd8m30"/&gt;&lt;/figure&gt;&lt;p&gt;我们不知道新浪是从哪里获得的勇气，因为连微信这种历来喜欢胡搅蛮缠的家伙在第三方授权登录的管理上都没有端出这样一副架子。只能说以后在登录 app 的时候，千万不要选用微博账号做授权。&lt;/p&gt;&lt;h3&gt;豆瓣&lt;/h3&gt;&lt;p&gt;豆瓣本身对于其他账号系统的授权登录虽然支持范围不广——至今也就只有微信和微博——但是对于管理豆瓣账号的登录授权还是留下了空间的。与前面新浪微博的态度截然相反，你在豆瓣的手机 app 上反而看不到用豆瓣授权登录过的第三方服务，而是需要回到 &lt;a href="https://www.douban.com" target="_blank"&gt;网页版豆瓣&lt;/a&gt; 上，在「我的账号 - 账号管理 - 第三方应用授权」下面才能找到相对应的管理界面：&lt;/p&gt;&lt;figure&gt;&lt;img alt="A93NbWNu6opZntxytdvcrdvonjb" data-original="https://cdn.sspai.com/editor/u_/cjnb0cdb34temvgn26q0" src="https://cdn.sspai.com/editor/u_/cjnb0cdb34temvgn26q0"/&gt;&lt;/figure&gt;&lt;h3&gt;百度&lt;/h3&gt;&lt;p&gt;国内互联网三大家 BAT 中的「B」是如何从百度变成字节跳动（ByteDance）的，大家想必都能说出一二，随着百度在各个服务领域的受挫，时至今日仍然被高频率使用的似乎也就剩下百度网盘了，使用百度账号的授权登录自然也随之式微，目前基本上只拘泥于百度系内的 app 登录了。你可以在百度账号的设置页面中进入「授权管理」来调整第三方登录的授权。&lt;/p&gt;&lt;figure&gt;&lt;img alt="A8EBbdoC1oc57nxHQETcB2xpn8c" data-original="https://cdn.sspai.com/editor/u_/cjnb0clb34telve6qre0" src="https://cdn.sspai.com/editor/u_/cjnb0clb34telve6qre0"/&gt;&lt;/figure&gt;&lt;h3&gt;抖音&lt;/h3&gt;&lt;p&gt;说起字节跳动，支持抖音账号授权登录的 app 规模其实比想象中的还大一些——修图软件「醒图」和剪辑工具「剪映」都支持通过抖音账号直接登录，并且以此提供了一些收藏夹同步之类的联动功能。对于抖音账号的授权管理，你可以在 app 内的「账号与安全 - 授权管理」中查看和修改。&lt;/p&gt;&lt;figure&gt;&lt;img alt="Pc5QbFryao2A80xWMVjcpEYdnjc" data-original="https://cdn.sspai.com/editor/u_/cjnb0ctb34tel7u5qvr0" src="https://cdn.sspai.com/editor/u_/cjnb0ctb34tel7u5qvr0"/&gt;&lt;/figure&gt;&lt;h2&gt;授权管理的本质仍然是安全意识&lt;/h2&gt;&lt;p&gt;无感授权第三方登录这件事情可以说极大的简化了我们接触和使用新服务的流程，同时也很容易让我们对于类似的授权失去警惕。虽然在很多时候，「授权登录」并不会像语焉不详的用户协议那样不允许就不让你用，但这样四通八达的账号体系背后，很容易在不经意间流露出去的依然是我们自己的隐私——因为在很多时候，我们自己都没有意识到自己的网络账号在日积月累中留下了多少可以被分析的个人信息。及时对这些信息进行筛选和管理，是从源头上防止个人信息被滥用的关键一步。&lt;/p&gt;&lt;p&gt;如果你愿意更加深入的了解这一套基于 OAuth 的账号授权体系，可以参看来自 Cloudflare 的科普文章&lt;a href="https://www.cloudflare.com/zh-cn/learning/access-management/what-is-oauth/" target="_blank"&gt;《什么是 OAuth？》&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;gt; 下载 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;少数派 2.0 客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，解锁全新阅读体验 📰&lt;/p&gt;&lt;p&gt;&amp;gt; 实用、好用的 &lt;a href="https://sspai.com/mall" target="_blank"&gt;正版软件&lt;/a&gt;，少数派为你呈现 🚀&lt;/p&gt;&lt;/div&gt;</description><author>PostMeridy</author><guid>https://sspai.com/post/82550</guid><pubDate>Wed, 30 Aug 2023 07:00:00 GMT</pubDate></item><item><title>揭开电动牙刷头行业的遮羞布，这是一篇可能被全网限流的内容</title><link>https://sspai.com/post/81578</link><description>&lt;div&gt;&lt;p&gt;&lt;strong&gt;Matrix 首页推荐&lt;/strong&gt; &lt;/p&gt;&lt;p&gt;&lt;a href="https://sspai.com/matrix" target="_blank"&gt;Matrix&lt;/a&gt; 是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。&lt;/p&gt;&lt;p&gt;文章代表作者个人观点，少数派仅对标题和排版略作修改。&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;写在前面，这可能和少数派常见的内容题材不同，这也是一篇在其他平台被限流的现实内容，既然就只有少数人能看到，那不如发到少数派试试？&lt;/p&gt;&lt;p&gt;本人与相关行业无任何利益相关，但作为关系到口腔健康的电动牙刷刷头产品，消费者的基本权益必须得到尊重和保证。所以我打算把我遇到的相关事情如实描述出来，让已经购买和计划购买第三方电动牙刷刷头的消费者注意——带点干货科普、结合自身事件。内容略长，还请见谅。这篇六千字内容也算是响应市场监督管理局呼吁消费者维护自身权益的号召。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/07/29/article/0dd862e21b0c31770deb8455c55dce39" src="https://cdn.sspai.com/2023/07/29/article/0dd862e21b0c31770deb8455c55dce39"/&gt;&lt;/figure&gt;&lt;p&gt;据前段时间央视财经「第一时间」报道（央视网可回看，找不到的话评论我，我发你），市场监督管理总局抽查发现网售电动儿童牙刷不合格率 50%，最低磨毛合格率仅 12.9%，远低于标准。&lt;/p&gt;&lt;p&gt;可能有人也想了解市面上正规大厂的牙刷刷头磨毛合格率，通过查证，靠谱的原装品牌刷毛磨毛合格率通常在 98% 以上（能有 90% 以上就挺好了）。如果磨毛这个项目不合格，就有可能在刷牙过程中，损害口腔内的软组织、牙龈表面。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/07/29/article/63135080d1aa19ea55b01ff782358728" src="https://cdn.sspai.com/2023/07/29/article/63135080d1aa19ea55b01ff782358728"/&gt;&lt;/figure&gt;&lt;p&gt;这里先科普一个信息。2022 年 1 月 1 日，GB 39669-2020《牙刷及口腔器具安全通用技术要求》正式实施。该标准代替 GB 19342-2013《牙刷》、GB 30002-2013《儿童牙刷》和 GB 30003-2013《磨尖丝牙刷》中涉及安全的强制性内容，保留了有害元素、毛束拉力、颈部抗弯力、磨毛等安全要求，增加了邻苯二甲酸酯增塑剂和电动牙刷的电安全要求等新项目。目前这个强制性国家标准可以在国家标准全文公开系统或者其它渠道搜索查看和下载。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/07/29/article/25b232825e77ae8ffec3bd9de5910b2a" src="https://cdn.sspai.com/2023/07/29/article/25b232825e77ae8ffec3bd9de5910b2a"/&gt;&lt;/figure&gt;&lt;p&gt;该国标细则大部分测试项对于民众来说太过专业，普通消费者也难以直接检测，但其中有一个标准要求的测试门槛不高。那就是 GB 39669-2020 里的第 5.6.3.1 条细则——关于牙刷刷毛的磨毛基础标准。国标内还提供了 a 和 b 这两种（上图）是否达到磨毛标准的图例对比。&lt;/p&gt;&lt;p&gt;请大家记住这段强制性国标里对磨毛的描述图例，后面要考。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;第一次购买经历（天猫某品牌旗舰店）&lt;/strong&gt;&lt;/h2&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/07/29/article/e77c7a3a3816cc0e94738eb2cc2525b5" src="https://cdn.sspai.com/2023/07/29/article/e77c7a3a3816cc0e94738eb2cc2525b5"/&gt;&lt;/figure&gt;&lt;p&gt;在 2022 年的 3 月，因为自用的魅族电动牙刷所有原装刷头都用完了（这东西出来那会魅族还没被收购，仍然在各向发力），官方原装刷头配件又早已售罄，于是去天猫通过「适配 Meizu/魅族电动牙刷刷头 AET-01 声波替换美白清洁杜邦软毛」关键词，找了一家当初看上去销量和评价都还可以的某牌旗舰店，花了 28 元下单了这第三方的电动牙刷刷头。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/07/29/article/5f8d5ac400da008bc16ed91f6c4ccd96" src="https://cdn.sspai.com/2023/07/29/article/5f8d5ac400da008bc16ed91f6c4ccd96"/&gt;&lt;/figure&gt;&lt;p&gt;去年收到的图还留着。除了牙刷之外，还有做工单薄的漱口杯、牙刷支架、以及一张纸头。我大概知道了这家当时好评多的原因。并且这类以返现或者送礼为条件来诱导用户全五星晒图的行为其实也违反「反不正当竞争法」第八条第一款的规定：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;经营者不得对其商品的性能、功能、质量、销售状况、用户评价、曾获荣誉等作虚假或者引人误解的商业宣传,欺骗、误导消费者。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;对于这种扭曲商品真实性的行为，属于欺诈消费者，&lt;strong&gt;可按照消费者权益保护法第 55 条进行三倍赔偿，不满 500 元则按 500 元的最低标准赔偿&lt;/strong&gt;。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;*如果我向工商执法相关部门举报这诱导好评行为，商户可能会受到哪些处罚？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;根据「反不正当竞争法」第二十条：经营者违反本法第八条规定对其商品作虚假或者引人误解的商业宣传，或者通过组织虚假交易等方式帮助其他经营者进行虚假或者引人误解的商业宣传的，由监督检查部门责令停止违法行为，处二十万元以上一百万元以下的罚款；情节严重的，处一百万元以上二百万元以下的罚款，可以吊销营业执照。经营者违反本法第八条规定，属于发布虚假广告的，依照《中华人民共和国广告法》的规定处罚。&lt;/p&gt;&lt;/blockquote&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/07/29/article/571842f859743974577f17eaf0c255fb" src="https://cdn.sspai.com/2023/07/29/article/571842f859743974577f17eaf0c255fb"/&gt;&lt;/figure&gt;&lt;p&gt;先不继续普法，这里穿插一张我更早时候拍的图来方便后续对比参照。因为当时的手机正好内置了一颗超微距镜头，之前也好奇的拿来拍过给家里人买的其它电动牙刷刷毛。&lt;strong&gt;结合 6 月新闻报道的刷毛检测环节和 GB 39669-2020 里的第 5.6.3.1 条细则图例的参考&lt;/strong&gt;，可以看到无论是正规品牌的还是白菜价杂牌的总体都是做了刷毛磨圆，磨毛率很高(仅最后的杂牌 2 毛糙不太合格)。你们也可以找找那种手持迷你显微镜搭配手机镜头一样能拍出来。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/07/29/article/1e28c3317371a5cdf119d95bf1837213" src="https://cdn.sspai.com/2023/07/29/article/1e28c3317371a5cdf119d95bf1837213"/&gt;&lt;/figure&gt;&lt;p&gt;无论按照国标还是新闻报道实验室的辨认方式，这购买的第三方刷头几乎找不出一根合规的刷毛，不仅没有磨圆，连干净横截面的也都没有，都是尖锐毛刺，比前面一张截图里最差的杂牌2的图还不及，这也可能是很多购买刷头评论刷毛过硬不舒服的原因。这种完全不符合 GB 39669-2020 标准里第 5.6.3.1 条磨毛细则的东西，换你会入口吗？牙龈能不出血吗？&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/07/29/article/3725eae2a7c508f0eeafb31d300a48da" src="https://cdn.sspai.com/2023/07/29/article/3725eae2a7c508f0eeafb31d300a48da"/&gt;&lt;/figure&gt;&lt;p&gt;并且刷毛里面还掺杂黑色丝状杂质，用手掸不掉，疑似有部分注塑黏合进刷毛里。不管你怎么看，至少是引起我的强烈心理不适。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/07/29/article/cb5e551e110aa9c0fc638b8bba0c7d9d" src="https://cdn.sspai.com/2023/07/29/article/cb5e551e110aa9c0fc638b8bba0c7d9d"/&gt;&lt;/figure&gt;&lt;p&gt;在购买前看过刷毛的描述，这是当时的交易快照里相关描述图片，里面写了某牌磨圆刷毛。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/07/29/article/4af8db1b8e7e23a2983753bc1b784795" src="https://cdn.sspai.com/2023/07/29/article/4af8db1b8e7e23a2983753bc1b784795"/&gt;&lt;/figure&gt;&lt;p&gt;之前存证截图也都保留着，可以看到我购买前咨询确认过刷毛都是磨圆（问：刷毛顶部都有磨圆吗？答：有的）。收到货把显微放大的刷毛图发给店家，又回复 60% 磨圆率就是合格。后面把一张找不出一根磨圆的刷毛特写图发过去，问它刷毛有 60% 磨圆？还能堂而皇之的答复「有的」。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/07/29/article/b237aec9b96168c02e35fa8390c15e8f" src="https://cdn.sspai.com/2023/07/29/article/b237aec9b96168c02e35fa8390c15e8f"/&gt;&lt;/figure&gt;&lt;p&gt;无效沟通的最后还说不满意可以退货等等。我就特别不能理解，遇到问题，就说不满意退货退款。这样关闭订单，就能把产品不达标的事情当作不存在了？描述不符的劣质产品还能堂而皇之的继续卖？继续投诉到天猫平台客服，未看到对店家有惩戒性处罚，并告知平台并非执法机构，故而无法直接做出关店或者下架处理。但对这明显不符国标的牙刷头产品，后续也有投诉商户对应属地相关市场监督部门，给出答复概述为「营业执照合法，留存的电动牙刷头检验报告合法(我没看到过)，投诉人用自己微距镜头拍摄不予支持」。&lt;/p&gt;&lt;p&gt;这就是这第一次购买经历的结果。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/07/29/article/cee50a258b5ddfeff1b4afe697d01cbf" src="https://cdn.sspai.com/2023/07/29/article/cee50a258b5ddfeff1b4afe697d01cbf"/&gt;&lt;/figure&gt;&lt;p&gt;过了一年多，同链接里的商品依旧在售卖，只是详情页里关于刷毛磨圆的图片悄悄的删掉了。可能平台和商家等方面觉得只要删掉不符描述，做工再低劣的产品售卖也没任何问题。但是别忘了，&lt;strong&gt;针对有强制性国标 GB 规定的产品，即便销售页面未描述相关标准，也必须遵守&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;对这种处理结果，换你会怎么应对？去年工作忙，也不可能从包邮区带材料飞去山东菏泽实地举报，还没退掉的刷头就这么搁着积灰(平台方面目前能做的最大程度是处理仅退款。货物留着挺好，就当证据封存，方便后续可能的鉴定)。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;第二次购买经历（拼多多某旗舰店）&lt;/strong&gt;&lt;/h2&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/07/29/article/504b8d993aacf7ab717cd93740c136dd" src="https://cdn.sspai.com/2023/07/29/article/504b8d993aacf7ab717cd93740c136dd"/&gt;&lt;/figure&gt;&lt;p&gt;时间拉回现在，家人另一把京东京选小白电动牙刷的所有备用刷头也用完了，才用了一年多，官方原装刷头就显示无货了，又只能去网上买第三方刷头，这次用「替换京选 JX/ZAO 声波电动牙刷头小白 ET101/201 大白 ET301/306/ET109」关键词在多多平台选了某旗舰店 19.9 元入手了 4 支。(细心用户可能看到我拼单2次，另一次给另一把电动牙刷买的软毛刷，就是显微放大看是纯细尖那种，属于相关 GB 条例的 5.6.3.2 的磨尖丝牙刷头范畴，不在本次磨圆标准讨论范围)。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/07/29/article/44c2f7aa3e9c7e81016c9b65b843c03d" src="https://cdn.sspai.com/2023/07/29/article/44c2f7aa3e9c7e81016c9b65b843c03d"/&gt;&lt;/figure&gt;&lt;p&gt;到货如图，黄色盒子里放着塑封的牙刷头，还有附带一个牙刷置物收纳架。说实话，我宁可东西便宜点，或者把成本坐进刷头，提高下品质，就不怎么想要这类额外附带的东西。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/07/29/article/f9625ded795b246840c467ba6d5d0d4e" src="https://cdn.sspai.com/2023/07/29/article/f9625ded795b246840c467ba6d5d0d4e"/&gt;&lt;/figure&gt;&lt;p&gt;因为之前老的原装刷头都已经被家里人干废断掉了，而多多买的这第三方刷头已经被家里人装到电动牙刷上了。但还是补一张放在一起的图给大家看下对比，方便结合后面的图看细节。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/07/29/article/923f20ff073408d394e8197be0f1d0aa" src="https://cdn.sspai.com/2023/07/29/article/923f20ff073408d394e8197be0f1d0aa"/&gt;&lt;/figure&gt;&lt;p&gt;我让家里人别着急用，在我给身边人看了这组对比图后，都有被惊到。大家也可以看看我用带超微距镜头手机拍的京选老刷头刷毛和刚收到的这家牙刷头的刷毛。尽管卖家页面写了刷毛磨圆处理，但通过直观分辨对比，这带毛刺的刷毛显然没有按标准磨圆处理，完全没有达到 GB 39669-2020 里的第 5.6.3.1 条里的磨毛细则，也和销售页面标注明显描述不符（&lt;strong&gt;针对有强制性国标要求的产品，即便页面未描述出的相关要求，也必须遵守）&lt;/strong&gt;。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/07/29/article/1dbce81b236c9cb66246a4461b115659" src="https://cdn.sspai.com/2023/07/29/article/1dbce81b236c9cb66246a4461b115659"/&gt;&lt;/figure&gt;&lt;p&gt;然后就按流程和多多的卖家沟通，这边的卖家不像之前天猫那家指鹿为马，也没多说，直接回复不喜欢可以退款来回应。本着顺其自然，适时较真的人生态度，也继续投诉到多多的平台客服，提交材料并说明了几点诉求，平台客服首先帮我安排退款，接下来对于销售描述不符等针对商家的问题，说了帮我升级专员处理。&lt;/p&gt;&lt;p&gt;但截稿前，连续 5 次反复联系要求专员电话沟通，但次次都是通过 APP 单方面告知的处置结果（模板式回复），我作为消费者的具体诉求并未解决，店铺依旧在售不合规商品。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;第三次购买经历（京东超市某旗舰店）&lt;/strong&gt;&lt;/h2&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/07/29/article/46aab1d04ecaa1959bd2cf438453b25a" src="https://cdn.sspai.com/2023/07/29/article/46aab1d04ecaa1959bd2cf438453b25a"/&gt;&lt;/figure&gt;&lt;p&gt;有了前两次的经历，担心再买到不靠谱的第三方刷头，所以这次下单的是京东京选客服推荐的链接。这家不仅是目前销量最高的，应该还是唯一一家进入京东超市的适配 ET101 小白智能电动牙刷头，目前标价 49 元，显示京东发货厂家售后。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/07/29/article/8c855031552ea8f56152f7500f94b12e" src="https://cdn.sspai.com/2023/07/29/article/8c855031552ea8f56152f7500f94b12e"/&gt;&lt;/figure&gt;&lt;p&gt;京东仓发货的就是快，深夜下单，第二天就到货了。当看到还有附送牙刷杯的小玩意，心生警觉，因为每次买带赠品的刷头，都会有问题（后来再回想，也不对，只要是买的第三方刷头，其实都有问题）。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/07/29/article/0a3328c6f443c9676013c16e84f68add" src="https://cdn.sspai.com/2023/07/29/article/0a3328c6f443c9676013c16e84f68add"/&gt;&lt;/figure&gt;&lt;p&gt;当我把显微镜头贴上去拍图，脑子里首先现到的是「可能市面很难买到刷毛磨圆处理合格的第三方牙刷刷头了」。是不是第三方牙刷刷头不把自己按照牙刷标准对待？矮中取强的话，京东超市里的这家刷头末端相对有些许弧度的雏形，的确比起前面两家稍微好些，毕竟售价也是三家里面最贵的。但这刷毛末端的毛刺、杂质、棱角依旧可被频繁发现。&lt;/p&gt;&lt;p&gt;在 GB 39669-2020 里的第 5.6.3.1 条磨毛细则中，就我个人观察，仍能归类到不合格的 b 类图例。针对描述不符，产品不合规的疑问，按流程同样先找店铺客服，一轮无效沟通后(这里也不怪店铺客服，毕竟有些可能是真的不懂业务和国标细则)，继续走京东平台投诉流程。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/07/29/article/4cccd842f4598df2fcbca71eda01af9f" src="https://cdn.sspai.com/2023/07/29/article/4cccd842f4598df2fcbca71eda01af9f"/&gt;&lt;/figure&gt;&lt;p&gt;这商家在平台举证页面直接上传了检验符合标准的报告，京东方面打我电话告知商家有检测报告，问我这个消费者是不是考虑自行送检？如果认真看完前面我写的，你们应该也看出了这份报告的多处存疑了吧？&lt;/p&gt;&lt;p&gt;既然京东平台专员不懂业务不做核实，咱帮帮他——仔细看，我发现这个牙刷检测报告是一家锁具公司提交（芜湖固美锁具销售有限公司），检测机构按照玩具安全标准（GB 6675.4-2014）做检测判定依据。并且根据这份报告的追溯检测公司(浙江绿驴检测技术服务有限公司)，在绿驴检测官网的报告查询界面输入商户提交的这份报告的编码（ZJLL200300582）无法查询到报告任何信息及细节。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;我相信厂家不敢伪造检测报告，但提供这种混淆检测项目报告误导消费者和京东平台等行为合规吗&lt;/strong&gt;？&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;一些客观细化阐述：&lt;/p&gt;&lt;p&gt;■存疑1：报告并未描述具体规格型号，就算不同接口的毛刷材料通用，至少会有两种区别，平形/异形毛型、磨尖丝刷毛。检测报告显示样品数量只有1支，那究竟是哪类的刷毛检测？&lt;/p&gt;&lt;p&gt;■存疑2：检测报告参考标准是GB 6675.4-2014，前面说过，这是玩具安全标准。按照检测日期(2020年3月)，牙刷检测根据不同牙刷类型，应该遵循的GB 19342-2013《牙刷》、GB 30002-2013《儿童牙刷》和GB 30003-2013《磨尖丝牙刷》中的至少一家国标。目前这检测遵循标准并不是针对刷毛的。&lt;/p&gt;&lt;p&gt;■存疑3：2022年1月1日，GB 39669-2020《牙刷及口腔器具安全通用技术要求》正式实施。该标准代替GB 19342-2013《牙刷》、GB 30002-2013《儿童牙刷》和GB 30003-2013《磨尖丝牙刷》。2020年，就算有重新找到正确项目的检测报告，也应以2022年实施的新规重新检测。&lt;/p&gt;&lt;p&gt;■总结：应根据2022年实施的GB 39669-2020新规，检测我们认定不合规的这款具体型号牙刷头，我只需要看到新规里的第5.6.3.1条细里的磨毛相关标准的检测报告，并且提供页面可查询的正确报告编码。后面我也给专员补充了新规材料细则描述。&lt;/p&gt;&lt;/blockquote&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/07/29/article/9c4992cd04087db0595cb83019d07c92" src="https://cdn.sspai.com/2023/07/29/article/9c4992cd04087db0595cb83019d07c92"/&gt;&lt;/figure&gt;&lt;p&gt;与此同时，我发现该商户页面里的营业执照地点居然也是包邮区，遂驱车前往属地的市场监督管理局，当面反馈了该商户的问题，截稿目前暂无结果，核查走流程需要些日子。但我这举报流程还是要走的，万一出现了有利消费者的结果了呢？&lt;/p&gt;&lt;p&gt;再次联想到我文首提过的前段时间那个新闻，就是&lt;strong&gt;市场监督管理总局抽查发现市面电动儿童牙刷不合格率 50%(其中最低磨毛合格率仅 12.9%，远低于标准)&lt;/strong&gt;，合理推测两个现状：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;儿童电动牙刷这种原装产品不合格率都这么高，成人牙刷的各种第三方刷头配件合格率可想而知&lt;/li&gt;&lt;li&gt;市场监督管理总局可能已经发现了电动牙刷市场的一些乱象，但我一普通人的力量有限，如果大家都能及时发现并投诉起来捍卫自己的权益，也能让相关部门更早的重视刷头配件乱象&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;后续&lt;/h2&gt;&lt;p&gt;截至目前，更新一下最新状态：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;天猫那家商户&lt;/strong&gt;，目前还是正常售卖这款牙刷头，去年在线投诉到山东菏泽市场监督管理局未采信那次，才过了 1 年多，事情和材料以及物证都还清楚的很，前些日子又重新走 315 平台投诉，并附上了相关国标和法律条款，帮助相关部门有法可依的处理。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;拼多多那家商户&lt;/strong&gt;，对于售卖不符合强制性国标产品现象，平台仍未处理，商家目前还在正常售卖这款牙刷头。最后第 6次 要求的转专员联系，终于变成了电话通知，没错，只是单方面的把 APP 里的通知消息，换成人来反复朗读的单方面告知，居高临下的姿态，并不接受沟通，也不转接给能沟通的部门，估计只有变成重大舆情影响，才会考虑依法处理。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;京东超市那家商户&lt;/strong&gt;，这几个平台都是差不多答复，对于销售不符合强制性国标产品，需要相关部门介入才能处理，对于用户提供的个人材料无法判定。对于商户在纠纷举证中一开始甩出的基于玩具安全检测标准出的牙刷检测报告来混淆平台和用户判断的行为，平台方面说内部有一定的处理机制，但不便告知用户。那就继续等待属地市场监督管理局的结果。&lt;/p&gt;&lt;p&gt;另外，京东那边的商家又上传了一份检测报告，就再补充给大家解闷：这次检测报告是来自广东省中鼎检测技术有限公司，报告编号为 CTT2306011120CN，检测企业官网依旧查询不到结果。虽然这次检测标准，检测时间都没错了，但疑惑的是当时我在京东平台来回反复看，就是没有描述检测品牌和型号，最后平台专员发现问题，报告缺少第一页，商户最后上传了第一页，我看了下，品牌名字叫美弘……Emmm，我记得前一份玩笑一样的检测报告（按照玩具标准检测），虽然也没写牙刷具体型号，但至少是写上它们的品牌「*仕」，这次连品牌都没对上，也没具体型号描述。你们怎么看呢？&lt;/p&gt;&lt;p&gt;先防御性补充一波：猜测可能有些现实的人会说，你这数码博主去弄这些东西有意义吗？为了钱还是闲的？&lt;/p&gt;&lt;p&gt;首先，不差那几个钱、本身价格也不贵，有两家也主动退款。拼多多还不管我同不同意，强塞了 100 元无门槛券。但这并不能改变商品不符合强制性国标产品现状，也不能改变商家持续销售描述不符的劣质不合规产品。这种侵害消费者权益的事情，我必须坚持投诉，第一家在去年投诉时还不知道相关国标规定，今年我就开始学习相关条例，用更规范精准的描述来持续投诉。&lt;/p&gt;&lt;p&gt;这本身就是有价值的行为，不要被商家拿捏你们的时间成本，适时较真下，让人生没白来。对了，做一个脱离真实体验的评测博主，那还有什么意思？文章里有些描述如果不严谨的，欢迎评论补充。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/07/29/article/2cddb112a7cd3e1a3187a00bc23a0923" src="https://cdn.sspai.com/2023/07/29/article/2cddb112a7cd3e1a3187a00bc23a0923"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;追加科普小贴士&lt;/strong&gt;：前面我曾经顺带提过牙刷刷头末端有两种不同规格，对应也有不同标准，前面我的这 3 次不愉快的购买经历中的牙刷都是常规的需磨毛牙刷，如果希望更软一些，可以选择磨尖丝的软毛刷头(前提是你的刷头有提供两种规格)，这种磨尖丝工艺的踩坑概率相对比磨毛工艺的牙刷小，但也不是软毛就随便买，注意甄别。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/07/29/article/97373a6f90a247ca3014af6e010ddd9b" src="https://cdn.sspai.com/2023/07/29/article/97373a6f90a247ca3014af6e010ddd9b"/&gt;&lt;/figure&gt;&lt;p&gt;最后解开很多人一个疑问，&lt;strong&gt;电动牙刷头还能买吗？当然可以！买电动牙刷一定要买销量最高的那几款型号或者通用刷头的款式，&lt;/strong&gt;这样对应的原装刷头能持续供应的时间也久一些，因为通过我的多款电动牙刷使用经历，原装刷头遇到这种描述不符的劣质现象概率很低。如果原装停产，不得不买第三方的，或你已经遇到这种恶心低劣刷毛的问题，直接投诉到平台客服吧，这里注意，千万不要被店铺和平台客服混淆概念，这不是质量问题退换货场景，投诉的是虚假宣传，描述不符，销售不符合强制性国标产品的事情。只有大家都发声出来，才能维护我们自身的基本权益。也能让更多人避坑。&lt;/p&gt;&lt;p&gt;不求大伙能有打假的「铁头惩恶扬善」那种气魄，但求&lt;strong&gt;适时较真&lt;/strong&gt;，也有遇到相同情况的消费者可以去市场监督局网站在线或者邮件投诉，不管结果如何，人多力量大，相关部门就能更早的重视刷头配件乱象，才有可能让牙刷刷头产品重新守住 GB 国标底线。自己作为个人消费者，不可能大批量采买各品牌的第三方刷头，从目前这三次不愉快的购买经历，第三方刷头行业现状可见一斑。我为了这几个各渠道投诉沟通等消耗的人力成本至少超过刷头价格百倍，但如果你们支持关注，后面我可能继续跟进这个问题。看看最终能不能找出一家合规的第三方刷头品牌。&lt;/p&gt;&lt;p&gt;因为我真的不相信，这种低成本的刷头，前些年杂牌电动牙刷都能有很好的磨毛标准，为什么这两年就都做不到了呢？&lt;/p&gt;&lt;p&gt;&amp;gt; 下载少数派 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，了解更多的新玩意 🆒&lt;/p&gt;&lt;p&gt;&amp;gt; 特惠、好用的硬件产品，尽在 &lt;a href="https://shop549593764.taobao.com/?spm=a230r.7195193.1997079397.2.2ddc7e0bPqKQHc" target="_blank"&gt;少数派 sspai 官方店铺 &lt;/a&gt;🛒&lt;/p&gt;&lt;/div&gt;</description><author>iArter</author><guid>https://sspai.com/post/81578</guid><pubDate>Wed, 30 Aug 2023 02:54:12 GMT</pubDate></item><item><title>派早报：Apple 发布会将于 9 月 13 日举行、Edge 浏览器将精简功能等</title><link>https://sspai.com/post/82543</link><description>&lt;div&gt;&lt;h2&gt;你可能错过的新鲜事&lt;/h2&gt;&lt;h3&gt;Apple 特别活动将于 9 月 13 日举行&lt;/h3&gt;&lt;p&gt;8 月 30 日凌晨，Apple 通过官方公众号宣布 2023 年秋季特别活动将于北京时间 9 月 13 日凌晨 1 点举行，届时 Apple 官方网站将按照惯例提供活动直播。&lt;a href="https://mp.weixin.qq.com/s/1IeKBcn0gVlsmt9LFBHMcA" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;figure&gt;&lt;img alt="BoJCbQrLfoykSHxwdzAcbPfsnCg" data-original="https://cdn.sspai.com/editor/u_/cjn3m0db34telve6qpug" src="https://cdn.sspai.com/editor/u_/cjn3m0db34telve6qpug"/&gt;&lt;/figure&gt;&lt;h3&gt;Edge 浏览器将进行功能精简&lt;/h3&gt;&lt;p&gt;根据微软近期在 Edge 浏览器 Beta 频道的发行说明，该浏览器将在下一个版本中弃用包括数学求解器、图片词典、引文、语法工具以及儿童模式在内的五项功能，以改善最终用户体验并简化「更多工具」菜单的使用体验。&lt;a href="https://www.theverge.com/2023/8/28/23849552/microsoft-edge-feature-remove-v117-beta" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Google 相册照片加密功能支持云同步&lt;/h3&gt;&lt;p&gt;8 月 29 日，Google 通过官方博客宣布为 Google 相册「已锁定的文件夹」照片加密功能引入云同步支持。照片加密功能于 2021 年上线，此前支持在 Android 设备上本地存储并通过生物识别验证加密，本次更新后已加密照片将支持跨设备同步，iOS 和网页版也将同时获得照片加密功能支持。&lt;a href="https://blog.google/products/photos/locked-folder-cloud-backup/" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;OpenAI 推出企业级 ChatGPT 服务&lt;/h3&gt;&lt;p&gt;8 月 29 日，OpenAI 宣布推出面向企业的 ChatGPT Enterprise 服务。据 OpenAI 官方表示，该版本是目前最为强大的、基于 GPT-4 的 ChatGPT 版本，在取消所有使用限制的同时，执行速度也提高了两倍；该版本还支持 32k 上下文以便处理更多用户请求和文件内容，同时还提供高级数据分析（此前叫做 Code Interpreter）和大规模部署能力。&lt;/p&gt;&lt;p&gt;隐私和安全方面，ChatGPT Enterprise 声称所有数据都会经过加密处理，用户对数据拥有绝对控制权且相关内容不会用于训练 OpenAI 模型。&lt;a href="https://openai.com/blog/introducing-chatgpt-enterprise" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;《OPUS》系列新作公布预告及游戏画面&lt;/h3&gt;&lt;p&gt;8 月 29 日，独立游戏团队 SIGONO 放出《&lt;a href="https://sspai.com/post/43936" target="_blank"&gt;OPUS&lt;/a&gt;》系列最新作《OPUS：心相吾山》的最新前导预告片及游戏画面。《OPUS：心相吾山》剧情确认由《OPUS》系列主笔，前作《龙脉常歌》编剧、美国独立游戏节(Independent Games Festival）叙事大奖荣誉提名剧本家 Brian Lee 执笔，讲述一个剧情导向的多结局冒险故事，玩家将扮演迷失在幻境的主角，透过摄影去挖掘世界隐藏的种种谜团，最后找到回家的办法。开发团队表示《OPUS：心相吾山》将继承 OPUS 系列作品的精神，在悲伤中带有温暖的氛围中讲述一段自我追寻的故事。该游戏目前已上线 &lt;a href="https://sigono-dot-yamm-track.appspot.com/2e8fJOT2q4w9y2vekagYPFYocfpTS45RbuMnOhT2rMF7obJc_igFfs8Cu7NjSlADt4bDTbpxvZER-LQqw_oboaVZl2sXHhh3JzyXBhibKBk3TGscRvOHinD_KqB9X-wlcDmTmAT8uvGNK4CG9cCazMN5gDZZ9RRV7lAbt7pi-VckH-x5OI9vP9Yu0QE9ieE52AYE" target="_blank"&gt;Steam 页面&lt;/a&gt;。&lt;a href="https://www.bilibili.com/video/BV1Du411N7M1/" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;figure&gt;&lt;img alt="PFUob00OvoiydYxurnScveQmn2t" data-original="https://cdn.sspai.com/editor/u_/cjn3m0lb34temvgn256g" src="https://cdn.sspai.com/editor/u_/cjn3m0lb34temvgn256g"/&gt;&lt;/figure&gt;&lt;h3&gt;看看就行的小道消息&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;据 9to5Google 报道，Google 正打算通过更多的操作系统更新来提高 Pixel 8 机型以及未来设备的更新维护周期，新的更新策略有望在维护时长方面超过目前三星的旗舰设备。&lt;a href="https://9to5google.com/2023/08/28/google-pixel-8-android-os-updates/" target="_blank"&gt;来源&lt;/a&gt;&lt;/li&gt;&lt;li&gt;知名分析师郭明錤的最新爆料称，Apple 目前为 iPhone 15 Pro Max 规划的出货量约占整个 iPhone 15 系列的 35-40%，他同时指出，推动这一决策的主要原因是 5-6 倍潜望式长焦镜头将在 iPhone 15 Pro Max 机型上独占。&lt;a href="https://www.macrumors.com/2023/08/28/kuo-iphone-15-pro-max-shipment-share/" target="_blank"&gt;来源&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;少数派的近期动态&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Context 众筹火热进行中，低至 53 折、会员可享额外优惠。&lt;a href="https://sspai.com/post/82252" target="_blank"&gt;&lt;strong&gt;前往了解&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt; | &lt;/strong&gt;&lt;a href="https://sspai.com/bullet/1692689059" target="_blank"&gt;&lt;strong&gt;有奖讨论&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;少数派从科隆游戏展现场参观归来。阅读&lt;a href="https://sspai.com/post/82466" target="_blank"&gt;&lt;strong&gt;参展札记&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;友台《两颗皮蛋》（皮蛋漫游记）与少数派创始人老麦的对谈已上线。&lt;a href="https://sspai.com/post/82453" target="_blank"&gt;&lt;strong&gt;前往收听&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;入华 30 周年之际，我们参观了 Apple 智惠教育中心。&lt;a href="https://sspai.com/post/82407" target="_blank"&gt;&lt;strong&gt;一起看看&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;开学季三重优惠买栏目：985 快闪礼包、优惠翻倍、还有栏目史低价。&lt;a href="https://sspai.com/post/82520" target="_blank"&gt;&lt;strong&gt;快来享折扣&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;你可能错过的文章&lt;/h2&gt;&lt;p&gt;&amp;gt; 下载 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;少数派 2.0 客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，解锁全新阅读体验 📰&lt;/p&gt;&lt;p&gt;&amp;gt; 实用、好用的 &lt;a href="https://sspai.com/mall" target="_blank"&gt;正版软件&lt;/a&gt;，少数派为你呈现 🚀&lt;/p&gt;&lt;/div&gt;</description><author>少数派编辑部</author><guid>https://sspai.com/post/82543</guid><pubDate>Wed, 30 Aug 2023 00:00:00 GMT</pubDate></item><item><title>开学季三重优惠买栏目：985 快闪礼包，优惠翻倍，还有栏目史低价</title><link>https://sspai.com/post/82520</link><description>&lt;div&gt;&lt;p&gt;⏰ &lt;strong&gt;活动时间&lt;/strong&gt;：8 月 29 日 ~ 9 月 7 日&lt;/p&gt;&lt;p&gt;🏷️ &lt;strong&gt;活动内容&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;热门栏目史低价：&lt;/strong&gt;7&lt;strong&gt; &lt;/strong&gt;款热门栏目 6 折起，降至栏目上架以来最低价，最高可省近 60 元；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;限定 985 礼包&lt;/strong&gt;：活动期间购买《&lt;a href="https://sspai.com/item/357" target="_blank"&gt;科研学术写作礼包&lt;/a&gt;》或《&lt;a href="https://sspai.com/item/346" target="_blank"&gt;PPTer 效率礼包 &lt;/a&gt;》，只需 98 元，即可买断共 5 款栏目；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;会员优惠翻倍&lt;/strong&gt;：活动期间内，全场栏目的会员优惠直接翻倍，最高可省 40 元。&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;strong&gt;热门栏目史低价：最低 6 折起，最高可省 60 元&lt;/strong&gt;&lt;/h2&gt;&lt;h3&gt;Notion All in One&lt;/h3&gt;&lt;span&gt; &lt;/span&gt;&lt;p&gt;本栏目最终的目标，是成为你的第一份，也是最后一份 Notion 指南。因此我们准备了满满一整年的三重干货，从入门到进阶，把 Notion 一次性讲清楚。&lt;/p&gt;&lt;h4&gt;第一重：搭建高能效率系统&lt;/h4&gt;&lt;p&gt;作为栏目最核心的内容模块，「效率体系」将分为五个章节，共计 36 篇文章。通过「效率体系」，我们希望是：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;新手看得懂：从必备基础操作开始，讲解区块和页面特性，让你丝滑度过新手期；&lt;/li&gt;&lt;li&gt;老手看得会：以数据库、公式、AI 等功能为切入口，讲解利用 Notion 使用各类工具需求的方法论；&lt;/li&gt;&lt;li&gt;高手看得通：超越 Notion，搭建 P.A.R.A 知识管理系统，充分联动其他工具，彻底打通 Notion 效率工具流。&lt;/li&gt;&lt;/ul&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/06/26/00f7dfddd207106f9c6739514179c2e6.jpg" src="https://cdn.sspai.com/2023/06/26/00f7dfddd207106f9c6739514179c2e6.jpg"/&gt;&lt;/figure&gt;&lt;h4&gt;第二重：功能追踪&lt;/h4&gt;&lt;p&gt;正如前文所说，Notion 的开发节奏快，功能迭代频繁。因此在「效率系统」结束更新之后，将在一年时间内更新&lt;strong&gt;不少于 6 篇图文内容&lt;/strong&gt;，及时讲解追踪 Notion 的新变化和新特性。&lt;/p&gt;&lt;h4&gt;第三重：按需加更&lt;/h4&gt;&lt;p&gt;即使有前两重干货，可能无法覆盖到 Notion 的所有用法。因此在「效率系统」结束更新之后，将在一年时间内发起选题征集，由读者投票选出最想看的选题，进行&lt;strong&gt;不少于 3 篇图文内容&lt;/strong&gt;的加更。&lt;/p&gt;&lt;p&gt;📍前往查看完整目录《&lt;a href="https://sspai.com/post/80637" target="_blank"&gt;内容目标&amp;amp;更新时间表&lt;/a&gt;》&lt;/p&gt;&lt;p&gt;📍前往查看万字试读文章《&lt;a href="https://sspai.com/post/80474" target="_blank"&gt;万字解析 | Notion 10 年发展史 &amp;amp; 2023 功能现状&lt;/a&gt;》&lt;/p&gt;&lt;h3&gt;生产力超频：成为 ChatGPT 全域调教高手&lt;/h3&gt;&lt;span&gt; &lt;/span&gt;&lt;p&gt;优化 Prompt 的方式和内容，是驯服 ChatGPT 的关键。&lt;/p&gt;&lt;p&gt;因此栏目的内容也将完全围绕「Prompt」这一关键词展开，让你成为 ChatGPT 全域调教高手：&lt;strong&gt;任何时间、任何场景、任何任务，都能发挥 ChatGPT 的作用。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;栏目内容将根据优化 ChatGPT Prompt 的顺序逐步深入，共&lt;strong&gt;分为十二章，五十六篇文章&lt;/strong&gt;，来教授驯服 ChatGPT 的流程。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/07/24/6aae5602436e8ffaa89c755af8fe6d5c.png" src="https://cdn.sspai.com/2023/07/24/6aae5602436e8ffaa89c755af8fe6d5c.png"/&gt;&lt;/figure&gt;&lt;h4&gt;资深作者主理&lt;/h4&gt;&lt;p&gt;栏目主理人 &lt;a href="https://sspai.com/u/fairyex" target="_blank"&gt;@Fairyex&lt;/a&gt; 作为少数派资深作者，已经在少数派创作了 60 余万字的内容，文章阅读量超过 560 万。此前他创作的两款少数派栏目《&lt;a href="https://sspai.com/series/78" target="_blank"&gt;显示器完全指南&lt;/a&gt;》和《&lt;a href="https://sspai.com/series/25" target="_blank"&gt;下载科普：隐私、稳定与速度&lt;/a&gt;》，均收获了少数派读者的好评。&lt;/p&gt;&lt;h4&gt;高质量的 GPT 产品交流群&lt;/h4&gt;&lt;p&gt;GPT 产品和功能每天都在快速迭代中，在栏目内容更新的同时，也需要一个氛围良好的社群，方便读者互相交流产品使用心得，掌握最新的产品动态。因此我们将邀请栏目读者加入「GPT 产品交流群」，在这里你可以：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;分享阅读心得&lt;/li&gt;&lt;li&gt;分享 GPT 工具&amp;amp;使用技巧&lt;/li&gt;&lt;li&gt;询问内容更新进度&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;交流群的加入方式，将在栏目内公布。&lt;/p&gt;&lt;p&gt;📍前往查看万字试读文章《&lt;a href="https://sspai.com/post/81036" target="_blank"&gt;万字解析 | 深度剖析 GPT 的原理、现状与前景&lt;/a&gt;》&lt;/p&gt;&lt;h3&gt;100 小时后请叫我苹果开发者&lt;/h3&gt;&lt;span&gt; &lt;/span&gt;&lt;p&gt;&lt;strong&gt;帮助初学者从零开始，高效开发出一款应用。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;我们希望这份栏目是：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;全面系统&lt;/strong&gt;：从构思到应用开发，再到最后的应用上架和推广，系统性介绍苹果生态内应用开发所需要掌握的技能；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;易读易上手&lt;/strong&gt;：内容上尽量为初学者而设计，力求让零基础的读者也能真正看懂，从而真正开始上手开发；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;面向 visionOS 写作&lt;/strong&gt;：在掌握 iOS 开发的基础上，快速入门 visionOS 开发。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;栏目最终将分为&lt;strong&gt;六大章节&lt;/strong&gt;，共计 &lt;strong&gt;88 篇文章&lt;/strong&gt;。在内容更新期间，开展&lt;strong&gt;三次线上研讨会&lt;/strong&gt;，直接与栏目主理人 &lt;a href="https://sspai.com/u/legolas" target="_blank"&gt;@王禹效&lt;/a&gt; 交流。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/06/07/cdc1bf74a6f834f5829d295b1c0cd70a.png" src="https://cdn.sspai.com/2023/06/07/cdc1bf74a6f834f5829d295b1c0cd70a.png"/&gt;&lt;/figure&gt;&lt;p&gt;📍前往查看完整目录《&lt;a href="https://sspai.com/post/80218" target="_blank"&gt;内容目标&amp;amp;更新时间表&lt;/a&gt;》&lt;/p&gt;&lt;p&gt;📍前往查看万字试读文章《&lt;a href="https://sspai.com/post/76333" target="_blank"&gt;从灵感到产品，iOS 应用开发完整流程解析（2023版）&lt;/a&gt;》&lt;/p&gt;&lt;h3&gt;100 小时后请叫我程序员&lt;/h3&gt;&lt;span&gt; &lt;/span&gt;&lt;p&gt;「&lt;a href="https://sspai.com/series/271" target="_blank"&gt;100 小时后请叫我程序员&lt;/a&gt;」共有三个模块共 56 期内容：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;知识体系&lt;/strong&gt;：&lt;strong&gt;37 篇文章&lt;/strong&gt;详细讲解专业领域知识点，夯实基础；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;技能拓展&lt;/strong&gt;：&lt;strong&gt;16 篇主题分享&lt;/strong&gt;，延展编程知识图谱，快速掌握行业动态；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;线上研讨会&lt;/strong&gt;：内容更新期间举办&lt;strong&gt; 3 次线上直播&lt;/strong&gt;，与主理人线上直接交流学习心得。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;通过这趟学习之旅，你将收获以下能力：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;学会用&lt;strong&gt;编程思维&lt;/strong&gt;来理解世界；&lt;/li&gt;&lt;li&gt;掌握&lt;strong&gt;大数据分析&lt;/strong&gt;的能力；&lt;/li&gt;&lt;li&gt;用代码&lt;strong&gt;解决实际需求&lt;/strong&gt;；&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;📍前往查看完整目录《&lt;a href="https://sspai.com/post/72751" target="_blank"&gt;内容目标&amp;amp;更新时间表&lt;/a&gt;》&lt;/p&gt;&lt;p&gt;📍前往查看万字试读文章《&lt;a href="https://sspai.com/post/72756" target="_blank"&gt;「干净又卫生」受人喜爱的原因，被我用 Python 爬出来了&lt;/a&gt;》&lt;/p&gt;&lt;h3&gt;100 小时后请叫我设计师&lt;/h3&gt;&lt;span&gt; &lt;/span&gt;&lt;p&gt;栏目内容将分为以下三个模块：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;知识体系&lt;/strong&gt;：用&lt;strong&gt;18 篇内容&lt;/strong&gt;（点击阅读&lt;a href="https://sspai.com/post/71957" target="_blank"&gt;试读样章&lt;/a&gt;）详细讲解设计领域的知识点，在栏目上架内三个月更新；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;持续更新&lt;/strong&gt;：&lt;strong&gt;16 篇文章&lt;/strong&gt;（点击阅&lt;a href="https://sspai.com/post/72192" target="_blank"&gt;读试读样章&lt;/a&gt;）带你时刻了解最新的设计动向，轻松获得前沿设计工具与资源。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;线上研讨会&lt;/strong&gt;：内容更新期间举办&lt;strong&gt; 3 次线上直播&lt;/strong&gt;，与主理人线上直接交流学习心得。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;通过这趟学习之旅，你将收获以下能力：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;打下扎实的&lt;strong&gt;理论知识基础&lt;/strong&gt;；&lt;/li&gt;&lt;li&gt;用实战案例&lt;strong&gt;培养设计思维&lt;/strong&gt;；&lt;/li&gt;&lt;li&gt;提高&lt;strong&gt;审美水平与行业视野&lt;/strong&gt;。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;📍前往查看完整目录《&lt;a href="https://sspai.com/post/72531" target="_blank"&gt;内容目标&amp;amp;更新时间表&lt;/a&gt;》&lt;/p&gt;&lt;p&gt;📍前往查看万字试读文章《&lt;a href="https://sspai.com/post/71957" target="_blank"&gt;看懂设计里的门道：区分字体的 16 种特征&lt;/a&gt;》&lt;/p&gt;&lt;h3&gt;学得会的快捷指令&lt;/h3&gt;&lt;span&gt; &lt;/span&gt;&lt;p&gt;一条快捷指令可以用到 6 个大类、上百种操作，不同的 App 还会提供额外的操作，我们如何能用最短的时间，学会这些操作和组合逻辑？&lt;/p&gt;&lt;p&gt;《&lt;a href="https://sspai.com/series/298" target="_blank"&gt;学得会的快捷指令&lt;/a&gt;》不会按照教科书式的写法，逐一罗列和学习所有操作。而是从我们日常最容易用到快捷指令的场景入手，带你走过「发现需求 - 研究重点功能模块 - 用快捷指令解决需求」的完整路径。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/03/15/e239abedf15a75b61b2af84a86c152de.jpg" src="https://cdn.sspai.com/2023/03/15/e239abedf15a75b61b2af84a86c152de.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;《&lt;a href="https://sspai.com/series/298" target="_blank"&gt;学得会的快捷指令&lt;/a&gt;》将分为三个模块：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;理论入门：以最容易理解的例子和理论，介绍快捷指令的基本使用逻辑；&lt;/li&gt;&lt;li&gt;构建指令：掌握快捷指令核心模块的用法，从零开始自己构建快捷指令；&lt;/li&gt;&lt;li&gt;话题拓展：通过对快捷指令的讨论与实例展示，丰富对快捷指令可能性的理解。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;📍前往查看完整目录《&lt;a href="https://sspai.com/post/78869" target="_blank"&gt;内容目标&amp;amp;更新时间表&lt;/a&gt;》&lt;/p&gt;&lt;p&gt;📍前往查看万字试读文章《&lt;a href="https://sspai.com/post/78867" target="_blank"&gt;万字解析 | 从「是什么」到「怎么做」，一口气入门快捷指令&lt;/a&gt;》&lt;/p&gt;&lt;h3&gt;生产力超频：Windows 命令行实用手册&lt;/h3&gt;&lt;span&gt; &lt;/span&gt;&lt;h4&gt;新手入门&lt;/h4&gt;&lt;p&gt;学习命令行工具的第一个难点，在于它不同于我们早已习惯的「鼠标点击 - 执行功能」的操作模式；第二个难点，在于不熟悉它（看似）复杂多变的命令。这就有点像学习一门新的外语，既觉得发音难，又觉得语法难。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/02/13/08f8d15b5fb0da733f6db1827d0bd5f3.jpg" src="https://cdn.sspai.com/2023/02/13/08f8d15b5fb0da733f6db1827d0bd5f3.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;因此在内容的编排上，没有采用教科书式的「先学理论，再来实践」的结构，而是从完全新手的角度出发，&lt;strong&gt;通过使用一个个命令行工具&lt;/strong&gt;，&lt;strong&gt;逐步掌握其背后的概念&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;这个过程就像是小朋友学习语言的过程：先通过模仿学会说简单的句子，再慢慢理解句子中的语法。&lt;/p&gt;&lt;h4&gt;高手进阶&lt;/h4&gt;&lt;p&gt;栏目的内容完全是&lt;strong&gt;面向对 Windows 命令行零基础&lt;/strong&gt;的派友，如果你已经了解了基本概念和用法，栏目中也准备了能进一步挖掘 Windows 命令行潜力的进阶内容。&lt;/p&gt;&lt;p&gt;在栏目的后四篇，将根据四个场景：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;文件操作&lt;/li&gt;&lt;li&gt;处理文本&lt;/li&gt;&lt;li&gt;管理系统&lt;/li&gt;&lt;li&gt;优质工具推荐&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;整理了丰富的实例，并在实例中讲解脚本的创建和使用、Windows 系统 API 等进阶概念，真正做到新手入门，高手进阶。&lt;/p&gt;&lt;p&gt;📍前往查看万字试读文章《&lt;a href="https://sspai.com/post/78249" target="_blank"&gt;万字解析 | 拾起被遗忘的魔杖，用 Windows 命令行工具开启效率世界&lt;/a&gt;》&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;985 快闪礼包：买断 5 款栏目，只需 98 元&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;活动期间购买《&lt;a href="https://sspai.com/item/357" target="_blank"&gt;科研学术写作礼包&lt;/a&gt;》或《&lt;a href="https://sspai.com/item/346" target="_blank"&gt;PPTer 效率礼包 &lt;/a&gt;》，只需 98 元，即可获赠以下三款栏目：&lt;/p&gt;&lt;h3&gt;PPTer 效率礼包&lt;/h3&gt;&lt;span&gt; &lt;/span&gt;&lt;p&gt;活动期间购买 PPTer 效率礼包仅需&lt;strong&gt; 98 元&lt;/strong&gt;，你将获得以下五款栏目（&lt;strong&gt;原价总计 245.9 元&lt;/strong&gt;）：&lt;/p&gt;&lt;p&gt;📍欢迎下载《揭秘 PPT 真相》&lt;a href="https://sspaime.feishu.cn/file/boxcnp6SNH360XsUUlL7P2DVjod" target="_blank"&gt;试读样章&lt;/a&gt;&lt;/p&gt;&lt;p&gt;📍前往查看《&lt;a href="https://sspai.com/series/282" target="_blank"&gt;生产力超频：科学做好 PPT 的三个步骤&lt;/a&gt;》试读文章《&lt;a href="https://sspai.com/post/76522" target="_blank"&gt;幻灯片制作的高效方法&lt;/a&gt;》&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/29/650788d4a452563ce9a0059bf5f1464d.jpg" src="https://cdn.sspai.com/2023/08/29/650788d4a452563ce9a0059bf5f1464d.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;《&lt;a href="https://sspai.com/series/282" target="_blank"&gt;生产力超频：科学做好 PPT 的三个步骤&lt;/a&gt;》的作者 &lt;a href="https://sspai.com/u/keantares" target="_blank"&gt;@艾伦习字&lt;/a&gt; 参与过淘宝、阅文集团等多场大型商业发布会 PPT 的制作，因此总结出了这套&lt;strong&gt;从入门到实战的 PPT 制作方法论&lt;/strong&gt;，侧重于对 PPT 功能和理念的分享，做到「授之以鱼不如授之以渔」。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2022/12/02/c834871e69279a2e1c520abc18d3fb81.jpg" src="https://cdn.sspai.com/2022/12/02/c834871e69279a2e1c520abc18d3fb81.jpg"/&gt;&lt;figcaption&gt;《生产力超频：科学做好 PPT 的三个步骤》栏目目录&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;《揭秘 PPT 真相》的内容起点低、讲解详细，侧重于&lt;strong&gt;对操作的具体讲解&lt;/strong&gt;，能够帮助 PPT 小白快速掌握 PPT 的设计规律，学会 PPT 的美化技巧，熟悉 PPT 的制作流程，迅速做出比较完善的 PPT。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/01/09/8ec3e2e4d85f6dc8638f593ee7c67261.png" src="https://cdn.sspai.com/2023/01/09/8ec3e2e4d85f6dc8638f593ee7c67261.png"/&gt;&lt;/figure&gt;&lt;p&gt;图书首版上市后获得了市场的认可，此次再版由作者布衣公子耗时三年全面更新内容，并且附上了多套模板、常用配色方案、商业设计案例等资源可供下载，解决读者的实际应用需求。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/01/09/a5f9457bfae49fc464e5d08036dd088d.png" src="https://cdn.sspai.com/2023/01/09/a5f9457bfae49fc464e5d08036dd088d.png"/&gt;&lt;figcaption&gt;《揭秘 PPT 真相》图书目录&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;科研学术写作礼包&lt;/h3&gt;&lt;span&gt; &lt;/span&gt;&lt;p&gt;活动期间购买科研学术写作礼包仅需&lt;strong&gt; 98 元&lt;/strong&gt;，你将获得以下五款栏目（&lt;strong&gt;原价总计 205 元&lt;/strong&gt;）：&lt;/p&gt;&lt;p&gt;一站式掌握学术论文写作的方法论与工具，让学术写作之路更加通畅。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/29/9e9208535f33fb0c465da7a0f19e75e9.jpg" src="https://cdn.sspai.com/2023/08/29/9e9208535f33fb0c465da7a0f19e75e9.jpg"/&gt;&lt;/figure&gt;&lt;h2&gt;会员优惠翻倍 &amp;amp; 经典栏目五折优惠&lt;/h2&gt;&lt;h3&gt;会员优惠翻倍&lt;/h3&gt;&lt;p&gt;活动期间内，全场栏目的会员优惠直接翻倍。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/29/b16e439a1c5213293329cd75034ac7d0.png" src="https://cdn.sspai.com/2023/08/29/b16e439a1c5213293329cd75034ac7d0.png"/&gt;&lt;/figure&gt;&lt;p&gt;更多优惠，欢迎前往&lt;a href="https://sspai.com/series" target="_blank"&gt;少数派栏目页面&lt;/a&gt;查看。&lt;/p&gt;&lt;h3&gt;经典栏目，半价优惠&lt;/h3&gt;&lt;p&gt;经典栏目一律半价优惠中，欢迎在「&lt;a href="https://sspai.com/series" target="_blank"&gt;付费栏目&lt;/a&gt;」页面中查看。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/29/bbc008b6f61068ff63b806b7e5a3f6d2.png" src="https://cdn.sspai.com/2023/08/29/bbc008b6f61068ff63b806b7e5a3f6d2.png"/&gt;&lt;/figure&gt;&lt;h2&gt;One More Thing：Context 应用众筹进行中&lt;/h2&gt;&lt;span&gt; &lt;/span&gt;&lt;p&gt;&lt;strong&gt;众筹期限和目标：&lt;/strong&gt;8 月 21 日至 9 月 4 日，目标为 500 份。如达到 1000 份，并承诺将额外开发更多 iOS 桌面小组件、可更换图标等作为答谢。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;规格介绍：&lt;/strong&gt;本次众筹分「天使版」和「普通版」两种规格：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;「天使版」：269 元，限量 500 份，包括 Context 三年订阅权益、&lt;a href="https://sspai.com/series/77" target="_blank"&gt;《英语自学手册》栏目&lt;/a&gt;阅读权益、包含定制徽章和活页单词卡本的定制周边套装，以及纪念版图标，低至市场价格的 53 折；&lt;/li&gt;&lt;li&gt;「普通版」：159 元，包括 Context 一年订阅权益和&lt;a href="https://sspai.com/series/77" target="_blank"&gt;《英语自学手册》栏目&lt;/a&gt;阅读权益，低至市场价格的 67 折。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;此外：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;《英语自学手册》的老读者，可以支付超值价格（天使版 207 元，普通版 80 元）升级，获得其余权益；&lt;/li&gt;&lt;li&gt;少数派会员可在所有规格原价上进一步优惠，最低可至 45 折。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;如需试用，你可以先&lt;a href="https://testflight.apple.com/join/jhKaiXhp" target="_blank"&gt;安装测试版&lt;/a&gt;体验功能。（正式上线前免费。仅供体验，不代表正式版功能。需登录 Apple ID 并安装 TestFlight 应用。名额有限，用完即止。）&lt;/p&gt;&lt;p&gt;&lt;a href="https://sspai.com/page/context" target="_blank"&gt;&lt;strong&gt;立即参与&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/22/7b792242f9077ce7c29169f8eccec08d.jpg" src="https://cdn.sspai.com/2023/08/22/7b792242f9077ce7c29169f8eccec08d.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;&amp;gt; 下载少数派 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，了解更多的新玩意 🆒&lt;/p&gt;&lt;p&gt;&amp;gt; 特惠、好用的硬件产品，尽在 &lt;a href="https://shop549593764.taobao.com/?spm=a230r.7195193.1997079397.2.2ddc7e0bPqKQHc" target="_blank"&gt;少数派 sspai 官方店铺 &lt;/a&gt;🛒&lt;/p&gt;&lt;/div&gt;</description><author>数字工具组</author><guid>https://sspai.com/post/82520</guid><pubDate>Tue, 29 Aug 2023 10:35:19 GMT</pubDate></item><item><title>社区速递 010 | 向大模型提问、软盘的历史以及「冷门」词汇</title><link>https://sspai.com/post/82510</link><description>&lt;div&gt;&lt;p&gt;除了首页时间流和侧栏的精选展位，少数派 Matrix 社区还有很多优秀内容因条件所限无法得到有效曝光，因此我们决定重启 Matrix 周报，并在此基础上添加更多社区内容、作者投稿新玩意以及社区产品动态呈现给大家。&lt;/p&gt;&lt;p&gt;希望这份「社区速递」能帮你发现更多有趣的内容分享。如果你有任何栏目内容或首页改版建议，也欢迎在评论区留言反馈。&lt;/p&gt;&lt;hr/&gt;&lt;h2&gt;本周精选&lt;/h2&gt;&lt;h3&gt;工具分享&lt;/h3&gt;&lt;p&gt;&lt;a href="https://sspai.com/post/82343" target="_blank"&gt;《在链接里选取文字？我尝试用最笨的办法解决问题》&lt;/a&gt;作者为&lt;strong&gt;Ryan_the_hito&lt;/strong&gt;。我们常在浏览网页时遇到需要选取链接内部文本的情况。然而，鼠标并不能简单地选中超链接，对于复制链接内想要的文字，我们需要另辟蹊径。作者在 7 月发布了名为 Cactus 的免费软件，以帮助读者解决这一问题。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/23/cc2368f92eabf9f24c76a6a4e646ce0e.png" src="https://cdn.sspai.com/2023/08/23/cc2368f92eabf9f24c76a6a4e646ce0e.png"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;a href="https://sspai.com/post/82012" target="_blank"&gt;《用Obsidian搭建我的个人知识管理工作流》&lt;/a&gt;中，&lt;strong&gt;小梨笔记 &lt;/strong&gt;分享了自己选择使用Obsidian进行个人知识管理的经历和心得。他认为笔记体系的核心应该是笔记本身，而不是复杂的文件夹结构或标签设置，希望通过Obsidian建立起笔记之间的连接，并保证存储的稳定性和可靠性。&lt;/p&gt;&lt;h3&gt;经验与思考&lt;/h3&gt;&lt;p&gt;&lt;a href="https://sspai.com/post/82322" target="_blank"&gt;《如何更好地向大模型提问？》&lt;/a&gt;是由 &lt;strong&gt;流风回雪Richard &lt;/strong&gt;撰写的文章。近一年来，大语言模型如 ChatGPT 已经广泛应用，用户也面临着优化大语言模型输出的问题，以减少不相关或错误回复的概率。本文介绍的提示词工程通过让大模型更好地理解我们的需求，让对话更加顺畅，能够更快地获得符合需求的结果。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/25/article/4c2711d835267a5f3c33f4e965efcc49" src="https://cdn.sspai.com/2023/08/25/article/4c2711d835267a5f3c33f4e965efcc49"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;a href="https://sspai.com/post/82414" target="_blank"&gt;《记账体系的建立和完善》&lt;/a&gt;：无论是天生喜欢规律性事务的ISTJ还是其他人，很多人想要建立记账习惯却坚持不下来。而在作者 &lt;strong&gt;书藏 &lt;/strong&gt;看来，简单的记账并没有太多意义，我们需要充分发挥记账的作用，来管理我们的财务水平。本文介绍了一个体系，包括跟踪、分析和预算三个方面，通过准确记账、定期对比和制定预算，帮助我们有效地控制消费水平、保持健康的财务状况。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/21/6108810bcb0801d8a9f9d3016c5fc65c.jpg" src="https://cdn.sspai.com/2023/08/21/6108810bcb0801d8a9f9d3016c5fc65c.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;a href="https://sspai.com/post/82266" target="_blank"&gt;《智能家居设计师如何打造全屋智能-智能别墅案例》&lt;/a&gt;中，作者&lt;strong&gt; 大盗 &lt;/strong&gt;分享了关于智能家居设计的示例案例。通过在宁波一个智能别墅项目中使用GIRA KNX智能家居系统和苹果Homekit智能家居平台，作者实现了对全宅灯光、窗帘、暖通、门禁等系统的智能控制。文章还介绍了项目的概览、施工流程以及设备选择，为智能家居初学者提供了一些参考和指导。&lt;/p&gt;&lt;h3&gt;多彩生活&lt;/h3&gt;&lt;p&gt;&lt;a href="https://sspai.com/post/82326" target="_blank"&gt;《专注也需要一个空间：给自己布置一个简易书房角落》&lt;/a&gt;是由 &lt;strong&gt;EricYoung &lt;/strong&gt;撰写的文章。在这篇文章中，他分享了关于如何在有限的空间中塑造一个专注的书房角落的经验和思考。书房对于写作者来说不仅仅是一个创作的场所，更是一个能够激发灵感和保持专注的空间。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/23/ed26efc65ab7898379d71533dd89d504.jpeg" src="https://cdn.sspai.com/2023/08/23/ed26efc65ab7898379d71533dd89d504.jpeg"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;a href="https://sspai.com/post/82423" target="_blank"&gt;《FUJI ROCK 不完全攻略》&lt;/a&gt;中，&lt;strong&gt;Wonz &lt;/strong&gt;分享了关于FUJI ROCK音乐节的相关经验：FUJI ROCK是一个历史悠久的音乐节，凭借其自然与音乐和谐共存的理念而闻名。文章中包含了关于购票、露营区等方面的介绍，如果你也对FUJI ROCK音乐节感兴趣，不妨一读此文。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/25/9072b558ef0596be07f9bc16dbe8c471.jpg" src="https://cdn.sspai.com/2023/08/25/9072b558ef0596be07f9bc16dbe8c471.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;a href="https://sspai.com/post/81297" target="_blank"&gt;《OOTS ，下水穿什么？｜聊聊精分的游泳装备（泳装篇）》&lt;/a&gt;是由 &lt;strong&gt;feverlife &lt;/strong&gt;撰写的文章，从泳镜到泳衣，他逐一介绍了游泳时必备的装备，并探讨了一些使用心得和注意事项。通过这些装备，作者与运动生活中的点滴回忆相互串联，希望能够为你提供一些实用的参考价值。&lt;/p&gt;&lt;p&gt;&lt;a href="https://sspai.com/post/82314" target="_blank"&gt;《数字储存档案：软盘 | 用磁场写就的故事》&lt;/a&gt;中， &lt;strong&gt;SoraStar &lt;/strong&gt;通过讲述软盘的历史和演变，带我们回忆起这种曾经广泛使用的数字储存设备对计算机界所产生的深远影响。从1971年诞生的第一张8英寸软盘开始，一直到30年后逐渐销声匿迹，软盘见证了信息存储技术的多年发展。&lt;/p&gt;&lt;h3&gt;社区摘要&lt;/h3&gt;&lt;h2&gt;一派热议&lt;/h2&gt;&lt;p&gt;在上期第 116 期一派投票《&lt;a href="https://sspai.com/bullet/1692689059" target="_blank"&gt;学习和阅读中遇到的「冷门」词汇？&lt;/a&gt;》中，共有 130 名派友热情参与，十分感谢！&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/8/22/2023/article/3e82becf-9f37-9841-8c53-4b781a197707.jpg" src="https://cdn.sspai.com/8/22/2023/article/3e82becf-9f37-9841-8c53-4b781a197707.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;ahandfulofdust &lt;/strong&gt;(+52) 最近看书然后意外得知了 「有理数」 这个词其实是翻译错误...... 原始词汇是 rational number。当初翻译的学者认为这个 「rational」 是英文中的 「合理的，理性的」，但实际上这个词源自古希腊，词根是 「ratio」（比例）...... 怪不得，我这么多年来都理解不了为啥叫 「有理数」。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;patiencing &lt;/strong&gt;(+22) &lt;/p&gt;&lt;ul&gt;&lt;li&gt;正则表达式：英文原文是 Regular Expression, 翻译成「 正则表达式 」让人非常困惑，望文无法生义。我觉得翻译成 「规律表达式 」会更好，表示通过确定「规律」、能够批量处理符合 「规律」 的文本；&lt;/li&gt;&lt;li&gt;面向对象编程：英文原文是 Object Oriented Programming, 翻译成 「面向对象编程」 让人摸不着头脑，如果改成 「对象导向编程」, 或者采用台湾的翻译「物件导向编程」，是更贴切，也更能让人抓住本质的翻译；&lt;/li&gt;&lt;li&gt;批判性思维：英文原文是 Critical Thinking,，翻译成 「批评性」 会让人误以为这种思维方式要求质疑、否定、苛责，显然这种误导违背了 Critical Thinking 的含义。但是我并没有找到合适的替代译名，个人觉得，Critical Thinking 这个词本身就是对其所指代的思维模式的错误概括；&lt;/li&gt;&lt;li&gt;置信区间：英文原文是 Confidence interval，也是个让人摸不着头脑的译名。台湾译名是 「信赖区间」, 更加准确，更加直观 🥳&lt;/li&gt;&lt;li&gt;矛盾律：是逻辑学的三大基本准则之一，实际上它本来叫 「不矛盾律」, 但是为了和其他两个基本定律 (同一律、排中律) 在发音韵律上统一，所以改成了 「矛盾律」😅&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;ivxzhao &lt;/strong&gt;(+16) Reincarnation n. 重生，涅槃&lt;/p&gt;&lt;p&gt;当时 iPhone 出 Xr 的时候，有人问这个 r 的意思，学到了这个单词&lt;/p&gt;&lt;p&gt;&lt;strong&gt;浑醉 &lt;/strong&gt;(+11) default&lt;/p&gt;&lt;p&gt;熟义：缺省，默认&lt;/p&gt;&lt;p&gt;僻义：违约，拖欠&lt;/p&gt;&lt;p&gt;Bond markets in America are signaling a wave of defaults&lt;/p&gt;&lt;p&gt;&lt;strong&gt;团子大家族 &lt;/strong&gt;(+9) 都是英语么？那我来说一个中文的吧。&lt;/p&gt;&lt;p&gt;陶铸，原意是用陶范制作金属器物，引申为培育、融化、模仿等。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Yorkson &lt;/strong&gt;(+7) 之前在读词典时候遇到的词根「homo-」。这个词根来源于希腊语「homos」，意思是「相似 /similar」。带有这个词根的单词有「homologous，同源的」，表示有相同来源或者有共同祖先的。&lt;/p&gt;&lt;p&gt;让人困惑的原因来源于另一个词，「Homo sapiens」，即人（human）的拉丁学名，一直困扰「人」和「相似」好像没有任何关系，然后发现 Homo sapiens 中的 homo 来自于拉丁语 homo，其含意就是人（human）。&lt;/p&gt;&lt;p&gt;这样希腊语和拉丁语相似词根，但是含意截然不同，于是留下了很深的印象。&lt;/p&gt;&lt;p&gt;另外向对于英语词根感兴趣的推荐这本 Merriam-Webster&amp;#x27;s Vocabulary Builder，非常好读，例子也有意思。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;王处安 &lt;/strong&gt;(+3) 第一时间想到的单词是：melancholy。&lt;/p&gt;&lt;p&gt;徐志摩把它翻译成：眸冷骨累。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;xuxdon &lt;/strong&gt;(+3) Retrofit 在 github 上有个 issue，维护者说到 &amp;quot;The 4.x and 5.x releases are binary compatible with 3.x so you are able to bump the dependency yourself if you want.&amp;quot;&lt;/p&gt;&lt;p&gt;&amp;quot;bump&amp;quot; 这个词让我印象很深，虽然能从上下文看出是让我们修改依赖版本，但我印象中这个词的含义是 &amp;quot;something hit another&amp;quot;，于是去问了下 ChatGPT，而 AI 回复的是: In the context of software development, &amp;quot;bump&amp;quot; is a term used to describe the action of upgrading or updating something.&lt;/p&gt;&lt;p&gt;这个 bump 就这么留在了我脑子里 (･_･;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Akira_is_Akira &lt;/strong&gt;(+3) 最近遇到的「冷門」詞匯是「HiSo」（是 High Society 的縮寫！）&lt;/p&gt;&lt;p&gt;&lt;strong&gt;朴步成 &lt;/strong&gt;(+2) 或许是 &amp;quot;Illustrator&amp;quot;&lt;/p&gt;&lt;p&gt;最常出现的或许是在 &amp;quot;Adobe Illustrator&amp;quot; 这个还算好用的矢量图软件中，每次见到这个词都想它和英文写作常用词 &amp;quot;Illustrate&amp;quot; 的关系。直到查了词典才知道 &amp;quot;Illustrator&amp;quot; 特指书籍的「插图画家」，和常用的 &amp;quot;xxx illustrated that...&amp;quot; 好像确实有那么一点关系，但又说不上来。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Rutus &lt;/strong&gt;(+1) 我来说一个日语的熟词辟义：&lt;/p&gt;&lt;p&gt;「旦那」最常见的就是 「老公」 的意思。但是，我读到井上红梅翻译的鲁迅的故乡的时候，看到闰土再次见到鲁迅的时候居然说的是「旦那様」……确实有点震惊&lt;/p&gt;&lt;p&gt;📢：下一期的一派讨论是《&lt;a href="https://sspai.com/bullet/1693297642" target="_blank"&gt;2023 年，你会考虑购买折叠屏手机吗？&lt;/a&gt;》，欢迎来聊。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/29/4b9bad06ad3e43618095bbb706469b14.jpg" src="https://cdn.sspai.com/2023/08/29/4b9bad06ad3e43618095bbb706469b14.jpg"/&gt;&lt;/figure&gt;&lt;h2&gt;作者的新玩意&lt;/h2&gt;&lt;p&gt;为了让作者的投稿尽快与广大读者见面，我们调整了《新玩意》栏目中作者投稿部分的呈现方式和周期，作者投稿的「新玩意」后续会迁移至本 栏目。投稿渠道与奖励方式仍与以往完全一致，详情参见文末。我们相信新鲜火热出炉的分享更能赢得大家的喜爱，也欢迎广大读者朋友们踊跃投稿。&lt;/p&gt;&lt;h3&gt;@Yanzhang： B.O.W 折叠键盘上手体验：又不是不能用！&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;入手渠道：淘宝旗舰店&lt;/li&gt;&lt;li&gt;参考价格：¥169&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;需求的来源&lt;/h3&gt;&lt;p&gt;2023 年以前，我一直将我 11 寸的 iPad Pro 作为我的便携设备。但由于它自身的重量、体积，以及我自己的工作习惯变化，我逐渐意识到我使用 iPad 进行内容消费（就是看剧、看书）已经远远多于内容产出（写作、笔记）。&lt;/p&gt;&lt;p&gt;于是，我将 iPad Pro 换成了 &lt;strong&gt;iPad Mini 6&lt;/strong&gt;（顶配插卡版），我发现它非常好用：1）轻薄，于是我可以轻易持握阅读、携带出门；2）支持插卡，于是我也不需要依赖 Wi-Fi。但和所有 iPad 一样，当我希望使用它进行一些内容创作时，「打字」 成为了一个巨大的痛点 ——iPad 的屏幕宽度，使得持握打字变得非常吃力，而将它平放于桌面来打字，也比手机打字痛苦十倍。&lt;/p&gt;&lt;p&gt;对于 iPad Pro，无论是苹果自己出的妙控键盘，还是市面上的各种平替，都让这一套装稍显滑稽：一台加上了键盘的 iPad Pro，甚至比一台 MacBook Air 还要大、还要重。除非是对触屏绘画有较高的要求，或者是纯粹喜欢装 X，我想不出什么原因人们会愿意使用它，而我家里闲置了两年的妙控键盘更说明了这点。&lt;/p&gt;&lt;p&gt;为了配合我的 Mini，同时不影响它 「轻薄便携」 的最大特点。一款能够与 iPad 完全分离的「折叠键盘」产品很快出现在我的脑海里。我搜索了少数派里的历史文章，试图借助前人的智慧找到一款合适的产品：&lt;/p&gt;&lt;p&gt;Sanwa 测评中提到了产品无法激活蓝牙和蓝牙连接不稳定性等品控问题，以及触控板的鸡肋性；微软的产品似乎是一个不错的选择；而众筹的产品虽然轻薄，但我并不太信任没有完全量产并迭代的产品。更重要的是，上述产品看起来都已经发布了超过 3 年，我为什么不试试市面上最新的产品呢？在淘宝进行搜索后，我决定尝试 B.O.W 航世 这个国产品牌的折叠键盘。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/21/792d7a52f56e713bf8190ec369b8975e.JPG" src="https://cdn.sspai.com/2023/08/21/792d7a52f56e713bf8190ec369b8975e.JPG"/&gt;&lt;figcaption&gt;B.O.W HB066 折叠键盘实拍&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;产品观察&lt;/h3&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/21/ff16d35036e982bd09ed83bc69a485a6.jpeg" src="https://cdn.sspai.com/2023/08/21/ff16d35036e982bd09ed83bc69a485a6.jpeg"/&gt;&lt;figcaption&gt;包装实拍&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;包装很简洁，主要内容物是键盘主体、防尘袋和充电线。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/21/3a804f01727ffe73dc15b4de74dd4b81.jpeg" src="https://cdn.sspai.com/2023/08/21/3a804f01727ffe73dc15b4de74dd4b81.jpeg"/&gt;&lt;figcaption&gt;折叠状态实拍&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;大小还是令人满意，长度和一支笔相当（15cm），厚度则比笔略厚（1.5cm）。和 iPad Mini 一起放入包内，对包没有任何要求。我可以背上我装不下 MacBook 的 Freitag 包，放进我的 iPad 和键盘，进行一场畅快淋漓的 City Walk。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/21/0c17578fe47d184935994679cab37d97.JPG" src="https://cdn.sspai.com/2023/08/21/0c17578fe47d184935994679cab37d97.JPG"/&gt;&lt;figcaption&gt;折叠状态与 iPad Mini 实拍&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;铝制外壳，质感还是很不错，但用上一段时间恐怕会有不少划痕。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/21/e753bdfc582d22aa6cffedd9aacb50e2.jpeg" src="https://cdn.sspai.com/2023/08/21/e753bdfc582d22aa6cffedd9aacb50e2.jpeg"/&gt;&lt;figcaption&gt;折叠键盘展开实拍&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;三折的模式，两侧展开时铰链有摩擦声和卡扣声，听起来还是蛮爽的。连接处有外壳保护，但如果是展开状态遭受撞击，想必断裂依然是无可避免。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/21/249464b349b35109d770d969079235c6.jpeg" src="https://cdn.sspai.com/2023/08/21/249464b349b35109d770d969079235c6.jpeg"/&gt;&lt;figcaption&gt;展开后实拍&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;展开平放在桌面后，还是很平稳。距离桌面估计不足 1cm 的高度，键程什么的就不用指望了，而且依然远远比不上 MacBook 的蝶式键盘。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/21/a85c0edffee1a5b8afaa8650ce34d6bf.jpeg" src="https://cdn.sspai.com/2023/08/21/a85c0edffee1a5b8afaa8650ce34d6bf.jpeg"/&gt;&lt;figcaption&gt;与 MacBook Pro 13 寸对比实拍&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;键盘的尺寸比 13 寸 MacBook 的略小，习惯了 Macbook 打字的我依然需要不少力气适应它。&lt;/p&gt;&lt;p&gt;从打字的体验来说，只能说非常 「一般」。和使用 iPad 的虚拟键盘相比肯定是有了巨大的提升，但它可以说没有任何 「美妙」 的打字体验。当我出门在外要输入一段几百字的文字时，我可以使用这个键盘作为一个很不错的补充。再怎么说，也不是手机和 iPad 虚拟键盘输入可比的。&lt;/p&gt;&lt;p&gt;经过实测，我未经长时间适应，&lt;strong&gt; 使用折叠键盘的输入速度是 59 汉字 / 分钟，而我使用 Macbook Pro 键盘输入的速度是 100 汉字 / 分钟 &lt;/strong&gt;。高达 4 成的折损，主要因为数字键和删除键的减小。&lt;/p&gt;&lt;h3&gt;总结&lt;/h3&gt;&lt;p&gt;作为一款不到 200 元级别的折叠键盘，B.O.W 这款三折键盘在颜值、易用性上都不错，但受限于其尺寸和体积，其打字手感必然不能令人满意。&lt;/p&gt;&lt;p&gt;如果你是一个 iPad Mini 用户，同时对文字创作具有较高的要求，我建议你可以在这款产品和微软的折叠键盘中结合自身体验进行二选一。如果你并没有太多文字创作的要求，那么将 iPad Mini 老老实实地作为内容消费的媒介，可能会是更加优雅的选择。&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;如果你也想分享「新玩意」🔉：&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;获取 Matrix 社区写作权限并签署 &lt;a href="https://sspai.com/post/72089" target="_blank"&gt;Matrix 共创计划&lt;/a&gt;；&lt;/li&gt;&lt;li&gt;在少数派独家发布一篇文章，在标题中标注「新玩意」前缀；&lt;/li&gt;&lt;li&gt;用至少 800 字介绍产品，并配上 2-3 张产品的实拍图片；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;在网站个人信息中补充支付宝账号；&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;签署完成后也可进入「&lt;/strong&gt;&lt;a href="https://sspai.com/community/whim" target="_blank"&gt;&lt;strong&gt;脑大洞开&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;」频道投稿。&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;成功入选本栏目还可以得到 108 元的「剁手红包」🧧。如果你有兴趣参与，就赶紧来稿吧！&lt;/p&gt;&lt;p&gt;&amp;gt; 下载少数派 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，了解更多的新玩意 🆒&lt;/p&gt;&lt;p&gt;&amp;gt; 特惠、好用的硬件产品，尽在 &lt;a href="https://shop549593764.taobao.com/?spm=a230r.7195193.1997079397.2.2ddc7e0bPqKQHc" target="_blank"&gt;少数派 sspai 官方店铺 &lt;/a&gt;🛒&lt;/p&gt;&lt;/div&gt;</description><author>Matrix机器人</author><guid>https://sspai.com/post/82510</guid><pubDate>Tue, 29 Aug 2023 08:34:36 GMT</pubDate></item><item><title>结合语境学英语，这是他们的实践体验</title><link>https://sspai.com/post/82490</link><description>&lt;div&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/28/01ddcdf68c12823936d9e3f293203c80.jpg" src="https://cdn.sspai.com/2023/08/28/01ddcdf68c12823936d9e3f293203c80.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;Context + 《英语自学手册》联名众筹于 8 月 21 日至 9 月 4 日之间开展，分「天使版」和「普通版」两种规格，均包含 Context 订阅权益和&lt;a href="https://sspai.com/series/77" target="_blank"&gt;《英语自学手册》栏目&lt;/a&gt;阅读权益，低至市场价格的 53 折，《英语自学手册》的老读者、少数派会员均有专属优惠。&lt;/p&gt;&lt;p&gt;&lt;a href="https://sspai.com/page/context" target="_blank"&gt;&lt;strong&gt;立即参与&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://testflight.apple.com/join/jhKaiXhp" target="_blank"&gt;&lt;strong&gt;体验测试版&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&lt;hr/&gt;&lt;h2&gt;引言&lt;/h2&gt;&lt;p&gt;《&lt;a href="https://sspai.com/series/77" target="_blank"&gt;英语自学手册&lt;/a&gt;》是少数派推出于 2020 年的经典栏目。当时，我们注意到少数派读者都很关注如何学英语，也有很多朋友一直在尝试或坚持英语学习。然而，还是有很多读者表示，自己困惑于「为什么我接受过至少六年的学校教育，但英语仍学不好」。&lt;/p&gt;&lt;p&gt;为此，我们当时邀请了原新东方讲师、专业译者郝海龙，制作了这份长达二十多万字、六章五十小节的详尽教程，旨在帮读者重塑英语思维，打破旧有的、错误的观念，像一个真正的英语母语使用者一样，通过自学完成英语技能的全面提升。&lt;/p&gt;&lt;p&gt;《自学手册》上架后，当年即销出数千份，成为少数派最畅销的栏目之一，至今还有新读者陆续慕名前来购买。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/28/75425834c2f693a2cc70ed27d2c46fa4.png" src="https://cdn.sspai.com/2023/08/28/75425834c2f693a2cc70ed27d2c46fa4.png"/&gt;&lt;/figure&gt;&lt;p&gt;时间快进到 2023 年 6 月。当时，开发者 Kai 在会员社区&lt;a href="https://sspai.com/t/ilrdppvkn9xv" target="_blank"&gt;首次介绍&lt;/a&gt;了他的新作品 Context，一款基于「语境」的英语学习笔记本，并为会员提供了优先测试通道。Context 团队特别提到，「建立单词与所在语境的关系」是 Context 的核心理念，也与少数派最受欢迎的经典付费栏目之一、郝海龙老师的《英语自学手册》不谋而合。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/29/2fd385e1abff81682c2c519409215869.png" src="https://cdn.sspai.com/2023/08/29/2fd385e1abff81682c2c519409215869.png"/&gt;&lt;/figure&gt;&lt;p&gt;介绍发出后，得到了非常积极的响应，有接近四百名会员加入了测试。Context 团队随后又在少数派主站发布了一篇更详细的&lt;a href="https://sspai.com/post/80594" target="_blank"&gt;自荐文章&lt;/a&gt;，同样反响积极，参与测试的用户超过 2300 人。经过一段时间的沟通和筹备，Context 正式版的&lt;a href="https://sspai.com/page/context" target="_blank"&gt;众筹计划&lt;/a&gt;也正式上线。&lt;/p&gt;&lt;p&gt;Context 测试和众筹以来，陆续有不少用户主动分享了他们使用 Context 实践《英语自学手册》中单词学习方法的经验和心得；他们有的是处于考研、本科甚至初中等不同阶段的学生，有的则是对英文阅读有长期兴趣的资深读者。&lt;/p&gt;&lt;p&gt;本文中，我们将先节选《英语自学手册》中论述单词学习和工具使用的精华内容，然后展示这些用户分享的使用案例。如果你对英文阅读、词汇积累感兴趣，希望能为你带来一些启发。&lt;/p&gt;&lt;h2&gt;从阅读开始，以语境为重：来自《自学手册》的方法论&lt;/h2&gt;&lt;h3&gt;为什么从阅读开始学习？&lt;/h3&gt;&lt;p&gt;郝海龙老师认为，既然学习任何一门语言的基本方法是模仿与重复，那么我们一定要先&lt;strong&gt;找到模仿与重复的对象&lt;/strong&gt;，即已经存在的正确英语表达。这意味着我们只能先从听力或者阅读学习。&lt;/p&gt;&lt;p&gt;相对而言，对于在非英语国家长大的成年人，从阅读入手有其独有的优势：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;阅读的环境更容易打造。&lt;/strong&gt;实际上，阅读训练基本上和你生活在那个国家没有关系。一个人身在英语国家，并不意味着就有英语环境。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;通过阅读能积累最多的词汇和用法。&lt;/strong&gt;阅读时遇到的词汇和用法就算不能包含全部的听力口语的词汇和用法，也至少能包含大部分。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;阅读本身就能为我们带来巨大收益。&lt;/strong&gt;阅读是获取信息和知识最有效率的一种方式。使用英文的网站数量超过一半，可以获得比只会中文更多的信息。&lt;/li&gt;&lt;/ol&gt;&lt;span&gt; &lt;/span&gt;&lt;h3&gt;阅读时如何查词典？&lt;/h3&gt;&lt;p&gt;郝海龙老师认为，&lt;strong&gt;阅读时遇到生单词时，应当只查该单词在该语境下的意思。&lt;/strong&gt;原因在于：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;一个意思当然比一堆意思要更好记一些；&lt;/li&gt;&lt;li&gt;一次性记下一个词所有的意思，会有适得其反的作用：阅读流程就会被头脑中筛选各种意思的过程打断。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;实际上，背单词解决不了所有的单词问题，原因就是很多单词的含义和用法都需要结合语境去掌握。因此，我们学英语时，也需要尽量&lt;strong&gt;建立单词和语境的关系&lt;/strong&gt;。当你在特定语境碰到一个单词时，应该用尽全力只记在这个语境下的意思。至于其他语境下的意思，碰到了再去记就好了。（如果你一直碰不到，那就说明这种意思或用法非常罕见，平时用不到。）&lt;/p&gt;&lt;p&gt;在查词时还有几点需要注意的地方：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;知道单词的一个意思，不代表知道单词在眼下语境的意思。&lt;/strong&gt;这时，仍然应当将其当作一个生单词去查，并且只查在该语境下的意思。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;如果出现表示特定含义的词组搭配及惯用法&lt;/strong&gt;，请直接记下这个搭配或用法，而不是只记一个单词。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;如果遇到词典上查不到的词&lt;/strong&gt;，可以考虑使用一些大词典的在线版（比如韦氏词典、美国传统词典），并且把这些释义当作阅读理解去看。对于一些新词，可以求助于维基百科和 Urban Dictionary。&lt;/li&gt;&lt;/ol&gt;&lt;span&gt; &lt;/span&gt;&lt;h3&gt;理想的背单词软件应该是什么样？&lt;/h3&gt;&lt;p&gt;郝海龙老师认为，一款理想的背单词软件需要有以下六项功能：(1) 按照遗忘曲线设计的复习周期；(2) 手动和自动发音的选项；(3) 背单词时有列表模式；(4) 支持常见词和已熟记单词的归档；(5) 完善的生词本；以及 (6) 基于「辅助精读法」的阅读模式。&lt;/p&gt;&lt;p&gt;郝海龙老师还重点介绍了他对「生词本」功能的设想：将记录的单词也要纳入到复习周期中。具体来说，这个生词本最好能够有：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;内嵌学习词典，可以手动输入并查词；&lt;/li&gt;&lt;li&gt;选择释义功能，以及手动录入词汇及释义功能；&lt;/li&gt;&lt;li&gt;批量导入导出词表功能；&lt;/li&gt;&lt;li&gt;快速归档和取消归档功能。&lt;/li&gt;&lt;/ul&gt;&lt;span&gt; &lt;/span&gt;&lt;h2&gt;Context 用户的实践分享&lt;/h2&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/29/343c3d31f15d1afc3de9be6254580eef.jpg" src="https://cdn.sspai.com/2023/08/29/343c3d31f15d1afc3de9be6254580eef.jpg"/&gt;&lt;figcaption&gt;Context 用户使用分享功能展示的单词收集&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;考研学生&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;@阿谢尔伊芙斯：&lt;/strong&gt;我目前是考研的学生，学英语的重点主要是记单词和分析句子成分。以前的方法主要是背单词表，然后看一些外刊之类的；用过「不背单词」app，也报过英语补习班。&lt;/p&gt;&lt;p&gt;Context 结合语境记单词的侧重点找得好。之前光背单词表，大部分时间都是记的中文意思，回到文章还是不理解。而且如果用生词本收集，手写效率不高，复制到生词本 app 也麻烦，会打断阅读。&lt;/p&gt;&lt;p&gt;在公测前期，Context 添加词条的步骤还有点繁琐，收藏一个词往往需要五六步。后来的版本已经优化了步骤，点击一个单词，选择「查询」，再点击对应的意思，确认保存就可以了。不过，如果能再精简一步，比如，像点读机一样直接点击单词就查询，就更顺畅了。&lt;/p&gt;&lt;p&gt;结合我学英语的一些痛点，希望以后还能开发词义推荐、分析句子成分的功能。然后导出的格式我希望再丰富一点。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/29/98c110997be7d297229a29df3c712098.png" src="https://cdn.sspai.com/2023/08/29/98c110997be7d297229a29df3c712098.png"/&gt;&lt;figcaption&gt;@阿谢尔伊芙斯 的 Context 界面&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;英语专业学生&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;@寒蝉：&lt;/strong&gt;Context 吸引我的是简化摘录过程，让阅读期间积累单词过程变得很「轻量」，相当于数字化了纸质上的「发现生词—抄录—查询—笔记—回顾」整个流程，但省去了誊抄。&lt;/p&gt;&lt;p&gt;Context 的定位也很清楚，虽然功能上不像 Margin Note 是「瑞士军刀」，但是专精化的功能方向也有更低的学习成本，能更快上手。对比市面上几个主力笔记、阅读软件，Context 的界面设计也是非常美观的。我个人觉得 Context 就很适合拿来做长期外语阅读者的收集库；如果是为了应对短期应试需求，创建一个收集库从单词书中收集也是很方便快捷的。&lt;/p&gt;&lt;p&gt;看到新版更新了导出到 Anki 功能，我也导出复习试过几次，发现整个阅读—收集—复习的过程体验下来都非常流畅顺滑。相信「基础功能买断 + 特性功能订阅」的付费模式应该也会支持到良性的发展。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/29/244f3b65d5dcedffa5c10ecbad3eb8d3.png" src="https://cdn.sspai.com/2023/08/29/244f3b65d5dcedffa5c10ecbad3eb8d3.png"/&gt;&lt;figcaption&gt;@寒蝉 的 Context 界面&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;英语阅读爱好者&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;@德叔：&lt;/strong&gt;《英语自学手册》我很早就买了，学到阅读的章节就进行不下去了，停滞了一年半，直到 Context 出来。&lt;/p&gt;&lt;p&gt;Context 跟《手册》是绝对是绝配。每天早上出门前学一句，睡前学一句，主要使用语境和查词的功能。文章、语境、单词释义，三者结合，我认为这才是 Context 独一无二的优势我。语境最大的作用我觉得是可以快速帮助回忆。&lt;/p&gt;&lt;p&gt;（我已经做成&lt;a href="http://xhslink.com/owsMUt" target="_blank"&gt;视频&lt;/a&gt;了，欢迎帮忙点个赞。）&lt;/p&gt;&lt;p&gt;纸笔学习时代，记得大多数人的阅读习惯都是在不认识单词旁边写意思，无纸化时代这个习惯也有需求，那就看谁家的 app 能做好适配。虽然用分屏实现边看 PDF 手写标注，边用单词软件查询也不是不可以，但二者是割裂的；Context 把它们做到一起了，左文章、右单词的布局很符合过去习惯。&lt;/p&gt;&lt;p&gt;希望 Context 以后能增加长难句分析功能。虽然我基本已经可以自己判断了，但偶尔还是需要辅助判断，而读懂长难句对提升学习自信心有很大帮助的。海龙老师的句子分析方法我扒下来了，阅读的时候随时翻看，确认自己有没有分析对，如果 Context 集成了就更方便了。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/29/39fe08138dbd62000d09ec28d75b03c4.png" src="https://cdn.sspai.com/2023/08/29/39fe08138dbd62000d09ec28d75b03c4.png"/&gt;&lt;figcaption&gt;@德叔 的 Context 界面&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;初中学生&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;@扎布多得勒：&lt;/strong&gt;我是一个初三学生，平常喜欢看些书和新闻。因为自己也算是个哈迷，不满足于过去阅读的中文翻译版作品，并且期望通过英语结识世界各地的笔友，便在暑假开始以阅读英文原著提高英语水平。&lt;/p&gt;&lt;p&gt;以前是 MarginNote 搭配插件学习，但不够方便和稳定，面对词组更需手动从欧路词典复制粘贴，并不是理想的学习方式。后来在少数派上偶然看到了 Context，因刚好在关注英语学习相关内容，便出于好奇参与了内测。&lt;/p&gt;&lt;p&gt;Context 的「根据语境关联释义」模式正好是自己需要的，便花了半天时间重新浏览与导入了之前 MarginNote 的笔记。前期很有些卡顿，但经过优化已基本不存在了，以前三小时左右的阅读现在不到两小时就可以完成。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/29/5e3d90a2c1a3d9ccce1a6a874efdae36.png" src="https://cdn.sspai.com/2023/08/29/5e3d90a2c1a3d9ccce1a6a874efdae36.png"/&gt;&lt;figcaption&gt;@扎布多得勒 的 Context 界面&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt; &lt;/p&gt;&lt;/div&gt;</description><author>数字工具组</author><guid>https://sspai.com/post/82490</guid><pubDate>Tue, 29 Aug 2023 07:45:37 GMT</pubDate></item><item><title>Jambot - Figma 交出的 AI 答卷</title><link>https://sspai.com/post/82441</link><description>&lt;div&gt;&lt;p&gt;&lt;strong&gt;Matrix 首页推荐&lt;/strong&gt; &lt;/p&gt;&lt;p&gt;&lt;a href="https://sspai.com/matrix" target="_blank"&gt;Matrix&lt;/a&gt; 是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。&lt;/p&gt;&lt;p&gt;文章代表作者个人观点，少数派仅对标题和排版略作修改。&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;今年的 6 月份在 Config 2023 上，Figma 推出了许多新功能，但是唯独没有看到任何和今年大火的 AI 相关的功能。这并不代表 Figma 没有赶上 AI 这班列车，在大会的最后，Dylan 宣布了与 Diagram 团队（一个开发 AI 插件的团队）的合作，并提出了对于「在 Figma 中 AI 将会以什么形式出现？」的疑问。&lt;/p&gt;&lt;figure&gt;&lt;img alt="CleanShot 2023-08-25 at 17.02.59@2x.png" data-original="https://cdn.sspai.com/2023/08/25/article/d13e90aae71da6b769d72ad64d5e1781" src="https://cdn.sspai.com/2023/08/25/article/d13e90aae71da6b769d72ad64d5e1781"/&gt;&lt;/figure&gt;&lt;p&gt;如今，已经两个月过去，Figma 也算是赶上了 AI 这趟末班车，并交出了一份在我看来可算是惊艳的答卷。&lt;/p&gt;&lt;h2&gt;FigJam&lt;/h2&gt;&lt;p&gt;我原以为，Figma 与 Diagram 合作后，会先加入类似 AI 生成 SVG 图标，AI 设计等非常硬核的功能，没想到他们压根不走寻常路，反而是在另外一项他们一直在力推的产品，FigJam 中加入了相关功能，而且加的恰到好处。&lt;/p&gt;&lt;p&gt;要来介绍这次加入的 AI 功能，我们首先需要了解一下其依赖的平台，FigJam。&lt;/p&gt;&lt;figure&gt;&lt;img alt="1_Qm7MlGyRWoANUfPK27_MNg.png" data-original="https://cdn.sspai.com/2023/08/25/article/542f16c744d4a20a0e19b485de03e77e" src="https://cdn.sspai.com/2023/08/25/article/542f16c744d4a20a0e19b485de03e77e"/&gt;&lt;/figure&gt;&lt;p&gt;FigJam 是由 Figma 团队在 2021 年 4 月 21 日推出的一款内置于 Figma 软件中的产品。FigJam是一个在线白板工具，用于团队一起进行头脑风暴和构思。Figma 团队对于 FigJam 非常重视，从在创建文件的时候与传统设计文件同级就可以看出。&lt;/p&gt;&lt;p&gt;FigJam 和所有传统的在线白板一样，支持多人协作，有文本框，可以使用不同种类的笔，放置各种形状的「形状」，还可以放置胶带，和各种贴纸，但是它也有自己的思考，有不一样的地方。&lt;/p&gt;&lt;p&gt;比方说，FigJam 把线下头脑风暴等常用的工具，便签，搬到了电子白板上。所以你可以轻松地在 FigJam 中以较低的认知负担还原线下头脑风暴场景，比方说编排亲和图。&lt;/p&gt;&lt;figure&gt;&lt;img alt="CleanShot 2023-08-25 at 17.14.20@2x.png" data-original="https://cdn.sspai.com/2023/08/25/article/14c4bdb9f82465961014b021b8390b61" src="https://cdn.sspai.com/2023/08/25/article/14c4bdb9f82465961014b021b8390b61"/&gt;&lt;/figure&gt;&lt;p&gt;既然把便签搬上大屏幕，那么肯定不能让它和在物理世界一样，只能写写画画。还记得 FigJam 的 Slogan 吗，里面提到了 Ideate，请记住这个词，后面还要考。&lt;/p&gt;&lt;p&gt;既然用来头脑风暴，那么没有思维导图怎么行，但是再加个思维导图功能会不会让整个产品变得复杂臃肿，一下子增加了认知负担。于是 Figma 团队想到，不如把每张便签都看成思维导图的一个节点，然后便签连接便签，成为了一个思维导图。所以，你只需要把鼠标放在便签周围，四周就会出现加号，然后点击就会出现一条连线。&lt;/p&gt;&lt;figure&gt;&lt;img alt="CleanShot 2023-08-25 at 17.27.27@2x.png" data-original="https://cdn.sspai.com/2023/08/25/article/0c671218a39cc62a6a3a46aa2048f836" src="https://cdn.sspai.com/2023/08/25/article/0c671218a39cc62a6a3a46aa2048f836"/&gt;&lt;/figure&gt;&lt;p&gt;于是便签的功能得到了升华，也成为了 FigJam 中我个人觉得最好用的功能之一。当然了，除了便签之外，形状也可以成为节点和其他相连。&lt;/p&gt;&lt;figure&gt;&lt;img alt="FigJam-1.jpeg" data-original="https://cdn.sspai.com/2023/08/25/article/777ad146a80142e454cddbee27c389e2" src="https://cdn.sspai.com/2023/08/25/article/777ad146a80142e454cddbee27c389e2"/&gt;&lt;/figure&gt;&lt;p&gt;Figma 另外一个让人备受好评的功能，在线插件和小组件也被搬入了 FigJam 中。&lt;/p&gt;&lt;figure&gt;&lt;img alt="a9cca8402668dd6b38460a798fc229568a6b8786-2120x1000.png" data-original="https://cdn.sspai.com/2023/08/25/article/9e76b373aad7ea6ae4e3180dc3cf27db" src="https://cdn.sspai.com/2023/08/25/article/9e76b373aad7ea6ae4e3180dc3cf27db"/&gt;&lt;/figure&gt;&lt;p&gt;这就意味着，你可以在 FigJam 中加入了投票功能，快速绘制圆饼图，无需进行任何复杂的配置，只需要搜索你想要的功能，然后点击一下「Run」，就立马出现在了你的面前。&lt;/p&gt;&lt;p&gt;插件和小组件在 FigJam 中有许多妙用，但是由于本文的重点不在这里，就不过多阐述了。&lt;/p&gt;&lt;p&gt;除此之外，FigJam 还有个功能就是创建 Section，Section 可以帮助你分组不同的便签等内容。它类似于一个虚拟的分区或容器，可以帮助用户更好地组织和管理他们的想法和内容。&lt;/p&gt;&lt;figure&gt;&lt;img alt="CleanShot 2023-08-25 at 18.37.24@2x.png" data-original="https://cdn.sspai.com/2023/08/25/article/7d69574e6b4e119fbcb80999252d5b3e" src="https://cdn.sspai.com/2023/08/25/article/7d69574e6b4e119fbcb80999252d5b3e"/&gt;&lt;/figure&gt;&lt;h2&gt;Jambot&lt;/h2&gt;&lt;p&gt;那么，当小组件和便签结合可以发挥什么妙用呢？如果再加入 AI，会变成什么样呢？Figma 在前不久偷偷给了答案，那就是 Jambot。&lt;/p&gt;&lt;p&gt;Jambot 是一个只存在于 FigJam 的小组件，这就意味着你无法在传统的设计文件里使用它。此外，根据 Figma 官方文档，你需要在团队中并且对文档具有编辑权限才可以使用它。这是一个在 Beta 版本的新玩意，所以不排除在未来，它可能可以在更多地方被使用。&lt;/p&gt;&lt;p&gt;你可以通过在 FigJam 的小组件中搜索 Jambot 来使用它。&lt;/p&gt;&lt;figure&gt;&lt;img alt="CleanShot 2023-08-25 at 17.41.04@2x.png" data-original="https://cdn.sspai.com/2023/08/25/article/a4a0ef2c65caae46a076841c7b2b0105" src="https://cdn.sspai.com/2023/08/25/article/a4a0ef2c65caae46a076841c7b2b0105"/&gt;&lt;/figure&gt;&lt;p&gt;当你点击它后，你会发现你的画板上出现了一个列表，这个列表左边还有个圆圈。&lt;/p&gt;&lt;p&gt;这是什么，这和 AI 有什么关系，我的聊天框呢？&lt;/p&gt;&lt;p&gt;首先，我们需要把这个列表看成一个处理器，你可以选择不同的处理方式。既然是个处理器，那么它肯定需要有输入和输出。那么如何输入呢？这时候，我们就不得不提到便签了。是的，这个处理器&lt;strong&gt;使用便签作为输入&lt;/strong&gt;，并且是以一种非常符合直觉的方式来完成。下面我们就来演示一下。&lt;/p&gt;&lt;h3&gt;Ideate&lt;/h3&gt;&lt;p&gt;Ideate 是我觉得最能够展现 Jambot 强大之处的功能，首先我们需要在 Jambot 上选择 Ideate 这个选项，然后它就会变成一个带有一个运行按钮的小组件。并且，左边的原点自动连接上了一个便签。&lt;/p&gt;&lt;figure&gt;&lt;img alt="CleanShot 2023-08-25 at 17.46.26@2x.png" data-original="https://cdn.sspai.com/2023/08/25/article/974743d8b4764c448db38d963fde37c1" src="https://cdn.sspai.com/2023/08/25/article/974743d8b4764c448db38d963fde37c1"/&gt;&lt;/figure&gt;&lt;p&gt;Ideate 的作用是来一次性帮我们产生多个想法。所以我们在便签里输入「A product in the near future」，点击绿色运行按钮，等待一会，奇迹出现了。&lt;/p&gt;&lt;figure&gt;&lt;img alt="CleanShot 2023-08-25 at 17.48.44@2x.png" data-original="https://cdn.sspai.com/2023/08/25/article/c1cc504e880a74ef192d861b52a2a413" src="https://cdn.sspai.com/2023/08/25/article/c1cc504e880a74ef192d861b52a2a413"/&gt;&lt;/figure&gt;&lt;p&gt;Ideate 小组件的右边出现了代表输出的圆圈，并连接了一个自动产生的 Section，Section 里面是不同的便签，里面分别是想法各异的未来产品。这简直就是神器啊，以后再也不怕没有想法了。&lt;/p&gt;&lt;p&gt;但这还没完，我们可以再创建一个便签写「A product that cares about humanity」，将其连接到 Ideate 组件的输入口。再次点击运行按钮，我们会发现 Section 里面的内容变了。&lt;/p&gt;&lt;figure&gt;&lt;img alt="CleanShot 2023-08-25 at 17.52.18@2x.png" data-original="https://cdn.sspai.com/2023/08/25/article/41538f2a667dd194d7487759739e1e6c" src="https://cdn.sspai.com/2023/08/25/article/41538f2a667dd194d7487759739e1e6c"/&gt;&lt;/figure&gt;&lt;p&gt;这个时候 Section 里面给出的产品是未来的，又是关怀人性的，符合我们给它的两个输入。能接受多个节点成为上下文是我觉得 Jambot 最厉害的功能，因为这代表我们人类思考中的整合。而 Ideate 所输出的多个结果则代表了我们人类思考中的分流。&lt;/p&gt;&lt;p&gt;我们还可以更近一步，在新的 Jambot 组件中也选择 Ideate，然后，再次生成与之有关的更多想法，一步一步思考，一步一步细化。&lt;/p&gt;&lt;figure&gt;&lt;img alt="CleanShot 2023-08-25 at 17.59.09@2x.png" data-original="https://cdn.sspai.com/2023/08/25/article/a92b8dd3835816f9188f695cb9058c83" src="https://cdn.sspai.com/2023/08/25/article/a92b8dd3835816f9188f695cb9058c83"/&gt;&lt;/figure&gt;&lt;p&gt;除此之外，我们还可以融合两个想法，我们新建一个 Jambot 组件，然后选择 Custom，使用「Combine two ideas」。生成一个结合了两个想法的 idea 后，我们可以再将其输入到 Ideate 组件上，生成更多类似的想法。&lt;/p&gt;&lt;figure&gt;&lt;img alt="CleanShot 2023-08-25 at 18.01.52@2x.png" data-original="https://cdn.sspai.com/2023/08/25/article/6e94cfc5c415f8e6d2edfc1394a71f68" src="https://cdn.sspai.com/2023/08/25/article/6e94cfc5c415f8e6d2edfc1394a71f68"/&gt;&lt;/figure&gt;&lt;p&gt;当然，要注意的是，所有的 Jambot 组件都只支持一级上下文，也就是只将其左边直接连接的便签作为上下文。&lt;/p&gt;&lt;figure&gt;&lt;img alt="CleanShot 2023-08-25 at 18.33.33@2x.png" data-original="https://cdn.sspai.com/2023/08/25/article/2a2e6f380d845fa5329226a909d86b5b" src="https://cdn.sspai.com/2023/08/25/article/2a2e6f380d845fa5329226a909d86b5b"/&gt;&lt;/figure&gt;&lt;p&gt;在上图中，我将我的信息拆分到两个连接的便签，然后将其连接到 Custom 组件，会发现它回答不出我的名字。&lt;/p&gt;&lt;h3&gt;Summarize&lt;/h3&gt;&lt;p&gt;Summarize 也是一个非常强大，且直观的 Jambot 功能。&lt;/p&gt;&lt;p&gt;我们之前看到了使用 Ideate 组件，会输出一个包含多个想法的 Section，那么我们可不可以用 Section 作为输入呢？答案是可以的，我们可以通过 Summarize 来实现这一点。这也是为什么Summarize 使用起来非常直观的原因。&lt;/p&gt;&lt;p&gt;假设我们现在正在开发一款产品，我们通过多个便签来描绘我们的目标用户。&lt;/p&gt;&lt;figure&gt;&lt;img alt="CleanShot 2023-08-25 at 18.40.33@2x.png" data-original="https://cdn.sspai.com/2023/08/25/article/ea349c2ea81b4ce28392aca61ae74688" src="https://cdn.sspai.com/2023/08/25/article/ea349c2ea81b4ce28392aca61ae74688"/&gt;&lt;/figure&gt;&lt;p&gt;这个时候我们希望可以有一段话来总结我们的目标用户，Summarize 就可以派上用场了。我们只需要使用 Section 工具选择所有的便签，然后将其连接到 Summarize 组件，并选择 TL;DR 选项，就大功告成了。&lt;/p&gt;&lt;figure&gt;&lt;img alt="CleanShot 2023-08-25 at 18.46.02.gif" data-original="https://cdn.sspai.com/2023/08/25/article/b96fc3e4cbdec44415b5ef9bd3e12292" src="https://cdn.sspai.com/2023/08/25/article/b96fc3e4cbdec44415b5ef9bd3e12292"/&gt;&lt;/figure&gt;&lt;p&gt;不过这里有值得改进的点，那就是希望 Section 可以和便签一样，在其周围显示添加连接线的按钮。&lt;/p&gt;&lt;p&gt;Summarize 支持两种总结模式，一种是以文章方式输出，一种是以「点」方式输出。非常好的是，这两种输出方式不是互斥的，你可以同时以这两种方式输出。&lt;/p&gt;&lt;figure&gt;&lt;img alt="CleanShot 2023-08-25 at 18.49.13@2x.png" data-original="https://cdn.sspai.com/2023/08/25/article/2fb62575227ce00055ba7acaf1bb2938" src="https://cdn.sspai.com/2023/08/25/article/2fb62575227ce00055ba7acaf1bb2938"/&gt;&lt;/figure&gt;&lt;p&gt;当然 Section 作为输入不是 Summarize 的独占功能，其他的 Jambot 组件也均可以使用。&lt;/p&gt;&lt;h3&gt;Give Me&lt;/h3&gt;&lt;p&gt;Give Me 是一个非常神奇的组件，它可以给你提供与你输入的便签有关的人物，例子，想法，统计，和事实等。但是它具体会给你哪些选项以供你生成相关内容会随着你的输入而改变。比方说我的输入是需要一些历史名人，那么它就会给出一些相关选项，例如给我一些人，或者给我一些事件，然后我可以选择其中一项生成。&lt;/p&gt;&lt;figure&gt;&lt;img alt="CleanShot 2023-08-25 at 18.56.37@2x.png" data-original="https://cdn.sspai.com/2023/08/25/article/1e383fdd574d0d16732a8443e34de818" src="https://cdn.sspai.com/2023/08/25/article/1e383fdd574d0d16732a8443e34de818"/&gt;&lt;/figure&gt;&lt;p&gt;如果，我的输入是一个由多位用户评分所组成的 Section，那么它的选项里会出现与这个 Section 内容有关的选项，比方说 Rating，选择之后会给我所有 Section 里面包含的评分，如同一个提取器。&lt;/p&gt;&lt;figure&gt;&lt;img alt="CleanShot 2023-08-25 at 18.58.10@2x.png" data-original="https://cdn.sspai.com/2023/08/25/article/0adc9aded6cac5a4e3459f1099e38fb5" src="https://cdn.sspai.com/2023/08/25/article/0adc9aded6cac5a4e3459f1099e38fb5"/&gt;&lt;/figure&gt;&lt;h3&gt;其他组件&lt;/h3&gt;&lt;p&gt;鉴于篇幅，Jambot 的其他功能可能无法一一阐述，在下面我会列出所有 Jambot 支持的所有功能组件（翻译自 Figma 官网）：&lt;/p&gt;&lt;figure&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;名字&lt;/th&gt;&lt;th&gt;使用&lt;/th&gt;&lt;th&gt;案例 Prompt&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Ideate!&lt;/td&gt;&lt;td&gt;产生多个与输入相关的想法。&lt;/td&gt;&lt;td&gt;&amp;quot;Icebreaker questions for our weekly team sync.&amp;quot;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Quick question&lt;/td&gt;&lt;td&gt;询问与输入便签有关的问题。&lt;/td&gt;&lt;td&gt;&amp;quot;What can I cook with [sticky text]?&amp;quot;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Teach me about this&lt;/td&gt;&lt;td&gt;让 Jambot 解释或者教导输入的便签。&lt;/td&gt;&lt;td&gt;&amp;quot;Impressionism&amp;quot;, &amp;quot;Design systems&amp;quot;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Give me…&lt;/td&gt;&lt;td&gt;提供与输入便签相关的信息，包含人、例子、想法、数据和事实。&lt;/td&gt;&lt;td&gt;&amp;quot;US Women’s National Soccer Team&amp;quot;, &amp;quot;Punk rock&amp;quot;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Rabbit hole&lt;/td&gt;&lt;td&gt;正如其名，这是一个可以让你打破砂锅问到底，深入探索一个知识点的组件。&lt;/td&gt;&lt;td&gt;&amp;quot;Flamenco&amp;quot; will offer you information on The history of Flamenco or Regional variations of Flamenco music&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Similar stuff&lt;/td&gt;&lt;td&gt;展示相关主题的分支，开辟新的探索领域。&lt;/td&gt;&lt;td&gt;&amp;quot;Cacio e Pepe&amp;quot; will show you explanations of similar recipes like Aglio e olio&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Summarize&lt;/td&gt;&lt;td&gt;以 「点」 或者文章的方式总结一群便签。&lt;/td&gt;&lt;td&gt;[Selection of stickies with action items]&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Rewrite this&lt;/td&gt;&lt;td&gt;让 Jambot 使用不同的语气等去重写一段话&lt;/td&gt;&lt;td&gt;&amp;quot;Thanks for your input, but I will be moving forward with the team’s existing plan&amp;quot; as a polite but assertive Slack message&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Turn this into a…&lt;/td&gt;&lt;td&gt;可以将输入重写为一个玩笑，诗等。&lt;/td&gt;&lt;td&gt;&amp;quot;Variables in Figma&amp;quot; as a poem&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Code this up&lt;/td&gt;&lt;td&gt;让 Jambot 以特定的语言去编写相关代码。&lt;/td&gt;&lt;td&gt;&amp;quot;12 column CSS flex box grid&amp;quot;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Custom&lt;/td&gt;&lt;td&gt;使用自己的 Prompt，可以将上面的看成 Jambot 提前为你写好的 Prompt。&lt;/td&gt;&lt;td&gt;&amp;quot;Write me a song about the Black-Crowned Night Herons of Lake Merritt.&amp;quot;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2&gt;Jambot 的问题&lt;/h2&gt;&lt;p&gt;Jambot 已经非常强大了，其交互方式在我看来是对传统的对话式 AI 的降维打击。但是它仍然有所不足。&lt;/p&gt;&lt;p&gt;首先，它无法理解上下文。Jambot 是一个一次性的 AI，它无法追溯之前的信息。但这也不是不能解决，你可以通过把之前生成的或者你自己写的便签连接到新的 Jambot 组件上，这样这个新的 Jambot 组件就可以获得之前的上下文了。不过还是希望 Jambot 在未来可以支持自动获得一整个链条的上下文。&lt;/p&gt;&lt;p&gt;其次，Jambot 在目前是有使用限制的（个人限制非团队），每 24 小时刷新一次，无法增加。在未来，可能会推出付费的方式来增加使用次数。此外，你只能在教育或者付费的团队中使用，也就意味着目前免费用户是无缘这项功能的。&lt;/p&gt;&lt;p&gt;然后就是，Jambot 无法将便签（或者带文字的形状或者 Section）以外的的内容作为输入。如果在未来，所有的小组件都可以连接上 Jambot，那么绝对可以大幅度提升效率和创造力。&lt;/p&gt;&lt;figure&gt;&lt;img alt="CleanShot 2023-08-25 at 19.24.39@2x.png" data-original="https://cdn.sspai.com/2023/08/25/article/75408fa20db94fd735371f8019691480" src="https://cdn.sspai.com/2023/08/25/article/75408fa20db94fd735371f8019691480"/&gt;&lt;/figure&gt;&lt;p&gt;此外，不能选择使用 ChatGPT 3.5 还是 4.0，不过考虑到目前没有直接收费，这一点我们也不过于苛求了。&lt;/p&gt;&lt;h2&gt;Flowith&lt;/h2&gt;&lt;p&gt;不过可能很多人不知道的是，在很早以前，有一个中国团队已经推出了类似于这样交互方式的产品，那就是 &lt;a href="https://sspai.com/post/flowith.cc" target="_blank"&gt;Flowith&lt;/a&gt;。Flowith 可以实现 Jambot 几乎所有功能，可能交互上面没有这么丝滑，不过理念也是一致的。并且其还能保存之前的上下文，使用变量的功能，比 Jambot 有更多的可玩性。甚至还有插件功能，可以直接让 ChatGPT 使用谷歌搜索信息。此外，Flowith 还有社区功能，上面有一些神奇的东西。不过，Flowith 在使用体验上可能真的不如 Jambot（据说会得到改进），不过如果你需要的是一个更加强大的，且更加本土化的节点式的 ChatGPT，那么还是非常推荐的。&lt;/p&gt;&lt;figure&gt;&lt;img alt="CleanShot 2023-08-25 at 19.36.01@2x.png" data-original="https://cdn.sspai.com/2023/08/25/article/4c0e8be3c0d356e0ab8baedb984a0002" src="https://cdn.sspai.com/2023/08/25/article/4c0e8be3c0d356e0ab8baedb984a0002"/&gt;&lt;/figure&gt;&lt;h2&gt;写在最后&lt;/h2&gt;&lt;p&gt;Jambot 的推出可以看出 Figma 在生成式 AI 上面是有着自己的思考的，所以这让我更加期待，当它给自己的设计功能加上 AI 后会玩出什么花样，让我们拭目以待吧。&lt;/p&gt;&lt;p&gt;&amp;gt; 下载少数派 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/link?target=https%3A%2F%2Fwww.xiaohongshu.com%2Fuser%2Fprofile%2F63f5d65d000000001001d8d4" target="_blank"&gt;少数派小红书&lt;/a&gt;，感受精彩数字生活 🍃&lt;/p&gt;&lt;p&gt;&amp;gt; 实用、好用的 &lt;a href="https://sspai.com/mall" target="_blank"&gt;正版软件&lt;/a&gt;，少数派为你呈现 🚀&lt;/p&gt;&lt;/div&gt;</description><author>ZHYuts</author><guid>https://sspai.com/post/82441</guid><pubDate>Tue, 29 Aug 2023 03:31:39 GMT</pubDate></item></channel></rss>