<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>少数派</title><link>https://sspai.com</link><description>少数派RSS Feed-文章完整抓取版</description><language>zh-CN</language><managingEditor>contact@sspai.com (少数派)</managingEditor><lastBuildDate>Fri, 01 Sep 2023 09:00:03 GMT</lastBuildDate><generator>RSSEngine powered by PyRSS2Gen-1.1.0</generator><image><url>https://i0.hdslb.com/bfs/face/bbe80dc05f67e9543a33b067764227b02504bfa0.jpg</url><title>icon</title><link>https://i0.hdslb.com/bfs/face/bbe80dc05f67e9543a33b067764227b02504bfa0.jpg</link></image><item><title>闲置音箱组环绕声系统，低成本大幅提升观影体验</title><link>https://sspai.com/post/82342</link><description>&lt;div&gt;&lt;p&gt;&lt;strong&gt;Matrix 首页推荐&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://sspai.com/matrix" target="_blank"&gt;Matrix&lt;/a&gt; 是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。&lt;br/&gt;文章代表作者个人观点，少数派仅对标题和排版略作修改。&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;别再拿旧音箱换不锈钢盆了，本文向你分享利用 PC 端虚拟声卡软件，将三个音频设备整合为虚拟 5.1 环绕声系统的应用经验。&lt;/p&gt;&lt;p&gt;主观感受这个方案的效果实在超乎期待，三个听感参差的常规音频设备，组合在一起竟有化学反应一样的全新感受，确实如很多人所说的，声音效果的提升带来的震撼，比画面提升来得更强烈，而且让我意识到大多数影院的音响系统真是渣渣，好多电影都很想再用这个系统二刷一遍。&lt;/p&gt;&lt;h2&gt;背景&lt;/h2&gt;&lt;p&gt;近期入了坚果 N1 Ultra 激光投影仪，在家用 110 寸幕布放电影，观感确实非常棒，但是听感是真有点别扭。&lt;/p&gt;&lt;p&gt;虽说现在投影仪普遍都挺重视音频表现了，各种大厂贴牌调教，这款投影的音质表现也确实还算可以，但是投影的体积和摆放位置，对声音表现的限制太大了，摆在斜后方有多难受就不说了，就算摆在正前方也感觉发声位置很出戏。&lt;/p&gt;&lt;p&gt;然后就开始琢磨环绕声的方案，看来看去比较理想的是带后置音箱的回音壁形态，三星 Q930B 是让我心动到马上要下单了的，但是有两点让我犹豫了。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;投影与回音壁接线看起来非常麻烦。因为回音壁本体肯定放在幕布附近，就需要一根 5 米左右的 HDMI 线（投影 110 寸所需的最短距离就接近 3 米了）从投影这边的 eARC 接口连过去，家里没有预留走线通道，这么连接可太别扭了。&lt;/li&gt;&lt;li&gt;回音壁的可移动性非常低。坚果 N1 Ultra 最抓我的一点就是便于移动，云台和手提箱设计极大地方便了场景切换，让我很想在露营、出差旅居等场景中使用。但回音壁太大了，Q930B 的长条音箱和低音炮的尺寸吓人，即使低配款也不适合移动，而且对天花板发射的天空声道在户外没有效果，只能轰鸟。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;然后又看到有评测说，只是播放常规两声道音乐的话，Q930B 也就相当于一千多块的音箱水平而已，那么，我想是不是也可以自己把多个音箱组合起来拼成个环绕声系统。&lt;/p&gt;&lt;p&gt;经过半天研究，把功放机方案排除后，就找到了本文的解决方案——VoiceMeeter 虚拟声卡方案。&lt;/p&gt;&lt;h2&gt;观影方案&lt;/h2&gt;&lt;p&gt;在讲解我的实际执行方案之前，我们先来看一下常规的观影方案，在下面的方案中，我以红、蓝、绿三个矩形，来表示三个音频设备。&lt;/p&gt;&lt;h3&gt;电视 / 显示器 观影方案&lt;/h3&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/23/e11403d09a88325cb5f8b2e3e566f5e4.png" src="https://cdn.sspai.com/2023/08/23/e11403d09a88325cb5f8b2e3e566f5e4.png"/&gt;&lt;/figure&gt;&lt;p&gt;这是最常见的方案，大多数人都是在显示设备旁边放上 2.0 或 2.1 的立体声音箱，在电视 / 显示器可以发声且满足基本要求的情况下，再加一个后置音箱就可以实现此方案。&lt;/p&gt;&lt;p&gt;如果电视 / 显示器不适合发声，可以考虑为其外接音箱。（直接从显示设备的音频接口上接，不要接电脑多占通道 / 接口。下文投影设备同理）&lt;/p&gt;&lt;h3&gt;投影后置观影方案&lt;/h3&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/23/681e0f6d80eb805fe97ef039b06c5283.png" src="https://cdn.sspai.com/2023/08/23/681e0f6d80eb805fe97ef039b06c5283.png"/&gt;&lt;/figure&gt;&lt;p&gt;这种投影方案可以提供更大的观看视场角，缺点在于投影摆放位置局限性较大，最好是在正后方高于头顶的位置，摆偏了声场就偏了，摆低了容易遮挡画面。&lt;/p&gt;&lt;h3&gt;投影前置观影方案&lt;/h3&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/23/8217ea2710d19227d1dd6b06d46ec2ca.png" src="https://cdn.sspai.com/2023/08/23/8217ea2710d19227d1dd6b06d46ec2ca.png"/&gt;&lt;/figure&gt;&lt;p&gt;这种方案中，投影摆放时最好位于正前方，但高低都可以，不遮挡视线就行，缺点就是观看视场角小，摆近了有可能会受到机器散热排风影响，摆远了画面就更小了。&lt;/p&gt;&lt;h2&gt;硬件选配&lt;/h2&gt;&lt;p&gt;只要大体上按上面的观影方案来实施，就能达到前与后、左与右、人声与环境的层次分离，并伴有低音润色。&lt;/p&gt;&lt;p&gt;实际执行中并不一定完全遵循其功能定位和摆放位置，可根据设备特性进行一定调整。下面就是我的实际选配方案。&lt;/p&gt;&lt;h3&gt;后置音频设备 &lt;/h3&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/23/dca83ea4acc8a530c410ceffd0095dc3.jpg" src="https://cdn.sspai.com/2023/08/23/dca83ea4acc8a530c410ceffd0095dc3.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;我采用的是 索尼 SRS-XG300 或 SRS-XB43 这种大号移动蓝牙音箱，它们的优势是部署方便、电池容量大、低音足、防水防尘，适合户外使用，缺点是基本无法区分左右声道的声音（同型号的两台是可以做立体声配对的，这样就可以正确播放立体声音频，不过我没有做测试），但是作为后置的话，其实左右方位区分也不是特别重要。&lt;/p&gt;&lt;h3&gt;前置立体声音频设备&lt;/h3&gt;&lt;p&gt;一般来说推荐使用常规的 2.0 或 2.1 桌面音箱，但是我在这里采用的是一个比较特别的设备——&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/23/5f6a2fd6db1d8780d05fc4db8f69f642.jpg" src="https://cdn.sspai.com/2023/08/23/5f6a2fd6db1d8780d05fc4db8f69f642.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;索尼 SRS-WS1 颈挂式音箱，因为它有难以替代的优点：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;便携性较好，即使在户外用也是可行的。&lt;/li&gt;&lt;li&gt;自有无线协议，比蓝牙协议音质好（相比于不支持无损音频协议的设备而言）、延迟低，且可以快速断线重连。&lt;/li&gt;&lt;li&gt;有低音震动功能，沉浸感拉满（搭配 PS5 上下齐震特别爽）&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;不过它缺点也挺明显：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;无线发射器需要单独供电，比较麻烦，而且最好用它原配的电源适配器，不然容易有噪声。&lt;/li&gt;&lt;li&gt;本体声音有点干，好在本文所述的环绕声系统内，其它设备的低音可以弭平此问题。&lt;/li&gt;&lt;li&gt;震动其实不是一个可选项，因为其震动和低音是强绑定的，不开最大挡位震动的话，其音质就比较次了。（对我来说最大化震动是很不错的体验，部分人可能觉得有点过强）&lt;/li&gt;&lt;li&gt;单机只能独享，两人的话还得再配一台，而且上限就是两台，再多就得配音频一分二线，并增加额外的发射器了。&lt;/li&gt;&lt;li&gt;已停产，基本买不到全新的了，它的后续机型功能定位上差异巨大，且体验我感觉都不如这款。&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;前置人声与低音音频设备&lt;/h3&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/23/14a1df51901826dd59de368dbb8c3529.jpg" src="https://cdn.sspai.com/2023/08/23/14a1df51901826dd59de368dbb8c3529.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;这里就直接使用投影仪自带的音响了，坚果 N1 Ultra 采用 20W 的丹拿调教音响，音质确实不错，但某些自媒体说比 30 万级汽车音响还好，就有点离谱了，只能说单腔品质可能更高，但是综合听感通常不如，毕竟它自己的声场局限在这里。&lt;/p&gt;&lt;h3&gt;主控设备&lt;/h3&gt;&lt;p&gt;即用来播放影片、输出声音的设备，应是具有蓝牙、HDMI、3.5mm 接口的 Windows PC，我比较常用的是一台 Windows 掌机——GPD Win4 。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/23/cf8fcfd2839bf202f5a472c556fb4f6b.jpg" src="https://cdn.sspai.com/2023/08/23/cf8fcfd2839bf202f5a472c556fb4f6b.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;其超高的集成度和功能性对我而言非常具有吸引力。&lt;/p&gt;&lt;h2&gt;软件配置&lt;/h2&gt;&lt;p&gt;必要的软件是 &lt;a href="https://vb-audio.com/Voicemeeter/banana.htm" target="_blank"&gt;Voicemeeter&lt;/a&gt; ，免费而强大。注意一定要是 Banana 版本，基础版的功能较少。&lt;/p&gt;&lt;p&gt;正常安装之后，重启电脑，将电脑音频输出设备设置为 VoiceMeeter Input (VB-Audio VoiceMeeter VAlO)，不要选另一个近似但带 「AUX」 的输出设备，然后连接上所有音视频设备，打开 Voicemeeter Banana 软件。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/23/c0c95763bb7b053b745a11d4cb6ce307.jpg" src="https://cdn.sspai.com/2023/08/23/c0c95763bb7b053b745a11d4cb6ce307.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;在主界面中，做如下操作：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;在图中标出的区域 1 中，点亮 A1、A2、A3 输出通道。（这里的滑块可以调整总音量）&lt;/li&gt;&lt;li&gt;参考上文的「硬件选配」 部分，在图中标出的区域 2 中，分别指定 A1、A2、A3 通道对应的设备。我这里 A1 是后置音频，对应索尼 SRS-XB43，A2 是前置立体声音频，对应 索尼 SRS-WS1，A3 是前置人声与低音音频，对应 坚果 N1 Ultra。注意每个设备会有多种前缀，代表不同的驱动方式，我测试都使用 「WDM」 前缀的就可以。&lt;/li&gt;&lt;li&gt;在图中标出的区域 3 中，设置 A1（后置）音频通道为 Rear Only，设置 A2（前置立体声）音频通道为 stereo Repeat ，设置 A3（前置人声与低音）音频通道为 Normal mode。（这里的滑块可以调整各自通道的音量，那个 「mono」 按钮可以让左右声道交换，EQ 就是均衡器）&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;然后打开 Voicemeeter 安装时附带的 8x8 Output Matrix 程序（VoicemeeterBUSMatrix8.exe）。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/23/50d7e37daff20709e7fd122a116cc615.jpg" src="https://cdn.sspai.com/2023/08/23/50d7e37daff20709e7fd122a116cc615.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;这是一个通道矩阵混合器，这里面的 8 个通道对应的就是 7.1 声道，但我们只用到 5.1 声道规格就行，因为大部分环绕声片源也就支持到 5.1。&lt;/p&gt;&lt;p&gt;在这里就是只有 1 至 6 号通道是有效的，其中 1、2 是前置左右立体声（FL、FR），3 是前置人声（C），4 是低音（SW），5、6 是后置左右立体声（SL、SR）。&lt;/p&gt;&lt;p&gt;通过这个工具，我们就可以把输入的环绕声音源，按我们希望的方式进行映射输出，以实现用较少的设备达成环绕声效果。&lt;/p&gt;&lt;p&gt;但需注意的是，此工具只能针对一个通道（设备）进行控制，所以你应该选择一个比较全面的设备，通过映射让其身兼数职，在这里我们选择使用 A3 通道（坚果投影）。&lt;/p&gt;&lt;p&gt;点亮 BUS A3，并将通道映射做如下配置（你需要用鼠标右键点击对应的方块，输入其百分比值，按回车确定）：&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/23/e26ab6b4c036ca82fb88e71f929ea6c1.jpg" src="https://cdn.sspai.com/2023/08/23/e26ab6b4c036ca82fb88e71f929ea6c1.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;首先要理解，我们之前设置了 A3 音频通道为 Normal mode ，这样其实它就只能输出前置左右声道的声音，也就是矩阵中其实只有 Out 1、Out 2 两行对其有作用。（坦白说我也不是很确定 Normal mode 和 stereo Repeat 模式的确切区别，起码在我的设备上听不出来，猜想也许其中一项是将环绕声全部输出，主要是给功放用的，一般设备还是只能读取左右声道进行播放）&lt;/p&gt;&lt;p&gt;那么根据我们需求做出调整：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;它要能播放中置人声，就是把 In 3 通道 100% 映射到 Out 1、Out 2 所在行 。&lt;/li&gt;&lt;li&gt;需要让它能兼顾低音，就是把 In 4 通道 100% 映射到 Out 1、Out 2 所在行。&lt;/li&gt;&lt;li&gt;虽然我们在 A2 通道对应的 索尼 SRS-WS1 颈挂式音箱 设备中能够播放前置左右立体声，但是它声音是有点干的，所以我们在这个 A3 通道中，可以不完全关闭前置左右立体声对应的 In 1、In 2 通道，而是保留其 35% 到 75% 的音量， 来作为润色补充。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;经过配置后，我们的实际方案就变成了这样：&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/23/b864520e8ae5dd6e0484ab943a874d4d.png" src="https://cdn.sspai.com/2023/08/23/b864520e8ae5dd6e0484ab943a874d4d.png"/&gt;&lt;/figure&gt;&lt;p&gt;接下来用 Windows 的环绕声配置功能进行验证，以 Win11 为例。&lt;/p&gt;&lt;p&gt;打开设置&amp;gt;系统&amp;gt;声音，拉到最底下，选择「更多声音设置」。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/23/8e9fcdbb36e091593a7a7fb79b630619.jpg" src="https://cdn.sspai.com/2023/08/23/8e9fcdbb36e091593a7a7fb79b630619.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;在此界面中右键点击 VoiceMeeter Input ，选择「配置扬声器」。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/23/aa0e5d37235a850ace1dda23be7848ad.jpg" src="https://cdn.sspai.com/2023/08/23/aa0e5d37235a850ace1dda23be7848ad.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;接下来设置音频声道为「5.1 环绕」，点击按钮进行测试。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/23/16784d9f2813f26984e0c69636399ef0.jpg" src="https://cdn.sspai.com/2023/08/23/16784d9f2813f26984e0c69636399ef0.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;没问题的话就一路下一步了，而通常在这里你可能会遇到的是声音不同步的问题，这主要是因为设备摆放距离不一，连接方式不一，所以就有必要给不同的音频通道设置不同的延迟。&lt;/p&gt;&lt;p&gt;你可以在 Voicemeeter 主界面右上角的 「Menu」 菜单中，选择「System setting / Options…」 打开设置。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/23/87589468e433531360fdfb7da4525b91.jpg" src="https://cdn.sspai.com/2023/08/23/87589468e433531360fdfb7da4525b91.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;然后在右侧的 OUT A1、OUT A2、OUT A3 这里，分别设置不同通道的延迟，以进行匹配。通常来说，蓝牙连接的自身延迟最大，应为其它设备增加延迟，以匹配蓝牙的延迟。&lt;/p&gt;&lt;p&gt;你还可以在这一环节中，实际播片进行测试，但注意，播放器可能需要修改声音设置才能支持环绕声，我使用的 PotPlayer 是这样设置的：&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/23/339037e601e5c5af32a8b485d01e8747.jpg" src="https://cdn.sspai.com/2023/08/23/339037e601e5c5af32a8b485d01e8747.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;注意，播放 7.1 声道片源时，可以 右键&amp;gt;声音&amp;gt;选择声音 ，点击 5.1 的声音轨道，一般 7.1 片源都会附带 5.1 的。&lt;/p&gt;&lt;h2&gt;效果测试&lt;/h2&gt;&lt;p&gt;下面我来简述一下自己实际测试过的内容。&lt;/p&gt;&lt;h3&gt;电影测试&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;《铃芽之旅》，层次分明，音效处理非常棒，几段高潮都能让人感到惊艳，尤其雨声由远及近、唱声萦绕耳边的感觉非常美妙，可以说充分发挥了环绕声的优势。&lt;/li&gt;&lt;li&gt;《元素大都会（疯狂元素城）》，同样层次分明，较高的音效制作水准，体验很好。&lt;/li&gt;&lt;li&gt;《深海》，不错，但是不那么分明，感觉是音效制作技术不够好。&lt;/li&gt;&lt;li&gt;《满江红》，分层是有的，但是利用率不太高。&lt;/li&gt;&lt;li&gt;《目中无人》，感觉声音处理方法有问题，经常把本该中置的人声，输出到左右声道了，而且人声润色不够，听感聒噪。&lt;/li&gt;&lt;li&gt;《疾速追杀 4》，打斗、枪声、碎玻璃、背景音乐、各种乐器，表现都比较出彩，尤其枪声与乐器，朋友说能听出乐器很贵的感觉。&lt;/li&gt;&lt;li&gt;《闪电侠》，总体音效层次是不错的，但是激战时你会感觉音效相比画面来说不够出彩，略微低于期待。&lt;/li&gt;&lt;li&gt;《壮志凌云 2》，中规中矩。&lt;/li&gt;&lt;li&gt;《狮子王》，真实版的那个，也是中规中矩，音乐场景甚至感觉有点欠缺。&lt;/li&gt;&lt;li&gt;《新神榜：杨戬》，我下的是 120 帧版本，竟然不支持环绕声，退回到立体声感觉落差极大。&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;音乐测试&lt;/h3&gt;&lt;p&gt;只试了网易云音乐，默认只能左右立体声，没有环绕效果，我记得好像有什么全景声之类的功能，不知道 PC 端是否支持，有待后续研究。&lt;/p&gt;&lt;h3&gt;游戏测试&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;《暗黑破坏神 4》，作为一个俯视角游戏，环绕声设计确实会比较难，而实际上也确实不是很好，声音方位感觉比较乱。&lt;/li&gt;&lt;li&gt;《街霸 6》，只测试了对战模式，有分层次，中规中矩，不出彩。&lt;/li&gt;&lt;li&gt;《神秘海域：盗贼遗产合集》，支持环绕声，但是感觉利用率很低，体验不好。&lt;/li&gt;&lt;li&gt;《最后生还者 Part 1》，我看设置里好像没有 5.1 环绕声，就没测。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;猜想也许较新的《蜘蛛侠》，还有就是《使命召唤》类的 FPS 游戏可能会对方位有很强的表现，有待进一步测试。&lt;/p&gt;&lt;h2&gt;音频设备调换&lt;/h2&gt;&lt;p&gt;参照观影方案部分，投影位置前后调换是比较常见的需求。&lt;/p&gt;&lt;p&gt;实际使用中，投影和蓝牙音箱位置发生互换，则只需要将 A1 、 A3 两个通道的模式进行互换（互换 Rear Only 和 Normal mode），然后在通道矩阵混合器 8x8 Output Matrix 中，将点亮的 「BUS A3」 切换为「BUS A1」，就可以了。&lt;/p&gt;&lt;p&gt;当然，直接切换 A1、A3 通道对应的目标设备也是可行的，只是有可能涉及到相对应的音量增益、EQ、延迟等设置，调换起来就比较麻烦了，所以不推荐这样操作。&lt;/p&gt;&lt;p&gt;&amp;gt; 下载 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;少数派 2.0 客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，解锁全新阅读体验 📰&lt;/p&gt;&lt;p&gt;&amp;gt; 实用、好用的 &lt;a href="https://sspai.com/mall" target="_blank"&gt;正版软件&lt;/a&gt;，少数派为你呈现 🚀&lt;/p&gt;&lt;/div&gt;</description><author>蝉心</author><guid>https://sspai.com/post/82342</guid><pubDate>Fri, 01 Sep 2023 07:59:13 GMT</pubDate></item><item><title>周末前的「摸鱼」时刻，你也许需要这些轻松小游戏</title><link>https://sspai.com/post/82609</link><description>&lt;div&gt;&lt;p&gt;上班的时间总是漫长的，免不住有些时候脑筋卡死。适当摸鱼可以帮助我们将缠得死死、金属疲劳的发条松开，激发更多的工作动力，后面我编不下去了。&lt;/p&gt;&lt;p&gt;好啦，上一个假期都过去多久了，放眼日历，下个假期也还要一个月才来。可能你的假期计划已经写得满满当当，就靠那几天还要带调休的日子吊命，却还时刻担心一个加班让自己的生活泡汤——朋友，是人是鬼都不能这么推磨，如果你已经工作得很累了，该摸就摸。&lt;/p&gt;&lt;p&gt;之前我们介绍过各种各样的摸鱼手段，小游戏应该是最方便的一种，尤其是各类网页版游戏，午休时间来上一两局，能有效休闲，还能高速切屏。今天为大家介绍的就是五款摸鱼适合玩的小游戏，单个关卡时间不长，操作与规则简单。&lt;/p&gt;&lt;p&gt;在结尾的关联阅读中还有更多摸鱼懒人包，祝你摸得愉快。&lt;/p&gt;&lt;h2&gt;Wordward Draw&lt;/h2&gt;&lt;p&gt;&lt;a href="https://itch.io/" target="_blank"&gt;Itch.io&lt;/a&gt; 是一个知名的独立游戏发布平台，大量小体量的游戏开发者聚集于此。由于大多是兴趣所致，在这里你能见到不少想法新奇的游戏，而且常常能覆盖包括 &lt;a href="https://itch.io/games/html5" target="_blank"&gt;HTML5&lt;/a&gt; 在内的多种平台。这些一看就「不太赚钱」的小游戏恰恰是我们摸鱼时最需要的。&lt;/p&gt;&lt;p&gt;Wordward Draw 就是其中一个代表。游戏设计师 &lt;a href="https://managore.itch.io/" target="_blank"&gt;Daniel Linssen&lt;/a&gt; 有不少像素风格的佳作。Wordward Draw 是他最新的作品。游戏非常简单，从单词 Worm（蠕虫）开始，我们每次只能更改一个字母，或者不改动字母，只调整单词中字母的位置，到达另一个新单词。&lt;/p&gt;&lt;figure&gt;&lt;img alt="GOwtb2XwuoDKM4x0yO4c2TvmnRc" data-original="https://cdn.sspai.com/editor/u_/cjol08tb34telve6r3n0" src="https://cdn.sspai.com/editor/u_/cjol08tb34telve6r3n0"/&gt;&lt;/figure&gt;&lt;p&gt;游戏的名字也是教程关中从 Worm 一步步变化来的三个单词。在这些单词中，有一些是有具象的名词，作者为这些词画了可爱的卡通画，称之为图片词。我们的目的就是把图片词收集齐。&lt;/p&gt;&lt;figure&gt;&lt;img alt="JSK9bd97YoZmJ5xp3ngcJQyYnEg" data-original="https://cdn.sspai.com/editor/u_/cjol08tb34tel7u5r7rg" src="https://cdn.sspai.com/editor/u_/cjol08tb34tel7u5r7rg"/&gt;&lt;/figure&gt;&lt;p&gt;游戏中按下 Tab 键会出现图片词列表，它也会随机给出一些可以前往的图片词，一定程度上可以当做提示。&lt;/p&gt;&lt;figure&gt;&lt;img alt="Jjhcb1aqjoZXyfxGMh3cNQFgnyd" data-original="https://cdn.sspai.com/editor/u_/cjol095b34tel7u5r7s0" src="https://cdn.sspai.com/editor/u_/cjol095b34tel7u5r7s0"/&gt;&lt;/figure&gt;&lt;p&gt;虽然游戏玩法简单，但要达成全词库解锁还是得花些工夫的，很耐玩，非常适合一会摸一个。游戏提供 &lt;a href="https://managore.itch.io/wordward-draw" target="_blank"&gt;Web 版&lt;/a&gt;与 Windows 离线版下载。&lt;/p&gt;&lt;h2&gt;Boxel Rebound&lt;/h2&gt;&lt;p&gt;除了各大独立游戏平台，Chrome 应用商店也是发掘摸鱼设备的好去处。在娱乐分类下，不少插件都带有游戏的性质，还有些游戏贴心地设置了小窗口模式，相当适合随时隐藏。&lt;/p&gt;&lt;p&gt;Boxel Rebound 是一款横版过关类游戏。玩家控制一个小方块在卷轴中滑行，游戏操作只有「跳」，你要做的也就只有在合适的时机点鼠标躲避障碍物。但卷轴拖动的速度比较高，没有左右控制意味着开弓没有回头箭，虽然只有短短 50 关，游戏难度在后期也会直线上升。&lt;/p&gt;&lt;figure&gt;&lt;img alt="U7TxbOF8NocHY6xE9VWcPKjWnqf" data-original="https://cdn.sspai.com/editor/u_/cjol09db34tel7u5r7sg" src="https://cdn.sspai.com/editor/u_/cjol09db34tel7u5r7sg"/&gt;&lt;figcaption&gt;那只萨卡班甲鱼是我的光标。&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;每个关卡开头都会有如何通关的提示。并且，游戏会在每次启动时询问你要不要开声音以及需不需要加速模式——我愿称之为摸鱼界活菩萨。&lt;/p&gt;&lt;figure&gt;&lt;img alt="UoZFbPbXconolTxvWI4cO8ninfe" data-original="https://cdn.sspai.com/editor/u_/cjol09lb34tel7u5r7t0" src="https://cdn.sspai.com/editor/u_/cjol09lb34tel7u5r7t0"/&gt;&lt;/figure&gt;&lt;p&gt;你可以在 &lt;a href="https://chrome.google.com/webstore/detail/boxel-rebound/iginnfkhmmfhlkagcmpgofnjhanpmklb?hl=zh-CN" target="_blank"&gt;Chrome 应用商店&lt;/a&gt;安装该游戏。游戏内自带一个完整的关卡编辑器，在结束 50 关后，你可以尝试自建关卡，也可以在游戏社区内找到其他人的作品。&lt;/p&gt;&lt;h2&gt;Jumping Shell&lt;/h2&gt;&lt;p&gt;从名字就能看出来，Jumping Shell 是一个与「壳」有关的游戏。&lt;/p&gt;&lt;figure&gt;&lt;img alt="U43XbrJa3oyARdxmnSecnrWQnlb" data-original="https://cdn.sspai.com/editor/u_/cjol09tb34tel4rd8up0" src="https://cdn.sspai.com/editor/u_/cjol09tb34tel4rd8up0"/&gt;&lt;/figure&gt;&lt;p&gt;扮演小方块的玩家需要在地图上散落的大小不一的壳之间替换，越过障碍到达终点。游戏规则简单，关卡难度中等，由于方块的跳跃高度与壳的大小直接相关，有些步骤一旦失误就会导致必须重开关卡。但总关数只有 36，耐玩度一般。&lt;/p&gt;&lt;figure&gt;&lt;img alt="IWqTbqdjuoYTeJxizC1cbW6TnJb" data-original="https://cdn.sspai.com/editor/u_/cjol0a5b34temvgn2f7g" src="https://cdn.sspai.com/editor/u_/cjol0a5b34temvgn2f7g"/&gt;&lt;/figure&gt;&lt;p&gt;作者 Robert Alvarez 很擅长做这种画风简单的跳跃类解谜小游戏。包括 Jumping Shell 在内的不少作品都依托在网页游戏平台 Poki 上，游戏可以静音，你可以直接在&lt;a href="https://poki.cn/g/jumping-shell" target="_blank"&gt;网页上游玩&lt;/a&gt;。&lt;/p&gt;&lt;h2&gt;Rubblar&lt;/h2&gt;&lt;p&gt;Rubblar 这个怪怪的名字是 Rubber 与 Burglar 的结合。玩家要扮演一名橡胶手大盗，在警车追到你之前拿走所有钻石。移动鼠标带动小手运动，左键抓取，右键快速回收。&lt;/p&gt;&lt;figure&gt;&lt;img alt="OL3Mb1U9Mopc5YxqhqBcobjJnKg" data-original="https://cdn.sspai.com/editor/u_/cjol0adb34tel4rd8upg" src="https://cdn.sspai.com/editor/u_/cjol0adb34tel4rd8upg"/&gt;&lt;/figure&gt;&lt;p&gt;游戏操作简单，但因为指针完全限制在游戏内，实际操控并不容易，路上还有各种障碍，旋转不当还可能把自己的面条长手缠在一起，要移动和回收兼备，学会收放自如，想玩好着实要点工夫。要说有什么问题，就是游戏本身无法静音，只能直接静音网页。&lt;/p&gt;&lt;p&gt;Rubblar 发布在 itch.io，你可以前往网页&lt;a href="https://sandervanhove.itch.io/rubblar" target="_blank"&gt;直接游玩&lt;/a&gt;，也可以下载离线版，支持 Windows/macOS/Linux 三平台。&lt;/p&gt;&lt;h2&gt;The Password Game&lt;/h2&gt;&lt;p&gt;在解谜游戏中，The Password Game 算得上是异类。它拿各大平台上越来越繁复和密码规则打趣，给玩家烧脑又有趣的游玩体验。&lt;/p&gt;&lt;figure&gt;&lt;img alt="JurvbwSByoJU8dxhNK8cBpdUnoe" data-original="https://cdn.sspai.com/editor/u_/cjol0b5b34tel4rd8uq0" src="https://cdn.sspai.com/editor/u_/cjol0b5b34tel4rd8uq0"/&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img alt="Bad8b1I0noCvoVxqkDHcyWs4nyr" data-original="https://cdn.sspai.com/editor/u_/cjol0bdb34tel4rd8uqg" src="https://cdn.sspai.com/editor/u_/cjol0bdb34tel4rd8uqg"/&gt;&lt;/figure&gt;&lt;p&gt;游戏规则非常简单，你只需要根据游戏提示，起一个能满足要求的密码就行了。唯一的问题就是这些规则会变得越来越多，而且每一条你都得满足，中途可能还要被迫玩些别的游戏。&lt;strong&gt;并且&lt;/strong&gt;还有一些会导致&lt;strong&gt;即死&lt;/strong&gt;的隐藏条件。&lt;/p&gt;&lt;figure&gt;&lt;img alt="KPicbRW3do5fFmxYu72czEXHnSc" data-original="https://cdn.sspai.com/editor/u_/cjol0blb34tel7u5r7tg" src="https://cdn.sspai.com/editor/u_/cjol0blb34tel7u5r7tg"/&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img alt="XS7Gb2tKBo5eQHxV8H9cuYQynFe" data-original="https://cdn.sspai.com/editor/u_/cjol0btb34tel7u5r7u0" src="https://cdn.sspai.com/editor/u_/cjol0btb34tel7u5r7u0"/&gt;&lt;/figure&gt;&lt;p&gt;需要注意的是，这个游戏只适合在午休时游玩，因为部分关卡涉及限时操作，而且心态不好容易拉高血压。但游戏本身难度在线，耐玩度不错，心态平和时可以挑战一下，打打鸡血。你可以在网页端&lt;a href="https://neal.fun/password-game/" target="_blank"&gt;直接开始取密码之旅&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;多说无益，让我们摸起来。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关联阅读&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&amp;gt; 下载少数派 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;客户端 &lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号 &lt;/a&gt;，了解更妙的数字生活 🍃&lt;/p&gt;&lt;p&gt;&amp;gt; 想申请成为少数派作者？&lt;a href="https://sspai.com/apply/writing" target="_blank"&gt;冲！&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><author>北鸮</author><guid>https://sspai.com/post/82609</guid><pubDate>Fri, 01 Sep 2023 06:34:18 GMT</pubDate></item><item><title>派开箱 | 笔记本也有光明的未来：明基 LaptopBar 笔记本随行灯</title><link>https://sspai.com/post/82334</link><description>&lt;div&gt;&lt;h3&gt;&lt;strong&gt;关于栏目&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;我们时常会收到一些厂商送测体验、兼具优秀设计与极佳质感的好产品，部分被我们放在了&lt;a href="https://sspai.com/tag/%E7%BC%96%E8%BE%91%E9%83%A8%E7%9A%84%E6%96%B0%E7%8E%A9%E6%84%8F" target="_blank"&gt;《编辑部的新玩意》&lt;/a&gt;中作为分享，但碍于其主打体验的设定，我们亦希望一些更具吸引力的产品能被更多篇幅介绍，所以有了《派开箱》。&lt;/p&gt;&lt;p&gt;在这里，我们会推荐一些我们认为不错的市面在售好物，如果你有正在关注的产品希望能「上电视」，欢迎告诉我们。&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;从蜡烛到电灯，「光」对我们的生产活动一直提供着非常重要的作用；但很多时候，我们对其又特别「将就」，好像只要可以看得清事物就够用。&lt;/p&gt;&lt;p&gt;但也有人不愿意将就，从「可以」到「舒适」，明基一直致力于让使用者拥有更好的照明体验，不断创造着各种细分场景下的可用光源。&lt;/p&gt;&lt;h2&gt;即便移动也不将就的光&lt;/h2&gt;&lt;p&gt;明基的桌面显示器挂灯我已经用了很多年了。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/23/article/795b57acbd24feb595cb36350e7d1d44" src="https://cdn.sspai.com/2023/08/23/article/795b57acbd24feb595cb36350e7d1d44"/&gt;&lt;figcaption&gt;少数派几乎给每个用独立显示器的员工都配置了明基的屏幕挂灯&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;事实上在使用之前我一直认为这屏幕挂灯是有些矫情和多此一举的，因为屏幕本身就已经有亮度了，而且通常情况下显示器摆放的位置要么工位上要么书房里，都有相对不错的照明条件，实在是想不到它能发挥的作用。&lt;/p&gt;&lt;p&gt;但真正用上后，无论是阴天的日间补光、还是晚上不打扰边上看电视（我的客厅和书房是共用一个空间），明基的显示器挂灯都给了我前所未有的照明体验。不过这也只是桌面显示器用户的专属福利，而带着笔记本电脑上下班乃至移动办公的同事就只能顺其自然了。&lt;/p&gt;&lt;p&gt;我印象非常深刻在前公司工作时，偶尔和团队成员去小会议室里开完会我们都会赖在里面工作，因为没有窗户的原因所以白天黑夜都会打开几乎占据整个天花板的平板灯，效果就是光线非常舒适；但是在大办公室里无论是阴晴不定的白天、还是依赖分散排布吊灯照明的夜晚都有很不舒服的对比眩光，长时间盯着屏幕眼睛非常辛苦。&lt;/p&gt;&lt;p&gt;明基显然关注到了这个情况，所以给笔记本用户们带来了 LaptopBar 笔记本随行灯。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/23/18ffadeffb6232299426eb0efaac033f.jpg" src="https://cdn.sspai.com/2023/08/23/18ffadeffb6232299426eb0efaac033f.jpg"/&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/23/474ae50908ff314206d3814ab5d9ce54.jpg" src="https://cdn.sspai.com/2023/08/23/474ae50908ff314206d3814ab5d9ce54.jpg"/&gt;&lt;/figure&gt;&lt;h2&gt;笔记本或许更需要一盏屏幕挂灯&lt;/h2&gt;&lt;p&gt;我认为相比于桌面显示器挂灯来说，LaptopBar 的泛用性更高。&lt;/p&gt;&lt;p&gt;一方面在我工作或接触过的互联网公司来说，使用笔记本电脑工作的员工占更多数；其次，也因为笔记本电脑的便携移动性，决定了它会在更多不同光线照明的环境下被使用，无论是昏暗的咖啡馆还是倡导暖色安眠的酒店房间，都更需要一个辅助光源来补足环境光，不得不说是互联网游民的忠实伴侣。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/25/416dac251f0e10c2d3044df2d3041064.jpg" src="https://cdn.sspai.com/2023/08/25/416dac251f0e10c2d3044df2d3041064.jpg"/&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/25/f14fbcfa38dead7b32e50577eaa6388c.jpg" src="https://cdn.sspai.com/2023/08/25/f14fbcfa38dead7b32e50577eaa6388c.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;上图是便于感知的极限昏暗环境下启闭 LaptopBar 的观感，可见它的意义并不在于「让使用者可以在更高亮度下观看屏幕」，而是让我们在直视屏幕时，视线所及都能有相对明亮稳定的照度。如果你仍然存疑，不妨试试一个很简单的小实验，试试在完全黑暗的环境中看手机五分钟，再试试把手机放在一盏小台灯下看五分钟，一定能很明显的感受到双眼疲劳度的变化。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/25/89474fdd522db40e845c24b8a8b54f5f.jpg" src="https://cdn.sspai.com/2023/08/25/89474fdd522db40e845c24b8a8b54f5f.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;而 LaptopBar 也不只是一盏「便携的台灯」那么简单，因为普通点状光源的台灯容易造成屏幕反光，而作为与屏幕距离更近的背挂式光源，在继承了之前 ScreenBar 产品不易反光的「非对称光型」设计基础上，更是采用了区分主光（集中光线照亮笔记键盘区域）和周围光（分散柔和照亮四周）的「非对称伞状光型」，让其明亮也有层次。&lt;/p&gt;&lt;p&gt;所以轻巧便携是 LaptopBar 为了满足笔记本电脑更多场景下使用的特性，而它所具备的能耐一点也没有因此减弱。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/23/86209a0447c7c2e8ff901f0e00a2dd46.jpg" src="https://cdn.sspai.com/2023/08/23/86209a0447c7c2e8ff901f0e00a2dd46.jpg"/&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/23/2b517b8a138fba5fe93f67d387b63c82.jpg" src="https://cdn.sspai.com/2023/08/23/2b517b8a138fba5fe93f67d387b63c82.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;既然是使用在笔记本电脑上，「轻量」自然是 LaptopBar 的首要特性，所以它的整体自重仅不到 180g，外加拆卸折叠设计可以轻易放到包中随时携带。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/23/f292eb0d5d1f80108cf3f06abe5f1fe6.jpg" src="https://cdn.sspai.com/2023/08/23/f292eb0d5d1f80108cf3f06abe5f1fe6.jpg"/&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/23/6c83a657140f6826d97623de4757d8b0.jpg" src="https://cdn.sspai.com/2023/08/23/6c83a657140f6826d97623de4757d8b0.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;将配套的小小磁性贴片粘到笔记本后盖后，LaptopBar 便可以随取随用，而且吸力强劲也牢靠，偶尔需要搬动笔记本到别处时也不必担心它移位掉落。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/23/c8569d8937accbd930aaa12b7c30601d.jpg" src="https://cdn.sspai.com/2023/08/23/c8569d8937accbd930aaa12b7c30601d.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;所以也可以挖掘出它的一些「奇怪」的用法，比如改变笔记本和支架的折叠角度让它临时变成一盏桌面小台灯使用。LaptopBar 虽然小巧，但可以提供最高 1000lx 的中心照度和 500lx 的范围照度，足以应付大部分时候的阅读写字照明。&lt;/p&gt;&lt;p&gt;与此同时，TypeC 接口的分体式电池在 100% 亮度时可以提供最高 100min 的使用时间，而日常补光在 50% 左右亮度使用时最高可以达到 160min。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/23/f6ccf53865f8e56fcbc5045aaf5edf1f.jpg" src="https://cdn.sspai.com/2023/08/23/f6ccf53865f8e56fcbc5045aaf5edf1f.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;LaptopBar 的亮度调节比我想象中要人性化得多。&lt;/p&gt;&lt;p&gt;在智能化部分，内置红外线和光线传感器的它用手在顶部轻挥即可启动，并自动补足 500lx 的亮度，而在低于 50lx 的暗光环境为了减少对比眩光和双眼刺激，则会自动补足 300lx。当然你也可以自行调整补光标准，基于自身喜好调整补足峰值的明暗，打造舒适私人光源。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/23/20078f03edb3672911cd6e82b587437d.jpg" src="https://cdn.sspai.com/2023/08/23/20078f03edb3672911cd6e82b587437d.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;而在任何时候，你都可以直接滑动触控条以调整当前亮度和色温，获取当下最合适的照明体验。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/23/328ae0a4f5c59e15d52f4c144aef71d8.jpg" src="https://cdn.sspai.com/2023/08/23/328ae0a4f5c59e15d52f4c144aef71d8.jpg"/&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/23/1dd042ccc8556c2ebf71833991e0dda9.jpg" src="https://cdn.sspai.com/2023/08/23/1dd042ccc8556c2ebf71833991e0dda9.jpg"/&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/23/268f4ea5569315f8079e1e232dde8f5a.jpg" src="https://cdn.sspai.com/2023/08/23/268f4ea5569315f8079e1e232dde8f5a.jpg"/&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/23/27c15792ad742143dbcf11ba8916975a.jpg" src="https://cdn.sspai.com/2023/08/23/27c15792ad742143dbcf11ba8916975a.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;LaptopBar 的问世沉淀了很多明基在照明光源方面的技术积累和愿景，它们固然重要但说起来又总显得复杂且晦涩，或许也可以简单一些，将其作为自己辛苦工作的犒劳与憧憬，一个小小的体贴心意。&lt;/p&gt;&lt;p&gt;无论生活还是工作，我们总得有光明的未来。&lt;/p&gt;&lt;p&gt;明基 LaptopBar 笔记本随行灯官方售价 ¥999，现在可通过官方旗舰店支付定金参与预售，支付尾款前 100 名可获得限量款收纳包及背贴，具体信息可于商品详情页了解。&lt;/p&gt;&lt;span&gt; &lt;/span&gt;&lt;/div&gt;</description><author>少数派编辑部</author><guid>https://sspai.com/post/82334</guid><pubDate>Fri, 01 Sep 2023 03:07:11 GMT</pubDate></item><item><title>派早报：Fairphone 5 手机正式发布、首批国产大模型获批面向用户开放</title><link>https://sspai.com/post/82608</link><description>&lt;div&gt;&lt;h2&gt;你可能错过的新鲜事&lt;/h2&gt;&lt;h3&gt;Fairphone 5 手机正式发布&lt;/h3&gt;&lt;figure&gt;&lt;img alt="OoZXbF53jorc7XxC7fVcT6rnnOh" data-original="https://cdn.sspai.com/editor/u_/cjoitutb34temvgn2ei0" src="https://cdn.sspai.com/editor/u_/cjoitutb34temvgn2ei0"/&gt;&lt;/figure&gt;&lt;p&gt;Fairphone 公司在 8 月 31 日正式推出了 Fairphone 5 智能手机。该款手机手机内置了高通 QCM 6490 八核处理器，屏幕则采用 6.46 英寸 Full HD+ Dynamic 90 Hz OLED 屏幕，并配备 Pixelworks 处理器用于增强图像和自适应色彩。手机顶部中央设有一个 5000 万像素的前置摄像头，背面则设有 5000 万像素的主摄和 5000 万像素的超广角镜头。&lt;/p&gt;&lt;p&gt;该手机目前采用 Android 13 系统，但保证到 2031 年至少会有 5 次安卓系统的更新，且承诺会提供为期 8 年的安全更新。手机的设计采用了模块化的方式，与前一代相比，提供了更多可更换的零件，方便用户自行维修更换。Fairphone 5 手机有天蓝色、灰色或透明三种颜色可选，定价为 699 欧元，预计将于 9 月 14 日发货，目前在官网已接受预订。&lt;a href="https://shop.fairphone.com/fairphone-5" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;首批国产大模型获批面向用户开放&lt;/h3&gt;&lt;p&gt;8 月 31 日，百度通过微信公众号宣布，「文心一言」向全社会开放。用户可以在主流应用商店下载「文心一言」应用程序，或者访问「文心一言」官方网站体验。同时，百度还计划开放一批经过全新重构的 AI 原生应用，供广大用户充分体验生成式 AI 的理解、生成、逻辑以及记忆四大核心能力。&lt;a href="https://mp.weixin.qq.com/s/aRWALGz7YyAzd7tUUQTCGg" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;p&gt;商汤科技也对外表示，商汤「商量 SenseChat」即日起全面向用户开放服务。其基模型为书生·浦语 InternLM-123B，拥有 1230 亿参数，用户可通过 SenseChat 官网注册使用。此外，智谱 AI「智谱清言」也宣布对用户开放。&lt;a href="https://m.thepaper.cn/detail/24432246" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Google 将不再提供 Pixel Pass 综合订阅服务&lt;/h3&gt;&lt;p&gt;8 月 30 日，Google 宣布从 8 月 29 日起，Pixel Pass 不再向新购买或续订 Pixel 手机的用户提供服务。&lt;/p&gt;&lt;p&gt;据悉， Google Pixel Pass 服务，是 Google 在两年前随 Pixel 6/Pixel 6 Pro 手机发布的一项月付计划。这个计划让用户得以分期购买手机，并同时获得 Google One、YouTube Premium 和 Google Play Pass 等 Google 综合订阅服务。&lt;/p&gt;&lt;p&gt;已经订阅的用户可以继续享受 Pixel Pass 服务，直至服务期满两年。服务期满后，用户将无法利用 Pixel Pass 来购买新手机，但为防止服务中断，Google 会主动按月以折扣价收取 Google One、YouTube Premium 和 Google Play Pass 的费用。此外，现有的 Pixel Pass 用户引入将获得 100 美元的优惠，他们可以用这些优惠在 Google 商店或 Google Fi Wireless 购买商品。&lt;a href="https://www.theverge.com/2023/8/30/23851107/google-graveyard-pixel-pass-subscription-phone-upgrades" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;p&gt;此外，Google 将于 10 月 4 日召开新品发布会，预计会发布新款 Pixel 8 系列以及 Pixel Watch 2。&lt;a href="https://9to5google.com/2023/08/30/google-announces-october-4-event-for-pixel-8-and-pixel-watch-2/" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;佳明发布 Venu 3 系列智能手表&lt;/h3&gt;&lt;figure&gt;&lt;img alt="Q2aFbUPoYopnTKxXVA8cXLe4npe" data-original="https://cdn.sspai.com/editor/u_/cjoitv5b34tel4rd8u30" src="https://cdn.sspai.com/editor/u_/cjoitv5b34tel4rd8u30"/&gt;&lt;/figure&gt;&lt;p&gt;佳明于 8 月 31 日正式推出 Venu 3 系列智能手表，该系列手表主打分析睡眠质量功能。Venu 3 沿用了旋转表圈设计，表冠直径 45 mm，采用 22 mm 表带，重 46 克，颜色有黑、白两种。Venu 3 S 直径为 41 mm，配 18 mm 表带，提供金、粉、黑、白四色可选，重 40 克。&lt;/p&gt;&lt;p&gt;Venu 3 系列智能手表智能模式下的续航时间可达两周，而省电模式则可长达 26 天。这也是 Garmin 首次推出支持轮椅模式的手表，该模式专为轮椅使用者设计，可跟踪推力。目前两款手表已在电商平台上架，定价 3390 元。&lt;a href="https://www.androidcentral.com/wearables/garmin-venu-3-announced" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;微软宣布 Visual Studio for Mac 将正式退役&lt;/h3&gt;&lt;p&gt;8 月 30 日，微软在其官方博客上宣布，旗下为 Mac 设计的 IDE——Visual Studio for Mac 将正式退出市场。目前的版本（v17.6）将延长 12 个月的支持，这种支持涵盖关键错误的修复、安全问题的服务更新以及以及 Apple 平台的兼容性；但将不再添加新的框架、运行时或开发语言支持。今后的开发重心将放在强化 Visual Studio 和 VS Code 上，并致力于跨平台开发和优化。&lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-for-mac-retirement-announcement/" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Google 重新设计 Chrome Web Store&lt;/h3&gt;&lt;figure&gt;&lt;img alt="EleRbL9q0o4axmxG2rkcKxEQneg" data-original="https://cdn.sspai.com/editor/u_/cjoitvdb34temvgn2eig" src="https://cdn.sspai.com/editor/u_/cjoitvdb34temvgn2eig"/&gt;&lt;/figure&gt;&lt;p&gt;Google 于 8 月 30 日公布了 Chrome Web Store 网上应用商店的新设计。新版网站更为现代，包括新的「探索」主页、扩展程序、主题背景等三个模块，每个模块下还有 不同的分区，方便用户找到新内容。你可以从&lt;a href="http://chromewebstore.google.com/" target="_blank"&gt;这里&lt;/a&gt;访问新预览版页面。&lt;a href="https://9to5google.com/2023/08/30/google-chrome-web-store-redesign-preview/" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;微软通过弹窗推广 Bing 搜索引擎&lt;/h3&gt;&lt;p&gt;8 月 31 日，部分使用 Windows 11 的 Chrome 浏览器用户收到了弹窗提示，被建议将默认搜索引擎更改为 Microsoft Bing。&lt;/p&gt;&lt;p&gt;此弹窗不属于常规通知，实际上是由位于 &lt;code&gt;C:\windows\temp\mubstemp&lt;/code&gt;可执行文件发出的，该文件带有微软的数字签名。微软公关负责人 Caitlin Roulston 表示他们已经注意到了相关报告，因此暂停了这一通知，并进一步调查并应对这个意料之外的问题。微软以前也有过类似的行动，一直在利用各种提示鼓励用户从 Google 和 Chrome 转到 Bing 和 Edge。&lt;a href="https://www.theverge.com/2023/8/30/23851902/microsoft-bing-popups-windows-11-malware" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;figure&gt;&lt;img alt="BleKbzMnpoYmv5xgVG4cGNvbn7e" data-original="https://cdn.sspai.com/editor/u_/cjoitvtb34telve6r310" src="https://cdn.sspai.com/editor/u_/cjoitvtb34telve6r310"/&gt;&lt;/figure&gt;&lt;h3&gt;北京网信办发布《北京市扫码消费服务违规收集使用消费者个人信息案例解析及合规指引》&lt;/h3&gt;&lt;p&gt;8 月 31 日，为切实有效指导经营者充分认识消费者个人信息保护的重要性，清楚了解收集使用消费者个人信息的范围边界，进一步强化经营者的合规意识，市网信办联合国家互联网应急中心北京分中心制定并公布《北京市扫码消费服务违规收集使用消费者个人信息案例解析及合规指引》。该指引规定：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;提供扫码消费服务的二维码应当与提供会员服务的二维码予以区分，以醒目方式提示消费者二维码的实际作用或功能；不得强迫或诱导消费者关注经营者公众号，推送营销信息的，应当提供退订或拒绝选项。&lt;/li&gt;&lt;li&gt;提供扫码消费服务的小程序，在收集消费者个人信息前应当以弹窗或其他显著方式向消费者提示隐私政策；不得默认勾选同意或仅提供同意选项。&lt;/li&gt;&lt;li&gt;提供扫码消费服务期间，小程序应当限制权限获取频次及个人信息采集频率；不得频繁弹窗，干扰消费者正常使用。&lt;/li&gt;&lt;li&gt;提供扫码消费服务的经营者在收集使用消费者个人信息时，应当遵守相关法律法规，征得消费者同意；不得以任何形式和理由强迫消费者同意经营者收集与其提供服务无关的个人信息。&lt;/li&gt;&lt;li&gt;提供扫码消费服务的经营者将消费者个人信息共享至第三方使用前，应当告知消费者并征得消费者同意；未经消费者同意或者消费者明确表示拒绝的，不得将消费者个人信息共享至第三方。&lt;/li&gt;&lt;li&gt;提供扫码消费服务的经营者应当向消费者提供注销账号服务，不得为账号注销功能设置捆绑注销、要求消费者提供各种不合理证明等不必要条件。&lt;a href="https://mp.weixin.qq.com/s/3e3dw6V4M0wds3TQlFWz6w" target="_blank"&gt;来源&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;看看就行的小道消息&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;8 月 31 日消息，Apple 正在试验用 3D 打印机制造 Apple Watch 的钢质底壳。3D 打印技术实现了金属大块料直接塑造成产品形状，从而大幅缩减了设备制造时间，同时更少的材料使用也有益于环保。这种新的制造策略可以简化 Apple 的供应链，同时带动更多的变革。如果 Apple Watch 生产计划进展顺利，科技巨头就可能在未来几年把这个过程扩大到更多的产品。据了解，Apple 和其供应商已经悄然研发这项技术近三年。在过去的几个月中，他们一直用钢质底壳测试，而这些底壳预计会用于 Apple Watch Series 9 上。&lt;a href="https://www.bloomberg.com/news/articles/2023-08-30/apple-watch-series-9-apple-tests-3d-printing-in-device-production" target="_blank"&gt;来源&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;少数派的近期动态&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Context 众筹火热进行中，低至 53 折、会员可享额外优惠。&lt;a href="https://sspai.com/post/82252" target="_blank"&gt;&lt;strong&gt;前往了解&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt; | &lt;/strong&gt;&lt;a href="https://sspai.com/bullet/1692689059" target="_blank"&gt;&lt;strong&gt;有奖讨论&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;少数派从科隆游戏展现场参观归来。阅读&lt;a href="https://sspai.com/post/82466" target="_blank"&gt;&lt;strong&gt;参展札记&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;友台《两颗皮蛋》（皮蛋漫游记）与少数派创始人老麦的对谈已上线。&lt;a href="https://sspai.com/post/82453" target="_blank"&gt;&lt;strong&gt;前往收听&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;入华 30 周年之际，我们参观了 Apple 智惠教育中心。&lt;a href="https://sspai.com/post/82407" target="_blank"&gt;&lt;strong&gt;一起看看&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;开学季三重优惠买栏目：985 快闪礼包、优惠翻倍、还有栏目史低价。&lt;a href="https://sspai.com/post/82520" target="_blank"&gt;&lt;strong&gt;快来享折扣&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;你可能错过的好文章&lt;/h2&gt;&lt;p&gt;&amp;gt; 下载 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;少数派 2.0 客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，解锁全新阅读体验 📰&lt;/p&gt;&lt;p&gt;&amp;gt; 实用、好用的 &lt;a href="https://sspai.com/mall" target="_blank"&gt;正版软件&lt;/a&gt;，少数派为你呈现 🚀&lt;/p&gt;&lt;/div&gt;</description><author>少数派编辑部</author><guid>https://sspai.com/post/82608</guid><pubDate>Fri, 01 Sep 2023 00:33:10 GMT</pubDate></item><item><title>新玩意 159｜少数派的编辑们最近买了啥？</title><link>https://sspai.com/post/82575</link><description>&lt;div&gt;&lt;h4&gt;&lt;strong&gt;关于栏目&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;很多读者都会好奇少数派的编辑们到底平时都「买了啥」。我们希望通过「编辑部的新玩意」介绍编辑部成员们最近在用的新奇产品，让他们自己来谈谈这些新玩意的使用体验究竟如何。&lt;/p&gt;&lt;p&gt;内容声明：《新玩意》栏目如含有商务内容，将会在对应条目标注「广告」；来源为「厂商送测」的产品并无内容干涉。&lt;/p&gt;&lt;hr/&gt;&lt;h2&gt;@Tp：Pokémon Go Plus+&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;入手渠道：女友赠送&lt;/li&gt;&lt;li&gt;参考价格：¥365&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;自从 Pokémon Sleep 公布以来，我就一直对它充满了期待，毕竟我本身也有用 Apple Watch 记录睡眠的习惯，而用自己的睡眠来玩宝可梦岂不是锦上添花。当它正式上架后，我才发现它根本不能读取健康数据，也不支持与 Apple Watch 联动，只能使用手机或 Pokémon Go Plus+ 记录。我尝试着用手机记录了一段时间，但对我来说体验有些不够好，首先便是需要连着电、不锁屏放在枕边，虽然我在记录中暂时没有发现发烫的问题，但第二天起来后触摸手机仍会有些温热。&lt;/p&gt;&lt;p&gt;其次便是每晚睡前需要手动打开记录，对于习惯了 Apple Watch 自动记录睡眠的我来说，Pokémon Sleep 不但每次需要打开 app 等待加载，而且还需要点击多次才能进入睡眠记录。特别是打开之后，发现还有树果没收、卡比兽没喂，更是把这些时间拉长了。正因为较长的前置操作，导致我使用它来记录睡眠的意愿并不算高。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/ef8403f3ad27cc25cd71ba7173585b5c.png" src="https://cdn.sspai.com/2023/08/31/ef8403f3ad27cc25cd71ba7173585b5c.png"/&gt;&lt;figcaption&gt;但宝可梦确实很可爱啊！&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;在进度被女友甩下一大截之后，我开始考虑要不要入手一个 Pokémon Go Plus+ 来解决上面两个痛点。可淘宝上动辄 400 的价格，让我有些难以说服自己。直到前段时间，我刷到了一个香港的店家在卖的 Pokémon Go Plus+ 只需要 ¥365 还包邮包税，于是就发给女友分享，问要不要给她买一个。女友表示兴趣不大，结果转手给我买了一个。&lt;/p&gt;&lt;p&gt;于是，我就收到了这颗扁扁的精灵球。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/1261d41a65772a595a85669b449f642a.png" src="https://cdn.sspai.com/2023/08/31/1261d41a65772a595a85669b449f642a.png"/&gt;&lt;/figure&gt;&lt;p&gt;Pokémon Go Plus+ 的包装非常紧凑，除了本体和充电线外，包装内还附赠了一条挂绳和夹子。因为 Pokémon Go Plus+ 除了支持 Sleep 的睡眠记录外，也可以与 Pokémon Go 联动，在游戏中自动扔球、自动获取物资。相比于睡眠记录，倒不如说 Pokémon Go 才是它的用武之地。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/article/4034a23a42fc89e869426c102dfcd722" src="https://cdn.sspai.com/2023/08/31/article/4034a23a42fc89e869426c102dfcd722"/&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/article/a2a085cf151eca5dd07aa1b5031edd63" src="https://cdn.sspai.com/2023/08/31/article/a2a085cf151eca5dd07aa1b5031edd63"/&gt;&lt;/figure&gt;&lt;p&gt;Pokémon Go Plus+ 与设备的绑定非常方便，只要打开蓝牙并按照手机提示一步步操作即可连接。完成连接之后，每次睡觉时只需要长按中间的按钮即可开始记录，起床也只需要长按即可停止记录。之后只要找时间打开 Pokémon Sleep 同步一下数据即可进入宝可梦捕捉的画面。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/article/1f0a35fdcbee918c495cc35403e33ae1" src="https://cdn.sspai.com/2023/08/31/article/1f0a35fdcbee918c495cc35403e33ae1"/&gt;&lt;/figure&gt;&lt;p&gt;如果只是简单的睡眠记录功能，也许我并不会对它那么感兴趣。大不了我起床之后按照 Apple Watch 记录的信息手动添加就行。真正让我种草 Pokémon Go Plus+ 的还是它里面藏着的那只皮卡丘。在进入睡眠记录时，皮卡丘会为你唱《一闪一闪亮晶晶》来助眠，停止记录时还会有宝可梦中心的回血音效，给人一种「满血复活」迎接新一天的感觉。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/55782c00835b16f8ecf9082de748c3a5.png" src="https://cdn.sspai.com/2023/08/31/55782c00835b16f8ecf9082de748c3a5.png"/&gt;&lt;/figure&gt;&lt;p&gt;不仅如此，你甚至还可以设置起床闹铃、睡眠提醒，皮卡丘也会用震动、光效和声音来提醒你。最有趣的是，当你将 Pokémon Go Plus+ 与 Pokémon Sleep 相连之后，你就可以在游戏中获得一只戴着睡帽的皮卡丘。每次记录睡眠的时候都可以提升与它的亲密度，亲密度越高还能解锁不同的叫声，在 Pokémon Sleep 中可以通过联动让 Pokémon Go Plus+ 播放。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/c1b1e232ea9ccd4749ea3caef3e83741.png" src="https://cdn.sspai.com/2023/08/31/c1b1e232ea9ccd4749ea3caef3e83741.png"/&gt;&lt;/figure&gt;&lt;p&gt;这样的设定，会让我更有动力用 Pokémon Go Plus+ 来记录睡眠，仿佛真的在精灵球中养了一只皮卡丘。&lt;/p&gt;&lt;p&gt;对于有的人来说，花 300 多买一个只能记录睡眠，数据还不如 Apple Watch 详细的设备或许显得有些没必要。但至少对我而言，它能够解决我在 Pokémon Sleep 中遇到的痛点，就已经值回价格了。更何况它还有皮卡丘的额外玩法，以及女友礼物的爱情加成，想必会让每晚的「宝可」梦都变得更加香甜吧。&lt;/p&gt;&lt;h2&gt;@Microhoo：Shimoda 户外双肩包&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;购入渠道：Shimoda 天猫旗舰店&lt;/li&gt;&lt;li&gt;购入价格：¥2680&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;有车之后爱上了四处溜达，去的多是一些停好车要走很远的地方，包括最近还迷上了徒步，所以就想要买一个分区科学的双肩包，从巅峰设计到蒲公英都看了一圈，突然被 YouTube 智能推荐了一个好像国内不太常见的 Shimoda，瞬间被它的可调背带种草。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/1c1dc88b02ac62e6a26a0fa6009eb116.jpg" src="https://cdn.sspai.com/2023/08/31/1c1dc88b02ac62e6a26a0fa6009eb116.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;我买的是 40L 的 Action V2，它还有另一个主打城市背负的 Explore V2，但其实两款都有一个相同的特点——巨大，这对官方身高一米七的我来说如果没有一个良好的背负系统不仅看着累赘，背着也难受。但 Shimoda 的背带可以对应着我们日常的衣服 S、M、L（超大容量包型还有 XL）调整，值得一提的是它还为女性设计了专门的背带型号，以确保背负时的胸部舒适。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/article/ffb5885b7a9de71e2c033eecc18cf59b" src="https://cdn.sspai.com/2023/08/31/article/ffb5885b7a9de71e2c033eecc18cf59b"/&gt;&lt;figcaption&gt;Action V2 女性款&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/d9d9d2c3ff484541f42b6838cb5195f8.jpeg" src="https://cdn.sspai.com/2023/08/31/d9d9d2c3ff484541f42b6838cb5195f8.jpeg"/&gt;&lt;figcaption&gt;Action V2 收纳细节&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;作为一款定位专业户外的摄影包，Shimoda 的细节设计不胜枚举，感兴趣可以通过&lt;a href="https://www.bilibili.com/video/BV1X8411o7N6/?spm_id_from=333.337.search-card.all.click" target="_blank"&gt;这个视频&lt;/a&gt;了解它的设计细节。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/31/186fcfd38f17ace4142bf53f9e3e592e.jpg" src="https://cdn.sspai.com/2023/08/31/186fcfd38f17ace4142bf53f9e3e592e.jpg"/&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/31/f1b09d6a2a5a543ab372fd397948fdab.jpg" src="https://cdn.sspai.com/2023/08/31/f1b09d6a2a5a543ab372fd397948fdab.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;我只说说我的背负感受，最近一次是背着它上山下河走了十几公里的环线徒步，连包带物有 12kg 左右，要说它让我「轻若无物」是不负责任的，但真实感觉不像是「我背了一个包」，更像是「我的体重增加了 12kg」这样的感觉，当然除了因为背负导致的后背发热和肩部多少有些勒到这些无法避免的问题。&lt;/p&gt;&lt;p&gt;调整好 Action V2 的背带，让它刚好置于臀部上方，然后借助其腰带和胸带、以及专门加固的背板，整个背包的压力是均匀分布在上身，这种体验是别的任何背包都未曾让我感受过的。&lt;/p&gt;&lt;h2&gt;@Tp：布鲁可擎天柱积木人&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;入手渠道：淘宝自购&lt;/li&gt;&lt;li&gt;入手价格：¥71.9（券后价）&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;最近，我总能在 B 站刷到布鲁可积木人的视频。&lt;/p&gt;&lt;p&gt;其实早在他们做孙悟空人仔的时候我就知道这个品牌了，但当时我对它的印象不过是「还不错的国产积木品牌」，但并没有让我想要入手的冲动。直到我看到他们最近出的变形金刚系列，确实有些戳中我的审美点。他们虽然打着「积木人仔」的旗号，但实际上除了躯干之外，和传统意义上的积木人仔几乎没啥关联。&lt;/p&gt;&lt;p&gt;于是，之前有一次下楼扔垃圾的时候，顺道去小区楼下的文具店看了一眼，正好有在卖变形金刚的人仔盲盒（官方管它叫「群星版」），就想着买了一盒试试。我开出的是救护车，但无论是外观还是可动性，基本都和「积木」没啥关系，和万代的高达食玩反而更类似。光从体验上来说，我觉得它确实能值回 39 的价格。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/article/e8ecb99a4e0a537a39e2f72afe155700" src="https://cdn.sspai.com/2023/08/31/article/e8ecb99a4e0a537a39e2f72afe155700"/&gt;&lt;figcaption&gt;后来我才知道，淘宝上冷门角色只卖二十多……&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;有了不错的体验在前，我就对他们新出的电影版擎天柱充满了好奇。在淘宝上搜了半天之后，我找到一家相对便宜的店家入手了这只「闪耀版」的擎天柱。套内板件采用了按压水口，不需要工具就能取下，零件数量也不算多，照着说明书 30 分钟左右就可以轻松拼完。&lt;/p&gt;&lt;p&gt;如果说前面的救护车给我的感觉是「还不错」，那么这只擎天柱可以算得上是「惊艳」了。11 厘米左右的高度，身上的细节刻画却丝毫不马虎，各种金属成形色的表现也不错。光是素组就有非常不错的表现了，如果有能力的话，简单做一下干扫，外观估计会更好看。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/article/9cf6b014434c0191ac376bab271a2214" src="https://cdn.sspai.com/2023/08/31/article/9cf6b014434c0191ac376bab271a2214"/&gt;&lt;/figure&gt;&lt;p&gt;顶着「闪耀版」的头衔，这只擎天柱自然也有灯光效果。积木躯干部分内置了灯光模块，可以点亮眼睛和胸口，只要摇晃一下就能点亮，并在一定时间后自动熄灭。不过摇晃的方式我始终找不到诀窍，有时候晃半天也没亮，有时候只是调整一下姿势就亮了。可动性表现上，这只擎天柱算是差强人意。一些比较基本的动作都可以摆出来，胸部的车窗部分也可以展开。关节紧实度调教得也很好，把玩手感甚至比万代的一些小比例模型还好。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/article/1e28bd8ff26c2631dbaf58569d71b05a" src="https://cdn.sspai.com/2023/08/31/article/1e28bd8ff26c2631dbaf58569d71b05a"/&gt;&lt;figcaption&gt;一些比较基础的 Pose 还是可以轻松完成的&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;布鲁可这只擎天柱让我很是惊喜，尤其是在 79 这个价位上能有这样的细节表现，让我这样长期被万代 PUA 的胶佬看到了些许希望。毕竟同样是七十多的价位，我此前入手的万代 Capsule Action 系列真的让我有种恨铁不成钢的感觉。&lt;/p&gt;&lt;p&gt;或许是受限于成本，它的配件只有一个手炮、两块地台和两个特效件。就我个人而言，我其实更希望可以少给一块地台，而是多给一对手型，可玩性上会更好一点。尽管如此，我还是会愿意向身边的朋友推荐这款擎天柱，毕竟它的表现确实挺超乎我意料的。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/article/ccd87553f288975306c730327fbc7488" src="https://cdn.sspai.com/2023/08/31/article/ccd87553f288975306c730327fbc7488"/&gt;&lt;figcaption&gt;&lt;a href="https://sspai.com/t/49e6ll85jqa4" target="_blank"&gt;《三句话》&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2&gt;@北鸮：米布丁&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;入手渠道：山姆会员店，同类产品全家也买到过&lt;/li&gt;&lt;li&gt;入手价格：￥39.9 / 8 个&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;米布丁算是我近期买过的食物里面最奇特的一个，我本身其实不大吃黏稠的东西，但有天在全家看到就买了一个尝鲜，竟然意外地好吃，逛山姆时就顺便收了一拎。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/article/3daf4c23f636be98eb7f84891e01ba60" src="https://cdn.sspai.com/2023/08/31/article/3daf4c23f636be98eb7f84891e01ba60"/&gt;&lt;/figure&gt;&lt;p&gt;看说明和到处都有的菜谱，米布丁似乎是一种中东地区的甜点。用主食做甜点这种事还挺常见的，八宝饭应该就算得上。我觉得米布丁更合品味的最主要原因可能就是「不太甜」。它更多的是另一样主料牛奶的香味。打开的状态比较类似老酸奶，不搅匀会有更明显的米糕感，我习惯搅匀，口感没有那么黏。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/article/a94082e25d88a37cbbd2396b9dd24c5c" src="https://cdn.sspai.com/2023/08/31/article/a94082e25d88a37cbbd2396b9dd24c5c"/&gt;&lt;figcaption&gt;相当清晰的米粒……这东西是真的怎么拍都不好看。&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;山姆的这款比之前买到的奶味更重（可能大米也更多）。包装还专门写了可以加热食用，但我觉得还是像布丁一样冷食更好吃。因为是主食甜品，我觉得比一般的甜品更适合下午茶，尤其是那些下午半晌就饿得要死的日子，非常顶饥，当然，前提是你没那么在乎自己的热量摄入。&lt;/p&gt;&lt;h2&gt;@Lotta：插画书《山田诗子的红茶时光》&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;入手渠道：当当网官方旗舰店&lt;/li&gt;&lt;li&gt;入手价格：￥30&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;我对绘本、插画书一类的书籍总是有着莫名的兴趣，感觉这些好看的画总能在无形中疗愈自己的内心。尤其是是遇到与食物相关的绘本——比如之前买过的&lt;a href="https://sspai.com/post/78087" target="_blank"&gt;《面包狗》&lt;/a&gt;——就让我很是钟意。最近入手的这本《山田诗子的红茶时光》也是一本与食物有关的插画书。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/article/10ab84a14acc0920bfd5d69945afc854" src="https://cdn.sspai.com/2023/08/31/article/10ab84a14acc0920bfd5d69945afc854"/&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/article/2df2bd2c3eb925fc25172762d551af91" src="https://cdn.sspai.com/2023/08/31/article/2df2bd2c3eb925fc25172762d551af91"/&gt;&lt;/figure&gt;&lt;p&gt;作者山田诗子经营着自己的红茶品牌，在日本红茶协会担任着理事，同时也是作家和插画家，著有约 30 本和红茶有关的图书，对红茶的热爱可见一斑，甚至在红茶时光这本书的题献页就写着「献给我们茶壶」。书籍分为红茶篇、奶茶篇和冰红茶篇，每一篇都包含着基础知识、茶饮配方、茶点食谱，还有举办茶会、野餐等内容。在书的最后，还有山田诗子和另外三位红茶研究者的访谈。内容丰富，插画可爱，光是看着目录上茶点的名字就让人忍不住想要收入囊中，莫名有一种「看过就是吃过」的快乐。&lt;/p&gt;&lt;p&gt;收到书之后也很惊喜，图文混排的形式介于绘本和杂志之间，每一章都是不同的主题色，很有设计感。写作风格轻松有趣，读起来也会让人心情慢慢变好。书中无论是茶叶、茶点，还是餐具、仪式，都以英式为主，也会提到一些日本人的口味与需求。比如在茶叶基础知识这一章，所提到的红茶就以锡兰红茶和印度红茶为主，关于中国的红茶只提到了祁门红茶一种，感觉有些遗憾。毕竟中国红茶同样种类繁多，而且对于生活在中国、喝中国红茶为主的我来说，参考价值就弱了一些。尽管如此，能了解到其他地区红茶的特色、香气、滋味与口感，外出旅行时也多了许多选择。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/article/bc892e5ec7e88d6280b602e7729a588b" src="https://cdn.sspai.com/2023/08/31/article/bc892e5ec7e88d6280b602e7729a588b"/&gt;&lt;/figure&gt;&lt;p&gt;山田诗子的绘画很有个人风格，童真又写意，但这也意味着，对于不熟悉的食物，想要通过插画看出它真实的样子，就不是那么容易了。&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;如果你也想分享「新玩意」🔉：&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;获取 Matrix 社区写作权限并签署 &lt;a href="https://sspai.com/post/72089" target="_blank"&gt;Matrix 共创计划&lt;/a&gt;；&lt;/li&gt;&lt;li&gt;在少数派独家发布一篇文章，在标题中标注「新玩意」前缀；&lt;/li&gt;&lt;li&gt;用至少 800 字介绍产品，并配上 2-3 张产品的实拍图片；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;在网站个人信息中补充支付宝账号；&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;成功入选本栏目还可以得到 108 元的「剁手红包」🧧。如果你有兴趣参与，就赶紧来稿吧！&lt;/p&gt;&lt;p&gt;&amp;gt; 下载少数派 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，了解更多的新玩意 🆒&lt;/p&gt;&lt;p&gt;&amp;gt; 特惠、好用的硬件产品，尽在 &lt;a href="https://shop549593764.taobao.com/?spm=a230r.7195193.1997079397.2.2ddc7e0bPqKQHc" target="_blank"&gt;少数派 sspai 官方店铺 &lt;/a&gt;🛒&lt;/p&gt;&lt;/div&gt;</description><author>少数派编辑部</author><guid>https://sspai.com/post/82575</guid><pubDate>Thu, 31 Aug 2023 09:35:41 GMT</pubDate></item><item><title>一次省心的装修体验：我选择了宜家全屋设计服务</title><link>https://sspai.com/post/82584</link><description>&lt;div&gt;&lt;blockquote&gt;&lt;p&gt;家人们，装修哪有不发疯的！&lt;/p&gt;&lt;p&gt;请欣赏我家全屋定制的坑 (99/100)。&lt;/p&gt;&lt;p&gt;自装三套房吐血整理 72 个血泪教训！&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;不知道你是不是总在短视频应用里刷到这样的标题。装修前的我对此爱搭不理，直到今年 3 月我拿到了被开发商拖到交付 Deadline 的精装房，加入了装修群，联系了装修师傅，经过各种驴唇不对马嘴的话术洗礼，亲眼见识花式恨错难返的全屋定制质量之后，我决定和「宜家」谈。&lt;/p&gt;&lt;p&gt;你没看错，就是那个日常遭受质量鄙视，且总被吐槽「出租屋审美」的瑞典品牌，我经过各方权衡，还是选择了「宜家全屋设计」。选择的理由其实和我点外卖选择 KFC 或 M 记非常相似，知道它食材并不珍贵，味道也不会特别好吃，但售价和卡路里标注清晰，制作进度实时同步，食品安全也有一定保障。能在预定期限内完成装修，不会三天两头整一些「幺蛾子」，就是对装修人最大的仁慈。&lt;/p&gt;&lt;h2&gt;我适合「宜家全屋设计」吗？&lt;/h2&gt;&lt;p&gt;和我们理解的「全屋设计」从零开始不同，宜家全屋设计更像是「动物森友会」里的家居布置。设计师只是从宜家的成品家具中挑选搭配，再在成品的基础上，根据家庭实际情况调整数量、材质、颜色、尺寸等数据，实现一些基础定制。所以在考虑宜家全屋设计前，你可以先去宜家官网或是线下门店逛一逛，看看自己是否接受宜家成品家具的设计风格。&lt;/p&gt;&lt;p&gt;至少确认自己不排斥宜家的设计风格，你再考量自己是否有以下需求：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;没有太多精力死盯装修（只想躺平）；&lt;/li&gt;&lt;li&gt;着急入住，装修时间有限；&lt;/li&gt;&lt;li&gt;装修预算相对有限；&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;如果你的需求高度契合，又对自己喜爱的装修风格有一定认知，那大概率会在这项服务中获得非常丝滑的体验。但如果你装修时间充裕，或者预算充足，宜家全屋设计可能不能满足你的精装需求。一方面宜家成品家具市场流通度高，很容易撞款；另一方面宜家大部分家具质量的确一般，难以表现「人类高质量装修」；常规的全屋定制虽然存在一系列问题，但上限也高，亲力亲为还是能少踩很多坑的。&lt;/p&gt;&lt;p&gt;此外，虽然宜家目前已开放为无门店地区提供线上全屋设计服务，但考虑运输、退换货等问题，我不建议周边地区若无宜家实体门店的用户使用这一服务，宜家的运费可不是一比小数目。&lt;/p&gt;&lt;p&gt;需要注意的是，宜家的全屋设计服务不包括水电改造（厨房水电除外）、修改室内格局、更换墙面、墙漆、墙体和地板材质等硬装服务。如果你需要上述服务，只能先自行找装修公司完成后，再预约宜家全屋设计服务。&lt;/p&gt;&lt;h2&gt;花了多少钱？&lt;/h2&gt;&lt;p&gt;宜家全屋设计费 299 元（非会员 499 元，你若决定采用宜家方案，个人信息总是得给到对方的），面积在 30-150㎡ 之间不另收费，超过 150㎡ 的，加收一次性服务费，这个金额各地可能会有所不同。但相比大部分全屋定制品牌的服务费来说，还要啥「自行车」。&lt;/p&gt;&lt;p&gt;此外，宜家每年不定期有各类优惠活动上线，不仅可以减免设计费，还会有购物满减活动，如果你不是特别着急，可以咨询一下活动时间，节省一笔不小的支出。宜家的设计费虽然便宜，但并不提供薅羊毛的机会，如果你最终看不上宜家的产品，设计费不予退还，但测量图纸、设计方案还是可以提供。支付 299 元获得全家精确尺寸，想一想好像也不亏。&lt;/p&gt;&lt;figure&gt;&lt;img alt="TxPgbc43FoZ6H2xJLIQcmcpEnch" data-original="https://cdn.sspai.com/editor/u_/cjo1f4db34telve6r0d0" src="https://cdn.sspai.com/editor/u_/cjo1f4db34telve6r0d0"/&gt;&lt;/figure&gt;&lt;p&gt;宜家全屋设计提供的平面数据及三维预览&lt;/p&gt;&lt;p&gt;这笔预算的「大头」还是家具本身，这个就丰俭由人了。毕竟宜家既有许多白菜价的基本款，也藏着好些价格不菲的「设计师款」，足以让你的支出飙升至其他全屋定制的同等水平。&lt;/p&gt;&lt;h3&gt;如何选择家具？我的建议是&lt;/h3&gt;&lt;p&gt;首先，明确自己的装修风格。很多单品看着还不错，混搭在一起简直灾难，所以在选购之前一定要和设计师商定好设计风格。比如我家是以黑白色为主，以深绿点缀的简约风格，选品围绕它进行总不会太过分。&lt;/p&gt;&lt;p&gt;而在价格选择上，我建议遵循中庸之道，不选平价和高价款，选择中等价位且设计普适性较高的款式，例如落地镜我选择了 699 的霍维特，餐桌我选择了 2000 左右的英格托，沙发我选择了 6000 元左右的兰德克纳，主要考虑这个价位，产品看起来有一定品质保障，不至于「一碰就坏」，且万一事后嫌弃也方便闲鱼或者业主群里出掉。&lt;/p&gt;&lt;figure&gt;&lt;img alt="X8XpbUWCoolRpZxN73ZcKNOlnfg" data-original="https://cdn.sspai.com/editor/u_/cjo1f4lb34tel7u5r4n0" src="https://cdn.sspai.com/editor/u_/cjo1f4lb34tel7u5r4n0"/&gt;&lt;/figure&gt;&lt;p&gt;这也算是「翻车」的教训。为了统一设计，我的电视柜和餐边柜选择了相对平价的黑色高光基础款贝达。然而还没正式入住，电视柜正中的柜门已经出现了单边沉降，餐边柜上方两扇门也不能完全对齐，而它引以为傲的「推进式开门器」简直是为了「损坏」而设计的，7 个开门器不出 4 个月已经坏了 3 个了。更何况对于黑色镜面材质来说，推进式开门一推一堆指纹，足够让人抓狂，所以非常不推荐。&lt;/p&gt;&lt;figure&gt;&lt;img alt="WFHVbuhsCocURex0o9Lc2kvRnAd" data-original="https://cdn.sspai.com/editor/u_/cjo1f4tb34temvgn2c10" src="https://cdn.sspai.com/editor/u_/cjo1f4tb34temvgn2c10"/&gt;&lt;/figure&gt;&lt;p&gt;后续还有一些可以省但是我不建议你省的费用，比如送货上门（大件自己搬上 25 楼，不是巨石强森都会哭）以及安装费（除非你是拼搭十级爱好者兼体能爆棚兼情绪稳定，且常备激光水平仪，冲击钻等）。&lt;/p&gt;&lt;p&gt;最终，我 99㎡ 的全屋设计总计支出 27000+，相比动辄十几二十万的全屋定制费用，简直被自己节约哭了（你还可以办理最高 12 期的免息分期业务）。&lt;/p&gt;&lt;h2&gt;怎么服务的？&lt;/h2&gt;&lt;p&gt;宜家门店特别设置了全屋设计区，不过作为社恐，我还是从线上开始的。官网或公众号直接选择「设计和服务」&amp;gt;「全屋设计」，填写个人信息完成预约后，就会有对应区域的售前服务人员联系。售前会出具一份清晰明了的服务须知，重点条款都做了标红或加粗处理。家人们谁懂啊，这才是服务商应该提供的文案啊。&lt;/p&gt;&lt;figure&gt;&lt;img alt="CRmLbENMqoQlzTxNhSLcgVrsnFb" data-original="https://cdn.sspai.com/editor/u_/cjo1f5db34tel7u5r4ng" src="https://cdn.sspai.com/editor/u_/cjo1f5db34tel7u5r4ng"/&gt;&lt;figcaption&gt;杭州宜家全屋设计服务须知（部分）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;支付设计费，提供地址等必要信息后，售前就会安排工作人员上门测量。不过如果你的人设是一位专业制图师，已经预先绘制了带有精确水电位的平面图，你可以把 CAD 文件提供给宜家，再节省一笔上门费用。需要注意的是，&lt;strong&gt;测量不含定制衣柜，厨房和浴室测量，如有需求，需要在预约测量前告知&lt;/strong&gt;；&lt;/p&gt;&lt;p&gt;到了这一步，宜家已经掌握了你家的一切尺寸。售前会组建一个设计交流群，由设计师、客服组成，在这个群里，你就可以尽情的提出具体或抽象的需求了。&lt;/p&gt;&lt;figure&gt;&lt;img alt="R7NmbYtANoez10xhiIrcOCZEnNh" data-original="https://cdn.sspai.com/editor/u_/cjo1f5lb34temvgn2c1g" src="https://cdn.sspai.com/editor/u_/cjo1f5lb34temvgn2c1g"/&gt;&lt;/figure&gt;&lt;p&gt;根据需求不同，设计耗时也会有所差异，设计完成后设计师会约你到宜家门店，开启一对一交流模式（你也可以选择纯线上的方式进行对接，到店与设计师沟通方案单次服务时长最多 4 个小时，最多可安排 2 次到店沟通）。交流完成后，宜家会反馈一份完整的设计（包括整体空间鸟瞰图、整体空间布局规划、设计思路、产品清单）以及报价单，从产品到运输安装的服务费用都明码标价，基本规避了后续各种围绕价格的扯皮。&lt;/p&gt;&lt;figure&gt;&lt;img alt="ZWlRbHfccoY7WGxdsPJc1raWnCc" data-original="https://cdn.sspai.com/editor/u_/cjo1f5tb34tel7u5r4o0" src="https://cdn.sspai.com/editor/u_/cjo1f5tb34tel7u5r4o0"/&gt;&lt;/figure&gt;&lt;p&gt;交流期间，你可以随时要求设计师陪同「巡视」门店，一方面可以看一下设计中的家具实物，另一方面也可以把你逛到的有趣产品加到设计中。比如我就在门店种草了「尼瑟达镜子」排列组合的形态，于是在客厅中增加了 2x3 镜子组合的设计。&lt;/p&gt;&lt;figure&gt;&lt;img alt="QitwbGkD5oX0YZxSKOZcRHQfnBl" data-original="https://cdn.sspai.com/editor/u_/cjo1f6db34tel4rd8rr0" src="https://cdn.sspai.com/editor/u_/cjo1f6db34tel4rd8rr0"/&gt;&lt;/figure&gt;&lt;p&gt;敲定最终方案，就到了运输和上门安装环节。即使宜家有自己的运输体系，依然做不到送装合一。你需要分别预约送货和安装的时间。所幸宜家预约可以具体到某一日的上下午，且每次对接都有提前确认且非常准时，我基本还是在一天内完成了收货及安装。&lt;/p&gt;&lt;p&gt;宜家运输和上门安装人员也是在我经历的一系列送装服务中最省心的存在。运输由三位工作人员负责，确保货物可以安全地运输到家，我不用担心能不能运上来，也不用自行拆封确认产品是否完好。到了安装环节同样会有三位工作人员上门，一位设计师帮忙监督施工情况，两位安装师傅各司其职，完全不用搭把手帮忙（我仍记得那个阳光明媚的午后帮 TCL 安装师傅抬电视的窘样），大半天基本完成了所有产品的安装。设计图与实际对比如下，「所见即所得」是多么难得。&lt;/p&gt;&lt;figure&gt;&lt;img alt="M8rRbFYjPoDjzAxSaxGcckYLnxb" data-original="https://cdn.sspai.com/editor/u_/cjo1f6db34tel4rd8rrg" src="https://cdn.sspai.com/editor/u_/cjo1f6db34tel4rd8rrg"/&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img alt="U5T4bvFqboRQtSxkjBacEeL9nZe" data-original="https://cdn.sspai.com/editor/u_/cjo1f6tb34telve6r0dg" src="https://cdn.sspai.com/editor/u_/cjo1f6tb34telve6r0dg"/&gt;&lt;/figure&gt;&lt;h2&gt;如果非要定制呢？&lt;/h2&gt;&lt;p&gt;之前说到宜家全屋设计主要是从成品家具中挑选搭配，但在数量、材质、颜色、尺寸等维度上还是有一定的定制空间的。以「宜家神器」博阿克塞为例，你可以与设计师沟通自定义框架列数，以及每行配件的功能形态和材质。此外，许多的成品桌椅橱柜，都可以选配不同的尺寸、颜色、表面材质，以及自定义五金件、椅套等。&lt;/p&gt;&lt;figure&gt;&lt;img alt="NI7Pb3dGBonpC4xSDiwcWFhWnrc" data-original="https://cdn.sspai.com/editor/u_/cjo1f75b34temvgn2c20" src="https://cdn.sspai.com/editor/u_/cjo1f75b34temvgn2c20"/&gt;&lt;figcaption&gt;我家的「博阿克塞」设计方案&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;当然，宜家也可以提供一些不是小打小闹的设计，但这就是另外的价钱了，比如以下这些：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;衣柜定制：&lt;/strong&gt;这一部分属于宜家的经典业务，设计测量费依然是 500 元，分为标准柜+定制部分和纯定制柜两种，根据材质、五金、工艺不同有较大的差价，但至少是一口价设定，不会在打孔打到一半的时候，突然告诉你底板要加钱、抽屉要加钱、拉直要加钱、上墙还要加钱……&lt;/p&gt;&lt;p&gt;&lt;strong&gt;厨房定制：&lt;/strong&gt;可根据实际房屋的厨房布局的情况定制，设计测量费 500 元，包括厨房动线、电器解决方案、储物方式、灯光照明设计、橱柜门板款式以及水槽和龙头的选择，根据方案不同，价格从 7000+ 到 20000+ 都有，宜家官网有成品设计样例供用户参考。&lt;/p&gt;&lt;p&gt;此外宜家还提供了卫浴空间设计和视听储藏设计服务，适合只想改造部分空间的非新装用户。&lt;/p&gt;&lt;h2&gt;售后怎么样？&lt;/h2&gt;&lt;p&gt;在安装前或是安装期间，若出现产品损坏，运输人员或设计师会直接安排换货处理。首次运输时，其中一面镜子碎了，运输师傅直接下单从外地仓调货，第二天就送到了。&lt;/p&gt;&lt;p&gt;安装完成后，根据产品类型不同，质保期限也有所不同。但除家电和电竞设备外，基本都提供了 10 年质保服务，在此期间若出现问题，可以直接联系售后专员解决问题。虽然宜家没有 Aqara 售后 7x24 小时那么卷，但基本一天内可以得到答复，至少不会碰上商家摆烂或是售后、运输、安装三方「踢皮球」的情况。身在杭州，我可不想让你们在《1818 黄金眼》上看到我。&lt;/p&gt;&lt;h2&gt;总结&lt;/h2&gt;&lt;p&gt;总的来说，宜家全屋设计是一项不同于传统全屋定制的服务。它有独特的优势，成品家具「所见即所得」，设计选购非常直观，运输安装比较省心，价格公开透明且相对便宜，有稳定的售后保障；但同时它也有许多局限性，例如无法大幅修改硬装，只能从标准化库中选品，创意自由度较低，部分产品质量一般等。&lt;/p&gt;&lt;p&gt;所以，宜家全屋设计并不是人人都合适，这与你的设计预期、能投入装修的精力、整体预算等都密切相关。如果你正准备尝试宜家全屋设计，可以以我作为参考，有任何疑问也欢迎在评论区留言。最后，祝大家装修顺利，永不踩坑。&lt;/p&gt;&lt;/div&gt;</description><author>Snow</author><guid>https://sspai.com/post/82584</guid><pubDate>Thu, 31 Aug 2023 07:03:31 GMT</pubDate></item><item><title>导出多年微信聊天记录，我用可视化分析了出自己的口头禅</title><link>https://sspai.com/post/82577</link><description>&lt;div&gt;&lt;p&gt;&lt;strong&gt;Matrix 首页推荐&lt;/strong&gt; &lt;/p&gt;&lt;p&gt;&lt;a href="https://sspai.com/matrix" target="_blank"&gt;Matrix&lt;/a&gt; 是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。 &lt;br/&gt;文章代表作者个人观点，少数派仅对标题和排版略作修改。&lt;/p&gt;&lt;hr/&gt;&lt;h2&gt;前言&lt;/h2&gt;&lt;p&gt;微信，承载了多数人生活的方方面面。从亲人好友之间的沟通，到公司事情的交代。对于大多数人来说，已经活在了微信的世界里了。那么如果把微信的聊天记录导出，做一个聊天记录分析，用全局视角来分析分析聊天记录，会有怎样一种有趣的收获呢？这篇文章将会以导出微信聊天记录为切入点，结合数据分析学科的知识，对微信进行聊天记录进行分析。本文分为十一个小节，读者可以根据自己的需求跳转感兴趣的章节阅读。&lt;/p&gt;&lt;h3&gt;数据分析效果预览&lt;/h3&gt;&lt;p&gt;为了能让读者对本文实现的效果有最直观的感受，本文中有四个实践案例，最后生成的图片如下：&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/3ad683c00b9770ecd1c5960f71fcb00b.png" src="https://cdn.sspai.com/2023/08/31/3ad683c00b9770ecd1c5960f71fcb00b.png"/&gt;&lt;figcaption&gt;分析群聊/私聊生成高频词的词云&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/65eab89ce07d957b6884c6dc5bd76d61.png" src="https://cdn.sspai.com/2023/08/31/65eab89ce07d957b6884c6dc5bd76d61.png"/&gt;&lt;figcaption&gt;词云添加指定形状的遮罩，并自定义任意背景颜色&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/35b249ceed697048efac823ea1e29566.png" src="https://cdn.sspai.com/2023/08/31/35b249ceed697048efac823ea1e29566.png"/&gt;&lt;figcaption&gt;分析群聊/私聊，统计发送和接收到的所有表情或者单词数量，生成二维柱状图&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/6854851444c97d63225cf37d7f0fbb87.png" src="https://cdn.sspai.com/2023/08/31/6854851444c97d63225cf37d7f0fbb87.png"/&gt;&lt;figcaption&gt;分析每天聊天记录数量，生成不同配色方案的聊天频率热力图&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;文章阅读提示&lt;/h3&gt;&lt;p&gt;本文大体可以分为两个部分：微信聊天记录导出和微信聊天记录分析。获取微信微信聊天数据的加密密钥，对于 arm CPU 构架的 MacBook 用户来说比较简单，Intel CPU 构架的用户需要多一些耐心，根据文章教程逐步操作，相信最后也一定能获取到对应的密钥。&lt;/p&gt;&lt;p&gt;微信聊天记录分析部分，使用 Python 代码来做数据清洗和图片生成，需要读者稍微懂一些 Python 方面的知识。&lt;/p&gt;&lt;p&gt;文章中所有的代码不一定需要复制下来运行，文章中出现的代码或者截图，只是方便读者配合文字阅读理解。在 &lt;a href="https://github.com/JamesHopbourn/WeChatDataAnalysis/tree/master/" target="_blank"&gt;JamesHopbourn/WeChatDataAnalysis&lt;/a&gt; 代码仓库中提供了本文需要的全部代码和素材。&lt;/p&gt;&lt;h2&gt;获取微信聊天记录数据库加密密钥&lt;/h2&gt;&lt;p&gt;前置知识：微信使用 SQLite 数据库在本地保存聊天记录，为了保证聊天记录不被轻易窃取，微信基于 SQLCipher 封装了腾讯自己的 &lt;a href="https://github.com/Tencent/wcdb" target="_blank"&gt;WCDB&lt;/a&gt; 数据库框架。为了能够导出微信聊天记录，就需要通过技术手段获取数据库的加密密钥，这就是本小结需要达成的目标。&lt;/p&gt;&lt;p&gt;准备工作：为了全面分析聊天记录，我们先要进行数据同步。将移动设备上的聊天记录都同步到 MacBook 上。在移动设备上点击「设置 &amp;gt; 通用 &amp;gt; 聊天记录迁移与备份 &amp;gt; 迁移」并根据实际情况选择「迁移全部聊天记录」或者「迁移指定聊天记录」。以笔者的 52GB 聊天记录为例，花了 50 分钟左右。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/a3cc0a8bf8cac344637a6e7207884a98.png" src="https://cdn.sspai.com/2023/08/31/a3cc0a8bf8cac344637a6e7207884a98.png"/&gt;&lt;/figure&gt;&lt;p&gt;目前 macOS 平台有 Intel 和 arm 两种架构，两个构架使用的获取密钥的方法不同，请根据自己的 MacBook CPU 构架，选择对应的解密方式操作。&lt;/p&gt;&lt;h3&gt;arm CPU 架构获取密钥方法（简易方法）&lt;/h3&gt;&lt;p&gt;通过阅读百灵鸟安全团队发布的文章「&lt;a href="https://mp.weixin.qq.com/s?__biz=MzU0NzczMDg4Mg==&amp;amp;mid=2247483863&amp;amp;idx=1&amp;amp;sn=ae6d1069a517e0176822efad9835dbd3&amp;amp;chksm=fb48a57acc3f2c6c412cf96a1dececc42ec8853931386f0988b404c9df92b0d2f3d9ee8f5491&amp;amp;mpshare=1&amp;amp;scene=1&amp;amp;srcid=0818f2cWp0w1sgFkUmhGL4Oe&amp;amp;sharer_sharetime=1692294905463&amp;amp;sharer_shareid=92340da57488f8262c6c5e5b5e83ac2b#rd" target="_blank"&gt;打造 macOS 下最强的微信取证工具&lt;/a&gt;」，我们可以知道获取微信数据库密钥的方法。文章的后半部分，作者还开发了一个可用于获得密钥的程序，下载并运行此程序便可直接得到密钥。下一步，我们将测试这个程序，看看其效果如何。&lt;/p&gt;&lt;p&gt;访问 &lt;a href="https://github.com/kekeimiku/PointerSearcher-X" target="_blank"&gt;PointerSearcher-X&lt;/a&gt; 发布的 &lt;a href="https://github.com/kekeimiku/PointerSearcher-X/releases/tag/v0.2.0" target="_blank"&gt;_ptrsx-dumper&lt;/a&gt;_ 二进制文件，点击第一个 &lt;a href="https://github.com/kekeimiku/PointerSearcher-X/releases/download/v0.2.0/ptrsx-aarch64-apple-darwin.tar.gz" target="_blank"&gt;_ptrsx-dumper&lt;/a&gt;_ 下载解压即可。然后打开微信，点击左上角微信菜单里的「关于微信」，查看当前的微信版本号。此处作者使用的微信版本是 3.8.1 (26639)，记住这个版本号，下一步就要使用到它了。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/01935104b15a197de59cd62e748273b9.png" src="https://cdn.sspai.com/2023/08/31/01935104b15a197de59cd62e748273b9.png"/&gt;&lt;/figure&gt;&lt;p&gt;访问 &lt;a href="https://github.com/kekeimiku/dumpkey" target="_blank"&gt;dumpkey&lt;/a&gt; 项目主页，可以看到在 README.md 文件里，有不同版本微信所对应的操作命令。根据上一步查到的 3.8.1 (26639)，复制下对应的命令即可，例如 3.8.1 (26639) 版本的命令如下：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;ptrsx-dumper test --pid $(pgrep WeChat |head -1) --path &amp;quot;WeChat+0x4B0F700-&amp;gt;0-&amp;gt;8-&amp;gt;8-&amp;gt;16-&amp;gt;32-&amp;gt;8-&amp;gt;8-&amp;gt;64-&amp;gt;8-&amp;gt;0-&amp;gt;0&amp;quot; -n 32
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/5c5a282c15229e55ff87bf1f020d3c56.png" src="https://cdn.sspai.com/2023/08/31/5c5a282c15229e55ff87bf1f020d3c56.png"/&gt;&lt;/figure&gt;&lt;p&gt;最后，打开终端执行下面两条命令即可获取微信数据库的密钥，首先使用 cd 命令切换到解压出来的文件夹目录里，也可以打一个 cd 空格，然后直接把对应的文件夹拖入终端即可。然后执行上面查阅到的命令，在前面加上 &lt;code&gt;./&lt;/code&gt; 代表这条命令是在当前目录下的，回车执行即可获取到微信数据库的加密密钥。&lt;/p&gt;&lt;p&gt;加密密钥在第二行，也就是 &lt;code&gt;353e&lt;/code&gt; 开头的那行，但是这个十六进制的密钥，所以在实际使用的时候，需要在前面加上 &lt;code&gt;0x&lt;/code&gt; 这两个字符，下一步使用这个密钥的时候会再具体说明。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 切换到解压文件夹路径
cd ~/Downloads/ptrsx-aarch64-apple-darwin
    
./ptrsx-dumper test --pid $(pgrep WeChat |head -1) --path &amp;quot;WeChat+0x4B0F700-&amp;gt;0-&amp;gt;8-&amp;gt;8-&amp;gt;16-&amp;gt;32-&amp;gt;8-&amp;gt;8-&amp;gt;64-&amp;gt;8-&amp;gt;0-&amp;gt;0&amp;quot; -n 32
0x600001f00f60
353e9afab4b6422981d110d65e6d555557f1aca0afaa4431a5dab66fef384596
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/83a70e76f8467f60cdac7edcb7ecde74.png" src="https://cdn.sspai.com/2023/08/31/83a70e76f8467f60cdac7edcb7ecde74.png"/&gt;&lt;/figure&gt;&lt;h3&gt;Intel CPU 架构获取密钥方法（通杀方法）&lt;/h3&gt;&lt;p&gt;相对于 arm 构架的 CPU 来说，因为 &lt;a href="https://security.feishu.cn/link/safety?target=https%3A%2F%2Fgithub.com%2Fkekeimiku%2Fdumpkey&amp;amp;scene=ccm&amp;amp;logParams=%7B%22location%22%3A%22ccm_default%22%7D&amp;amp;lang=zh-CN" target="_blank"&gt;dumpkey&lt;/a&gt; 项目作者没有提供 x86 的密钥导出实现，所以就需要读者自己动手，以动态调试的方式，从内存中直接读取密钥。虽然过程较为繁琐一些，但还达不到超出多数读者理解的水平。所以只要跟着步骤一步步操作，应该都是可以获取到加密密钥的。另外提一句话 &lt;a href="https://security.feishu.cn/link/safety?target=https%3A%2F%2Fgithub.com%2Fkekeimiku%2Fdumpkey&amp;amp;scene=ccm&amp;amp;logParams=%7B%22location%22%3A%22ccm_default%22%7D&amp;amp;lang=zh-CN" target="_blank"&gt;dumpkey&lt;/a&gt; 项目目前只提供了 3.6.2 到 3.8.2 版本微信的命令，如果以后项目不再添加微信新版本的命令，也可以通过这个方法获取加密密钥。这是一个通杀的方法，任意微信版本，任意 CPU 架构都可以使用这个方法。接下来就正式开始通过动态调试获取密钥。&lt;/p&gt;&lt;p&gt;安装 lldb：lldb 是 Xcode 内置的开发者工具，可以用来调试 C/OC/C++/Swift 程序的调试器。为了能够使用 lldb，需要先安装一下开发者工具。在终端中执行 lldb 命令，弹出如下所示的提示框，那就是说明没有安装过 lldb，根据指示进行安装即可。如果以前执行过 &lt;code&gt;xcode-select --install&lt;/code&gt; 或者已经安装过 Homebrew 的话，电脑上应该已经有了这个工具。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/29f7e772ed70a5162121fb7137ebdac1.png" src="https://cdn.sspai.com/2023/08/31/29f7e772ed70a5162121fb7137ebdac1.png"/&gt;&lt;/figure&gt;&lt;p&gt;正确安装 lldb 之后可以尝试输出版本号，如果能够正确输出版本号，就代表着安装成功了。如下图所示作者使用的 lldb 版本是：lldb-1403.0.17.67&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/fbdfe35b66a581d13b80d513c1cd8cec.png" src="https://cdn.sspai.com/2023/08/31/fbdfe35b66a581d13b80d513c1cd8cec.png"/&gt;&lt;/figure&gt;&lt;p&gt;临时关闭系统的 SIP（SystemIntegrityProtection）即系统完整性保护，默认情况下 lldb 是无法调试微信，需要关闭 SIP。在 macOS 上关闭 SIP 需要进入恢复模式的终端里去执行命令。Intel MacBook 按下开机键后按住 Command-R 组合键进入恢复模式，arm MacBook 按住开机键不放直到出现选择界面，进入恢复模式进行操作。如果仍有疑问，可以参考下面这两篇文章：&lt;/p&gt;&lt;p&gt;进入恢复模式的终端中，执行以下两条命令，关闭 SIP 并重启电脑进入正常系统。如果操作正确 SIP 就能关闭了，如果对于这个步骤仍有疑问的读者，可以参考少数派上的文章 &lt;a href="https://sspai.com/post/55066" target="_blank"&gt;「macOS 开启或关闭 SIP」&lt;/a&gt;，有加详细的图文解释。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 关闭 SIP 保护
csrutil disable
    
# 重启电脑进入正常系统
reboot&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;正常进入系统之后，就可以使用 lldb 程序调试工具调试微信了。先运行微信，但是不要登录，让它保持在登陆窗口。然后打开终端输入 &lt;code&gt;lldb -p $(pgrep WeChat)&lt;/code&gt; 获取微信的进程 ID，指定 lldb 通过进程 ID 挂载 debug 程序。成功挂载微信程序之后，会显示出类似如下的界面：&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/242f69664964b8934e3b4a4a6e5af181.png" src="https://cdn.sspai.com/2023/08/31/242f69664964b8934e3b4a4a6e5af181.png"/&gt;&lt;/figure&gt;&lt;p&gt;接下来就是打断点了，在微信里的 &lt;code&gt;sqlite3_key&lt;/code&gt; 函数上打一个断点，当程序运行到这个函数的时候就会暂停下来，等待输入调试命令。&lt;/p&gt;&lt;p&gt;输入命令 &lt;code&gt;br set -n sqlite3_key&lt;/code&gt; 即可，lldb 回显：&lt;code&gt;Breakpoint 1: 2 locations.&lt;/code&gt;，说明 lldb 已经成功在这两个地方打上了断点。&lt;/p&gt;&lt;p&gt;然后继续输入命令 &lt;code&gt;c&lt;/code&gt; 回车即可，lldb 回显：&lt;code&gt;Process 59241 resuming&lt;/code&gt;，此处的 &lt;code&gt;c&lt;/code&gt; 即为 continue，执行完这条命令之后，程序就能正常继续向下执行，直到触发断点。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;(lldb) br set -n sqlite3_key
Breakpoint 1: 2 locations.
(lldb) c
Process 58802 resuming
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/63bc2d390b0f463475862248909aa2c6.png" src="https://cdn.sspai.com/2023/08/31/63bc2d390b0f463475862248909aa2c6.png"/&gt;&lt;/figure&gt;&lt;p&gt;那么如何触发断点呢？现在微信已经恢复正常运行了，只需要点击登陆或者扫码登陆微信即可。点击完登陆或者扫码确认之后，lldb 就会拦截到这个断点，让微信再次暂停运行，这时候微信会卡住，这是正常现象。&lt;/p&gt;&lt;p&gt;切换回终端查看，可以看到 lldb 已经正确地把微信在 &lt;code&gt;sqlite3_key&lt;/code&gt; 函数的入口处断点了&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/b0f0446a7d8175ae3359d06923ad1996.png" src="https://cdn.sspai.com/2023/08/31/b0f0446a7d8175ae3359d06923ad1996.png"/&gt;&lt;/figure&gt;&lt;p&gt;最后一步，输出内存里的密钥值。在日常生活中，大家可能听说过：「电脑上临时存储数据，经常会说把数据存在内存里，因为这样比较快等类似的话」。但是很少有人会直接跟内存去打交道。但是现在在 lldb 的帮助下，就可以直接读取到内存的值，此处要读取的就是数据库的密钥。&lt;/p&gt;&lt;p&gt;Intel CPU 构架命令 &lt;code&gt;memory read --size 1 --format x --count 32 $rsi&lt;/code&gt;&lt;/p&gt;&lt;p&gt;arm CPU 架构命令 &lt;code&gt;memory read --size 1 --format x --count 32 $x1&lt;/code&gt;&lt;/p&gt;&lt;p&gt;以 arm CPU 架构为例，最后得到的结果如下所示，复制四行以十六进制表示的内存数据，后续使用 Python 处理即可获取到正确的密钥。最后输入 exit 并再次输入 y 确认退出 lldb 调试，微信即可继续正常运行。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;(lldb) memory read --size 1 --format x --count 32 $x1
0x60000240c760: 0x35 0x3e 0x9a 0xfa 0xb4 0xb6 0x42 0x29
0x60000240c768: 0x81 0xd1 0x10 0xd6 0x5e 0x6d 0x55 0x55
0x60000240c770: 0x57 0xf1 0xac 0xa0 0xaf 0xaa 0x44 0x31
0x60000240c778: 0xa5 0xda 0xb6 0x6f 0xef 0x38 0x45 0x96
    
(lldb) exit
Quitting lldb will detach from one or more processes. Do you really want to proceed: [Y/n] y
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/2cd83ca99b39082d74f0c300eb397b1f.png" src="https://cdn.sspai.com/2023/08/31/2cd83ca99b39082d74f0c300eb397b1f.png"/&gt;&lt;/figure&gt;&lt;p&gt;使用 Python 将内存中读取的密钥进行处理，去掉开头的 &lt;code&gt;0x&lt;/code&gt; 并把四行合并为一行，即可获得可以使用的密钥，代码如下：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!/usr/bin/env python3
    
source = &amp;#x27;&amp;#x27;&amp;#x27;
0x60000240c760: 0x35 0x3e 0x9a 0xfa 0xb4 0xb6 0x42 0x29
0x60000240c768: 0x81 0xd1 0x10 0xd6 0x5e 0x6d 0x55 0x55
0x60000240c770: 0x57 0xf1 0xac 0xa0 0xaf 0xaa 0x44 0x31
0x60000240c778: 0xa5 0xda 0xb6 0x6f 0xef 0x38 0x45 0x96
&amp;#x27;&amp;#x27;&amp;#x27;
    
key = &amp;#x27;0x&amp;#x27; + &amp;#x27;&amp;#x27;.join(i.partition(&amp;#x27;:&amp;#x27;)[2].replace(&amp;#x27;0x&amp;#x27;, &amp;#x27;&amp;#x27;).replace(&amp;#x27; &amp;#x27;, &amp;#x27;&amp;#x27;) for i in source.split(&amp;#x27;\n&amp;#x27;)[1:5])
print(key)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最后输出密钥：&lt;code&gt;0x353e9afab4b6422981d110d65e6d555557f1aca0afaa4431a5dab66fef384596&lt;/code&gt;&lt;/p&gt;&lt;p&gt;对比上一个小节，使用 ptrsx-dumper 获取的密钥：&lt;code&gt;353e9afab4b6422981d110d65e6d555557f1aca0afaa4431a5dab66fef384596&lt;/code&gt;，除了开头需要手动补全的 &lt;code&gt;0x&lt;/code&gt; 之外完全一致。&lt;/p&gt;&lt;h2&gt;导出聊天记录文件&lt;/h2&gt;&lt;p&gt;为了能够打开数据库文件进行导出操作，需要下载 &lt;a href="https://sqlitebrowser.org/dl/" target="_blank"&gt;DB Browser for SQLite &lt;/a&gt;进行操作。下载并安装完成之后，就该去寻找微信的数据库文件了。此处就不用通过 Finder 一层层地去找了，有一个简单的办法可快速找到数据库文件位置：打开任意聊天记录，选择图片或者文件，直接右键点击「在 Finder 中显示」即可。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/832b7e80635019608b49c58fa3994636.png" src="https://cdn.sspai.com/2023/08/31/832b7e80635019608b49c58fa3994636.png"/&gt;&lt;/figure&gt;&lt;p&gt;在打开的 Finder 中，向外回退两层目录，所有的 &lt;code&gt;msg_数字.db&lt;/code&gt; 里面存储的都是聊天记录。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/551544fc697e13b0300f2829e1b1ee21.png" src="https://cdn.sspai.com/2023/08/31/551544fc697e13b0300f2829e1b1ee21.png"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;为了避免在操作过程中因为错误操作损坏数据库文件，建议先退出微信&lt;/strong&gt;。将 msg 数据库文件从 &lt;code&gt;msg_0.db&lt;/code&gt; 到 &lt;code&gt;msg_9.db&lt;/code&gt; 十个数据库文件单独拷贝出来操作。此处使用命令实现，如果读者对 Unix 命令比较陌生，也可以按照注释操作手动创建文件夹，复制数据库文件。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 在桌面上创建 WeChatDB 目录
mkdir ~/Desktop/WeChatDB
    
# 切换到数据库文件所在的目录，不要直接复制此处的路径，直接从 Finder 拉到终端里
cd /Users/james/Library/Containers/com.tencent.xinWeChat/Data/Library/Application\ Support/com.tencent.xinWeChat/2.0b4.0.9/5a22781f14219edfffa333cb38aa92cf/Message
    
# 把所有的 msg 数据库文件拷贝到 WeChatDB 目录
cp msg*.db ~/Desktop/WeChatDB
    
# 在 WeChatDB 目录里创建空文件夹，从 db0 到 db9
mkdir ~/Desktop/WeChatDB/db{0..9}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最终效果如下图所示，把所有的 db 数据库文件都拷贝到新建的 WeChatDB 目录下，并创建了从 db0 到 db9 十个空文件夹。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/4349140fb988c6ee7bc88b85e3836e3b.png" src="https://cdn.sspai.com/2023/08/31/4349140fb988c6ee7bc88b85e3836e3b.png"/&gt;&lt;/figure&gt;&lt;p&gt;使用 DB Browser for SQLite 任意打开一个数据库文件，此处有三个注意点：&lt;/p&gt;&lt;p&gt;密码类型：选择「原始密钥」&lt;/p&gt;&lt;p&gt;密码，第一种使用 ptrsx-dumper 获取到的密码前面没有 &lt;code&gt;0x&lt;/code&gt; 字符，需要自己手动加上，第二种 Python 解析出来的密码可以直接使用，例如此处作者填写的密码就是：&lt;code&gt;0x353e9afab4b6422981d110d65e6d555557f1aca0afaa4431a5dab66fef384596&lt;/code&gt;&lt;/p&gt;&lt;p&gt;加密设置：选择「SQLCipher 3 默认」&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/834144a15be79e659b8e958188a20844.png" src="https://cdn.sspai.com/2023/08/31/834144a15be79e659b8e958188a20844.png"/&gt;&lt;/figure&gt;&lt;p&gt;正确设置三个值以后，就可以回车解密微信聊天记录了，进入之后看到如下的界面：&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/e510c6fec40ea3cc5ce2d92735c0deb5.png" src="https://cdn.sspai.com/2023/08/31/e510c6fec40ea3cc5ce2d92735c0deb5.png"/&gt;&lt;/figure&gt;&lt;p&gt;切换到「浏览数据」选项，通过选择不同表就可以查看和不同好友之间的聊天记录，如下所示就是一份聊天记录。其中模糊部分就是聊天信息的具体内容。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/5c831a0d05e3423f92a35043e0869dcb.png" src="https://cdn.sspai.com/2023/08/31/5c831a0d05e3423f92a35043e0869dcb.png"/&gt;&lt;/figure&gt;&lt;p&gt;但是这样的浏览意义有限，可以将所有的聊天记录都导出 JSON，以便接下来使用 Python 进行数据分析。前往「文件 &amp;gt; 导出」，点击「表到 JSON…」&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/ba1b6c9614a51a831727ab4025d0034f.png" src="https://cdn.sspai.com/2023/08/31/ba1b6c9614a51a831727ab4025d0034f.png"/&gt;&lt;/figure&gt;&lt;p&gt;在弹出的表选择框中，按下 command+A 选择全部的数据表，也就是全部的聊天记录，继续点击「保存」。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/d2b860748830e08de0a7fe44a9dd6266.png" src="https://cdn.sspai.com/2023/08/31/d2b860748830e08de0a7fe44a9dd6266.png"/&gt;&lt;/figure&gt;&lt;p&gt;那么保存到哪里合适呢？刚才创建 WeChatDB 文件夹的最后一步，创建了 db0 到 db9 十个空文件夹。此时就可以对号入座，把对应数据库的 JSON 文件保存到对应的 db 文件夹里。为什么要这么做，而不是把所有的聊天记录都直接放在 WeChatDB 里呢？举个例子，如果隔了一段时间，又和好友聊了很多话之后，想要对这段时间的聊天记录再次做一个分析。通过关键词检索，很快就可以找到这个好友的聊天记录放在哪一个数据库文件里，而不需要再次手动将十个数据库文件都做一次导出，然后才能进行处理。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/06a84f8c6a1b6c4801cd62e707a334d6.png" src="https://cdn.sspai.com/2023/08/31/06a84f8c6a1b6c4801cd62e707a334d6.png"/&gt;&lt;/figure&gt;&lt;p&gt;如下图所示，就是全部数据库都导出之后的效果&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/3851d47ce72dd38758d270dbf89eca6e.png" src="https://cdn.sspai.com/2023/08/31/3851d47ce72dd38758d270dbf89eca6e.png"/&gt;&lt;/figure&gt;&lt;h2&gt;环境配置&lt;/h2&gt;&lt;p&gt;接下来将会大量使用 Python 来实现绘制词云，绘制表格，生成 Excel 等功能，所以为了避免缺少各种库而导致报错，可以提前将环境都准备，使用如下命令安装所有依赖库：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;pip3 install wordcloud matplotlib pandas jieba mplfonts imageio openpyxl numpy
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果读者是使用 conda 来配置虚拟环境，也可以通过 conda 来创建虚拟环境来运行脚本：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;(base) conda create -n WeChatDataAnalysis python=3.9 matplotlib wordcloud pandas imageio openpyxl -y
    
(base) conda activate WeChatDataAnalysis
    
(WeChatDataAnalysis) pip3 install jieba mplfonts
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;关联阅读：&lt;/strong&gt;&lt;a href="https://sspai.com/post/69595" target="_blank"&gt;《为非技术人群准备的 Python 安装指南》&lt;/a&gt;&lt;/p&gt;&lt;p&gt;使用完成之后如果退出删除环境，使用以下两条命令：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;(WeChatDataAnalysis)  conda deactivate
    
(base) conda remove -n WeChatDataAnalysis --all
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;制作词云&lt;/h2&gt;&lt;h3&gt;前置知识&lt;/h3&gt;&lt;p&gt;有了所有好友和群聊的聊天记录，就可以正式开始制作词云了。但是在此之前，需要先对微信聊天记录导出的 JSON 结构有一个基础了解。如下所示，是一个比较简单的聊天信息的 JSON 数据。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;{
  &amp;quot;CompressContent&amp;quot;: null,
  &amp;quot;ConBlob&amp;quot;: &amp;quot;chN3eGlkX3k2OHh0MDk4NHFjczIxeglsaXV6b25nZGGAAQCYAQCgAQC4AQDIAQDQAQDwAQD4AQCIAgI=&amp;quot;,
  &amp;quot;IntRes1&amp;quot;: 0,
  &amp;quot;IntRes2&amp;quot;: 0,
  &amp;quot;StrRes1&amp;quot;: null,
  &amp;quot;StrRes2&amp;quot;: null,
  &amp;quot;mesDes&amp;quot;: 0,
  &amp;quot;mesLocalID&amp;quot;: 8,
  &amp;quot;mesSvrID&amp;quot;: 9004976427286855000,
  &amp;quot;messageType&amp;quot;: 1,
  &amp;quot;msgContent&amp;quot;: &amp;quot;投稿一日一技&amp;quot;,
  &amp;quot;msgCreateTime&amp;quot;: 1611106801,
  &amp;quot;msgImgStatus&amp;quot;: 1,
  &amp;quot;msgSeq&amp;quot;: 0,
  &amp;quot;msgSource&amp;quot;: &amp;quot;&amp;quot;,
  &amp;quot;msgStatus&amp;quot;: 2,
  &amp;quot;msgVoiceText&amp;quot;: null
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其中比较值得关注的字段如下：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;msgContent：消息内容&lt;/li&gt;&lt;li&gt;msgCreateTime：消息创建时间，使用 Unix Time 表示&lt;/li&gt;&lt;li&gt;messageType：消息类型&lt;ul&gt;&lt;li&gt;文本：1&lt;/li&gt;&lt;li&gt;图片：3&lt;/li&gt;&lt;li&gt;语音：34&lt;/li&gt;&lt;li&gt;视频：43&lt;/li&gt;&lt;li&gt;表情包：47&lt;/li&gt;&lt;li&gt;位置：48&lt;/li&gt;&lt;li&gt;分享消息：49&lt;/li&gt;&lt;li&gt;系统消息：10000&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;msgStatus：消息状态&lt;ul&gt;&lt;li&gt;收到消息：4&lt;/li&gt;&lt;li&gt;发出消息：2、3&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;msgVoiceText：微信的语音转文字识别结果&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;基础框架思路&lt;/h3&gt;&lt;p&gt;前置知识有了，就可以开始动手写代码了。制作词云图片，只需要提取出所有 messageType 等于 1 的记录，并把这些聊天记录进行分词之后，就可以制作词云了。&lt;/p&gt;&lt;p&gt;那么新的问题来了，如何快速找到那个好友/群聊对应的 JSON 文件？使用 grep 命令即可。找到想要生成词云的群聊，任意选择一句聊天记录，只要和别的群有一定区分度即可。例如图中的「每次放烟雾弹都有你」就是一句比较有区分度的话，其他群里不太可能有人发过类似的话。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/a057943810fa8148453162df611c8efb.png" src="https://cdn.sspai.com/2023/08/31/a057943810fa8148453162df611c8efb.png"/&gt;&lt;/figure&gt;&lt;p&gt;打开终端，使用 grep 命令指定在 WeChatDB 目录下搜索这句话出现在哪个文件里即可，命令如下：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;grep -r &amp;#x27;每次放烟雾弹都有你&amp;#x27; ~/Desktop/WeChatDB
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/61e6fd0a25a648ea8afaa80f29dc08ea.png" src="https://cdn.sspai.com/2023/08/31/61e6fd0a25a648ea8afaa80f29dc08ea.png"/&gt;&lt;/figure&gt;&lt;p&gt;可以看到 grep 已经输出了所对应的文件路径：&lt;code&gt;/Users/james/Desktop/WeChatDB/db2/Chat_3c0825dcf3b568028bcf00ee45656d60.json&lt;/code&gt;&lt;/p&gt;&lt;p&gt;快速写一个 Python 脚本验证一下想法，但是可以看到，msgContent 除了记录消息信息之外，还在第一行标记了是谁发的这条消息，这并不是期望的结果，所以需要对程序进行调整。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/49213e68b3a5699193b80faef0309892.png" src="https://cdn.sspai.com/2023/08/31/49213e68b3a5699193b80faef0309892.png"/&gt;&lt;/figure&gt;&lt;p&gt;将代码稍做修改，定义 content 变量用来保存消息文本。如果消息超过一行，就丢弃掉第一行的微信号，否则直接拼接到 content，最后打印出 content 即可。此处可能有读者会有疑问，为什么是超过一行，这样处理？如果是等于一行是什么情况呢？那就是自己发送的消息了，也就是对应 else 代码处理的部分。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!/usr/bin/env python3
import os
import json
    
data = open(&amp;#x27;你的 JSON 文件路径&amp;#x27;).read()
data = json.loads(data)
    
content = &amp;quot;&amp;quot;
for item in data:
    if (item[&amp;#x27;messageType&amp;#x27;] == 1):
        message = item[&amp;#x27;msgContent&amp;#x27;].split(&amp;#x27;\n&amp;#x27;)
        if len(message) &amp;gt; 1:
            content += &amp;quot; &amp;quot;.join(message[1:])+ &amp;quot;\n&amp;quot;
        else:
            content += message[0] + &amp;quot;\n&amp;quot;
print(content)
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/44b7c0ac0a9b930b6c450e82f5c530da.png" src="https://cdn.sspai.com/2023/08/31/44b7c0ac0a9b930b6c450e82f5c530da.png"/&gt;&lt;/figure&gt;&lt;h3&gt;结巴分词&lt;/h3&gt;&lt;p&gt;聊天记录清洗出来之后，就可以开始分词了。为了剔除没有意义的字符，例如：啊、吧、呢和吗等等等，此处直接删除了所有一个字符的词，如果读者有自己的想法，可以根据实际情况修改。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 引入结巴分词，对群聊记录进行分词
import jieba
ls = jieba.lcut(content)
    
# 如果分词出来只有一个字符剔除这个字符
ls = [i for i in ls if len(i) &amp;gt; 1]
    
text = &amp;#x27; &amp;#x27;.join(ls)
print(text)
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/b400d49e5a655e5540e877c77ec90c77.png" src="https://cdn.sspai.com/2023/08/31/b400d49e5a655e5540e877c77ec90c77.png"/&gt;&lt;/figure&gt;&lt;h3&gt;生成词云&lt;/h3&gt;&lt;p&gt;最后一步，引入 wordcloud 生成词云。请注意最后一行代码保存图片文件，保存在当前目录下，所以这个目前编辑的 Python 代码一定是要已经保存为文件的状态。为了支持中文字体，可以从网上下载任意喜欢的中文字体，将它的 tff 字体文件放在和 Python 脚本同级的目录下。并在代码中指定 &lt;code&gt;font_path&lt;/code&gt; 参数为字体名字即可。&lt;/p&gt;&lt;p&gt;此处给出两个可供下载的中文字体：&lt;a href="https://done.alibabadesign.com/puhuiti2.0" target="_blank"&gt;阿里巴巴普惠体2.0&lt;/a&gt;、&lt;a href="https://www.dafontfree.io/simsun-font/" target="_blank"&gt;SIMSUN&lt;/a&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import wordcloud
    
wc = wordcloud.WordCloud(
    font_path=&amp;quot;SIMSUN.ttf&amp;quot;,
    width=1000,
    height=1000,
    background_color=&amp;quot;skyblue&amp;quot;,
    max_words=200)
    
wc.generate(text)
wc.to_file(&amp;quot;result.png&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;生成的词云效果图如下：&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/ae5a8417d69aed7dfa8ad38d51e53c9c.png" src="https://cdn.sspai.com/2023/08/31/ae5a8417d69aed7dfa8ad38d51e53c9c.png"/&gt;&lt;/figure&gt;&lt;h3&gt;配置停止词&lt;/h3&gt;&lt;p&gt;上图中，捂脸、偷笑、破涕为笑这几个都是表情，由于大家经常发这几个表情，所以占了比较大的面积。但是这样的词不具有生成词云的意义。所以可以引入 wordcloud 的 stopwords 停止词功能，将这些不太重要的词排除掉。&lt;/p&gt;&lt;p&gt;有了这个想法之后，新的问题又来了，微信的表情包有将近 50 个默认表情包，自己一个个去统计岂不是太麻烦了？简单粗暴一点的办法就是直接上，把微信默认的表情都按一遍过去。发给自己，然后拷贝出来。使用 sed 命令处理一下，就可以使用了。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;pbpaste|sed &amp;quot;s|\]\[|&amp;#x27;,&amp;#x27;|g ; s|\[|\[&amp;#x27;| ; s|\]|&amp;#x27;\]|&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/2284bec9844f37ab22eab2ab3f2d020d.png" src="https://cdn.sspai.com/2023/08/31/2284bec9844f37ab22eab2ab3f2d020d.png"/&gt;&lt;/figure&gt;&lt;p&gt;更新停止词之后的代码如下所示：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 引入词云
import wordcloud
    
# 引入停止词模块
from wordcloud import WordCloud, STOPWORDS
stopwords = STOPWORDS
# 添加新的停止词
stopwords.update([&amp;#x27;微笑&amp;#x27;,&amp;#x27;撇嘴&amp;#x27;,&amp;#x27;色&amp;#x27;,&amp;#x27;发呆&amp;#x27;,&amp;#x27;得意&amp;#x27;,&amp;#x27;流泪&amp;#x27;,&amp;#x27;害羞&amp;#x27;,&amp;#x27;闭嘴&amp;#x27;,&amp;#x27;睡&amp;#x27;,&amp;#x27;大哭&amp;#x27;,&amp;#x27;尴尬&amp;#x27;,&amp;#x27;发怒&amp;#x27;,&amp;#x27;调皮&amp;#x27;,&amp;#x27;呲牙&amp;#x27;,&amp;#x27;惊讶&amp;#x27;,&amp;#x27;难过&amp;#x27;,&amp;#x27;囧&amp;#x27;,&amp;#x27;抓狂&amp;#x27;,&amp;#x27;吐&amp;#x27;,&amp;#x27;偷笑&amp;#x27;,&amp;#x27;愉快&amp;#x27;,&amp;#x27;白眼&amp;#x27;,&amp;#x27;傲慢&amp;#x27;,&amp;#x27;困&amp;#x27;,&amp;#x27;惊恐&amp;#x27;,&amp;#x27;憨笑&amp;#x27;,&amp;#x27;悠闲&amp;#x27;,&amp;#x27;咒骂&amp;#x27;,&amp;#x27;疑问&amp;#x27;,&amp;#x27;嘘&amp;#x27;,&amp;#x27;晕&amp;#x27;,&amp;#x27;衰&amp;#x27;,&amp;#x27;骷髅&amp;#x27;,&amp;#x27;敲打&amp;#x27;,&amp;#x27;再见&amp;#x27;,&amp;#x27;擦汗&amp;#x27;,&amp;#x27;抠鼻&amp;#x27;,&amp;#x27;鼓掌&amp;#x27;,&amp;#x27;坏笑&amp;#x27;,&amp;#x27;右哼哼&amp;#x27;,&amp;#x27;鄙视&amp;#x27;,&amp;#x27;委屈&amp;#x27;,&amp;#x27;快哭了&amp;#x27;,&amp;#x27;阴险&amp;#x27;,&amp;#x27;亲亲&amp;#x27;,&amp;#x27;可怜&amp;#x27;,&amp;#x27;笑脸&amp;#x27;,&amp;#x27;生病&amp;#x27;,&amp;#x27;脸红&amp;#x27;,&amp;#x27;破涕为笑&amp;#x27;,&amp;#x27;恐惧&amp;#x27;,&amp;#x27;失望&amp;#x27;,&amp;#x27;无语&amp;#x27;,&amp;#x27;嘿哈&amp;#x27;,&amp;#x27;捂脸&amp;#x27;,&amp;#x27;奸笑&amp;#x27;,&amp;#x27;机智&amp;#x27;,&amp;#x27;皱眉&amp;#x27;,&amp;#x27;耶&amp;#x27;,&amp;#x27;吃瓜&amp;#x27;,&amp;#x27;加油&amp;#x27;,&amp;#x27;汗&amp;#x27;,&amp;#x27;天啊&amp;#x27;,&amp;#x27;Emm&amp;#x27;,&amp;#x27;社会社会&amp;#x27;,&amp;#x27;旺柴&amp;#x27;,&amp;#x27;好的&amp;#x27;,&amp;#x27;打脸&amp;#x27;,&amp;#x27;哇&amp;#x27;,&amp;#x27;翻白眼&amp;#x27;,&amp;#x27;666&amp;#x27;,&amp;#x27;让我看看&amp;#x27;,&amp;#x27;叹气&amp;#x27;,&amp;#x27;苦涩&amp;#x27;,&amp;#x27;裂开&amp;#x27;,&amp;#x27;嘴唇&amp;#x27;,&amp;#x27;爱心&amp;#x27;,&amp;#x27;心碎&amp;#x27;,&amp;#x27;拥抱&amp;#x27;,&amp;#x27;强&amp;#x27;,&amp;#x27;弱&amp;#x27;,&amp;#x27;握手&amp;#x27;,&amp;#x27;胜利&amp;#x27;,&amp;#x27;抱拳&amp;#x27;,&amp;#x27;勾引&amp;#x27;,&amp;#x27;拳头&amp;#x27;,&amp;#x27;OK&amp;#x27;,&amp;#x27;合十&amp;#x27;,&amp;#x27;啤酒&amp;#x27;,&amp;#x27;咖啡&amp;#x27;,&amp;#x27;蛋糕&amp;#x27;,&amp;#x27;玫瑰&amp;#x27;,&amp;#x27;凋谢&amp;#x27;,&amp;#x27;菜刀&amp;#x27;,&amp;#x27;炸弹&amp;#x27;,&amp;#x27;便便&amp;#x27;,&amp;#x27;月亮&amp;#x27;,&amp;#x27;太阳&amp;#x27;,&amp;#x27;庆祝&amp;#x27;,&amp;#x27;礼物&amp;#x27;,&amp;#x27;红包&amp;#x27;,&amp;#x27;發&amp;#x27;,&amp;#x27;福&amp;#x27;,&amp;#x27;烟花&amp;#x27;,&amp;#x27;爆竹&amp;#x27;,&amp;#x27;猪头&amp;#x27;,&amp;#x27;跳跳&amp;#x27;,&amp;#x27;发抖&amp;#x27;,&amp;#x27;转圈&amp;#x27;])
    
wc = wordcloud.WordCloud(
    font_path=&amp;quot;SIMSUN.ttf&amp;quot;,
    width=1000,
    height=1000,
    background_color=&amp;quot;skyblue&amp;quot;,
    max_words=200,
    # 配置停止词参数
    stopwords=stopwords)
    
wc.generate(text)
wc.to_file(&amp;quot;resultStop.png&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最后得到的结果如下图所示，可以看到表情相关的单词都已经剔除了，生成了一张群聊高频词的词云。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/ff014ccbd48df091a1fa7a02dafc8643.png" src="https://cdn.sspai.com/2023/08/31/ff014ccbd48df091a1fa7a02dafc8643.png"/&gt;&lt;/figure&gt;&lt;h3&gt;词云形状&lt;/h3&gt;&lt;p&gt;不少人会使用词云来生成和爱人的聊天记录图片，在这种场景下，可以在词云参数里配置一张爱心图片的遮罩，会更加符合使用场景需求。接下来就要开始设置爱心遮罩了。首先需要一个爱心的图片，网上的图片由于清晰度不够，生成的效果欠佳，所以可以自己绘制一个。将两个圆的半圆部分和正方形混合，再设置一下颜色，旋转 315 度即可得到一个高清自制的爱心图片。步骤截图如下：&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/cd0f17ca5db1efbd38871e53dbce2c3c.png" src="https://cdn.sspai.com/2023/08/31/cd0f17ca5db1efbd38871e53dbce2c3c.png"/&gt;&lt;/figure&gt;&lt;p&gt;导出爱心的时候建议把导出像素不要设置太大，否则脚本运行时间会非常长，导出像素设置为 200 或者 300 即可。下面是一张制作好的爱心图片，可直接拿来使用。另外，文章开头提供的 GitHub 仓库链接里已经放置了这张图片。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/d2009ba362feca5bbbe6bfd032086801.png" src="https://cdn.sspai.com/2023/08/31/d2009ba362feca5bbbe6bfd032086801.png"/&gt;&lt;/figure&gt;&lt;p&gt;更新后的代码如下所示：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 引入结巴分词，对群聊记录进行分词
import jieba
ls = jieba.lcut(content)
# 如果分词出来只有一个字符剔除这个字符
ls = [i for i in ls if len(i) &amp;gt; 1]
text = &amp;#x27; &amp;#x27;.join(ls)
    
# 引入词云
import wordcloud
# 引入停止词模块
from wordcloud import WordCloud, STOPWORDS
stopwords = STOPWORDS
# 添加新的停止词
stopwords.update([&amp;#x27;微笑&amp;#x27;,&amp;#x27;撇嘴&amp;#x27;,&amp;#x27;色&amp;#x27;,&amp;#x27;发呆&amp;#x27;,&amp;#x27;得意&amp;#x27;,&amp;#x27;流泪&amp;#x27;,&amp;#x27;害羞&amp;#x27;,&amp;#x27;闭嘴&amp;#x27;,&amp;#x27;睡&amp;#x27;,&amp;#x27;大哭&amp;#x27;,&amp;#x27;尴尬&amp;#x27;,&amp;#x27;发怒&amp;#x27;,&amp;#x27;调皮&amp;#x27;,&amp;#x27;呲牙&amp;#x27;,&amp;#x27;惊讶&amp;#x27;,&amp;#x27;难过&amp;#x27;,&amp;#x27;囧&amp;#x27;,&amp;#x27;抓狂&amp;#x27;,&amp;#x27;吐&amp;#x27;,&amp;#x27;偷笑&amp;#x27;,&amp;#x27;愉快&amp;#x27;,&amp;#x27;白眼&amp;#x27;,&amp;#x27;傲慢&amp;#x27;,&amp;#x27;困&amp;#x27;,&amp;#x27;惊恐&amp;#x27;,&amp;#x27;憨笑&amp;#x27;,&amp;#x27;悠闲&amp;#x27;,&amp;#x27;咒骂&amp;#x27;,&amp;#x27;疑问&amp;#x27;,&amp;#x27;嘘&amp;#x27;,&amp;#x27;晕&amp;#x27;,&amp;#x27;衰&amp;#x27;,&amp;#x27;骷髅&amp;#x27;,&amp;#x27;敲打&amp;#x27;,&amp;#x27;再见&amp;#x27;,&amp;#x27;擦汗&amp;#x27;,&amp;#x27;抠鼻&amp;#x27;,&amp;#x27;鼓掌&amp;#x27;,&amp;#x27;坏笑&amp;#x27;,&amp;#x27;右哼哼&amp;#x27;,&amp;#x27;鄙视&amp;#x27;,&amp;#x27;委屈&amp;#x27;,&amp;#x27;快哭了&amp;#x27;,&amp;#x27;阴险&amp;#x27;,&amp;#x27;亲亲&amp;#x27;,&amp;#x27;可怜&amp;#x27;,&amp;#x27;笑脸&amp;#x27;,&amp;#x27;生病&amp;#x27;,&amp;#x27;脸红&amp;#x27;,&amp;#x27;破涕为笑&amp;#x27;,&amp;#x27;恐惧&amp;#x27;,&amp;#x27;失望&amp;#x27;,&amp;#x27;无语&amp;#x27;,&amp;#x27;嘿哈&amp;#x27;,&amp;#x27;捂脸&amp;#x27;,&amp;#x27;奸笑&amp;#x27;,&amp;#x27;机智&amp;#x27;,&amp;#x27;皱眉&amp;#x27;,&amp;#x27;耶&amp;#x27;,&amp;#x27;吃瓜&amp;#x27;,&amp;#x27;加油&amp;#x27;,&amp;#x27;汗&amp;#x27;,&amp;#x27;天啊&amp;#x27;,&amp;#x27;Emm&amp;#x27;,&amp;#x27;社会社会&amp;#x27;,&amp;#x27;旺柴&amp;#x27;,&amp;#x27;好的&amp;#x27;,&amp;#x27;打脸&amp;#x27;,&amp;#x27;哇&amp;#x27;,&amp;#x27;翻白眼&amp;#x27;,&amp;#x27;666&amp;#x27;,&amp;#x27;让我看看&amp;#x27;,&amp;#x27;叹气&amp;#x27;,&amp;#x27;苦涩&amp;#x27;,&amp;#x27;裂开&amp;#x27;,&amp;#x27;嘴唇&amp;#x27;,&amp;#x27;爱心&amp;#x27;,&amp;#x27;心碎&amp;#x27;,&amp;#x27;拥抱&amp;#x27;,&amp;#x27;强&amp;#x27;,&amp;#x27;弱&amp;#x27;,&amp;#x27;握手&amp;#x27;,&amp;#x27;胜利&amp;#x27;,&amp;#x27;抱拳&amp;#x27;,&amp;#x27;勾引&amp;#x27;,&amp;#x27;拳头&amp;#x27;,&amp;#x27;OK&amp;#x27;,&amp;#x27;合十&amp;#x27;,&amp;#x27;啤酒&amp;#x27;,&amp;#x27;咖啡&amp;#x27;,&amp;#x27;蛋糕&amp;#x27;,&amp;#x27;玫瑰&amp;#x27;,&amp;#x27;凋谢&amp;#x27;,&amp;#x27;菜刀&amp;#x27;,&amp;#x27;炸弹&amp;#x27;,&amp;#x27;便便&amp;#x27;,&amp;#x27;月亮&amp;#x27;,&amp;#x27;太阳&amp;#x27;,&amp;#x27;庆祝&amp;#x27;,&amp;#x27;礼物&amp;#x27;,&amp;#x27;红包&amp;#x27;,&amp;#x27;發&amp;#x27;,&amp;#x27;福&amp;#x27;,&amp;#x27;烟花&amp;#x27;,&amp;#x27;爆竹&amp;#x27;,&amp;#x27;猪头&amp;#x27;,&amp;#x27;跳跳&amp;#x27;,&amp;#x27;发抖&amp;#x27;,&amp;#x27;转圈&amp;#x27;])
    
# 引入 imageio 读取爱心图片文件
from imageio.v2 import imread
# 读取爱心图片文件并赋值给 background 变量
background = imread(&amp;#x27;heart.png&amp;#x27;)
    
wc = wordcloud.WordCloud(
    font_path=&amp;quot;SIMSUN.ttf&amp;quot;,
    width=1000,
    height=1000,
    # 词云背景颜色
    background_color=&amp;quot;skyblue&amp;quot;,
    max_words=200,
    # 配置停止词参数
    stopwords=stopwords,
    # 配置爱心图片遮罩
    mask = background)
    
wc.generate(text)
wc.to_file(&amp;quot;resultHeart.png&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;确认 heart.png 和 Python 脚本在同一目录下之后，运行 Python 脚本，即可在目录下看到生成的 resultHeart.png 爱心词云图片。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/79bde63602d86e03d40833361490ff9e.png" src="https://cdn.sspai.com/2023/08/31/79bde63602d86e03d40833361490ff9e.png"/&gt;&lt;/figure&gt;&lt;h3&gt;背景颜色&lt;/h3&gt;&lt;p&gt;自定义完了形状，为了让这张图片更加贴合主题，还可以再给它换一个背景颜色。单独摘出词云背景颜色的定义参数来看，只需要传入对应颜色名字即可修改背景颜色。除此之外还可以传入六位十六进制的 RGB 值，通过 hex code 直接定义颜色，用这种方法可以定义任意一种颜色。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;    # 词云背景颜色
    background_color=&amp;quot;skyblue&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以中国传统色为例，找到一个喜欢颜色，在颜色名字下方就有对应颜色的 hex code。以下图中的「石蕊红」为例，它的 hex code 是 &lt;code&gt;#f0c9cf&lt;/code&gt;。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/4521843dd18039d2e1a1cea7c70ed5f1.png" src="https://cdn.sspai.com/2023/08/31/4521843dd18039d2e1a1cea7c70ed5f1.png"/&gt;&lt;/figure&gt;&lt;p&gt;用 &lt;code&gt;#f0c9cf&lt;/code&gt; 替换原来代码中的 &lt;code&gt;skyblue&lt;/code&gt;，就可以替换背景颜色了，效果图如下。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/aef8304f23afebc3ff4a1672cb5db9d7.png" src="https://cdn.sspai.com/2023/08/31/aef8304f23afebc3ff4a1672cb5db9d7.png"/&gt;&lt;/figure&gt;&lt;h2&gt;表情数量统计&lt;/h2&gt;&lt;h3&gt;表情字典获取&lt;/h3&gt;&lt;p&gt;关键词出现频率分析完了，再对刚才忽略掉的表情进行专门统计。在上一小节的操作中，已经获取到了所有的表情定义，但是还不能直接拿来使用。重新放一下刚才上面这张配图，注意看它的表情是放在方括号里的。所以为了准确统计到每个表情数量，需要对原始表情文本重新加工一下。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/0100a6654d8dcf796f9d21ccaa2e0f45.png" src="https://cdn.sspai.com/2023/08/31/0100a6654d8dcf796f9d21ccaa2e0f45.png"/&gt;&lt;/figure&gt;&lt;p&gt;此处依旧使用 sed 来处理一下表情数据，把它们变成带方括号的元素形式，方便接下来在 Python 中统计。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;pbpaste|sed &amp;quot;s|\[|&amp;#x27;\[|g ; s|\]|\]&amp;#x27;,|g&amp;quot;
&amp;#x27;[微笑]&amp;#x27;,&amp;#x27;[撇嘴]&amp;#x27;,&amp;#x27;[色]&amp;#x27;,&amp;#x27;[发呆]&amp;#x27;,&amp;#x27;[得意]&amp;#x27;,&amp;#x27;[流泪]&amp;#x27;,&amp;#x27;[害羞]&amp;#x27;,&amp;#x27;[闭嘴]&amp;#x27;,&amp;#x27;[睡]&amp;#x27;,&amp;#x27;[大哭]&amp;#x27;,&amp;#x27;[尴尬]&amp;#x27;,&amp;#x27;[发怒]&amp;#x27;,&amp;#x27;[调皮]&amp;#x27;,&amp;#x27;[呲牙]&amp;#x27;,&amp;#x27;[惊讶]&amp;#x27;,&amp;#x27;[难过]&amp;#x27;,&amp;#x27;[囧]&amp;#x27;,&amp;#x27;[抓狂]&amp;#x27;,&amp;#x27;[吐]&amp;#x27;,&amp;#x27;[偷笑]&amp;#x27;,&amp;#x27;[愉快]&amp;#x27;,&amp;#x27;[白眼]&amp;#x27;,&amp;#x27;[傲慢]&amp;#x27;,&amp;#x27;[困]&amp;#x27;,&amp;#x27;[惊恐]&amp;#x27;,&amp;#x27;[憨笑]&amp;#x27;,&amp;#x27;[悠闲]&amp;#x27;,&amp;#x27;[咒骂]&amp;#x27;,&amp;#x27;[疑问]&amp;#x27;,&amp;#x27;[嘘]&amp;#x27;,&amp;#x27;[晕]&amp;#x27;,&amp;#x27;[衰]&amp;#x27;,&amp;#x27;[骷髅]&amp;#x27;,&amp;#x27;[敲打]&amp;#x27;,&amp;#x27;[再见]&amp;#x27;,&amp;#x27;[擦汗]&amp;#x27;,&amp;#x27;[抠鼻]&amp;#x27;,&amp;#x27;[鼓掌]&amp;#x27;,&amp;#x27;[坏笑]&amp;#x27;,&amp;#x27;[右哼哼]&amp;#x27;,&amp;#x27;[鄙视]&amp;#x27;,&amp;#x27;[委屈]&amp;#x27;,&amp;#x27;[快哭了]&amp;#x27;,&amp;#x27;[阴险]&amp;#x27;,&amp;#x27;[亲亲]&amp;#x27;,&amp;#x27;[可怜]&amp;#x27;,&amp;#x27;[笑脸]&amp;#x27;,&amp;#x27;[生病]&amp;#x27;,&amp;#x27;[脸红]&amp;#x27;,&amp;#x27;[破涕为笑]&amp;#x27;,&amp;#x27;[恐惧]&amp;#x27;,&amp;#x27;[失望]&amp;#x27;,&amp;#x27;[无语]&amp;#x27;,&amp;#x27;[嘿哈]&amp;#x27;,&amp;#x27;[捂脸]&amp;#x27;,&amp;#x27;[奸笑]&amp;#x27;,&amp;#x27;[机智]&amp;#x27;,&amp;#x27;[皱眉]&amp;#x27;,&amp;#x27;[耶]&amp;#x27;,&amp;#x27;[吃瓜]&amp;#x27;,&amp;#x27;[加油]&amp;#x27;,&amp;#x27;[汗]&amp;#x27;,&amp;#x27;[天啊]&amp;#x27;,&amp;#x27;[Emm]&amp;#x27;,&amp;#x27;[社会社会]&amp;#x27;,&amp;#x27;[旺柴]&amp;#x27;,&amp;#x27;[好的]&amp;#x27;,&amp;#x27;[打脸]&amp;#x27;,&amp;#x27;[哇]&amp;#x27;,&amp;#x27;[翻白眼]&amp;#x27;,&amp;#x27;[666]&amp;#x27;,&amp;#x27;[让我看看]&amp;#x27;,&amp;#x27;[叹气]&amp;#x27;,&amp;#x27;[苦涩]&amp;#x27;,&amp;#x27;[裂开]&amp;#x27;,&amp;#x27;[嘴唇]&amp;#x27;,&amp;#x27;[爱心]&amp;#x27;,&amp;#x27;[心碎]&amp;#x27;,&amp;#x27;[拥抱]&amp;#x27;,&amp;#x27;[强]&amp;#x27;,&amp;#x27;[弱]&amp;#x27;,&amp;#x27;[握手]&amp;#x27;,&amp;#x27;[胜利]&amp;#x27;,&amp;#x27;[抱拳]&amp;#x27;,&amp;#x27;[勾引]&amp;#x27;,&amp;#x27;[拳头]&amp;#x27;,&amp;#x27;[OK]&amp;#x27;,&amp;#x27;[合十]&amp;#x27;,&amp;#x27;[啤酒]&amp;#x27;,&amp;#x27;[咖啡]&amp;#x27;,&amp;#x27;[蛋糕]&amp;#x27;,&amp;#x27;[玫瑰]&amp;#x27;,&amp;#x27;[凋谢]&amp;#x27;,&amp;#x27;[菜刀]&amp;#x27;,&amp;#x27;[炸弹]&amp;#x27;,&amp;#x27;[便便]&amp;#x27;,&amp;#x27;[月亮]&amp;#x27;,&amp;#x27;[太阳]&amp;#x27;,&amp;#x27;[庆祝]&amp;#x27;,&amp;#x27;[礼物]&amp;#x27;,&amp;#x27;[红包]&amp;#x27;,&amp;#x27;[發]&amp;#x27;,&amp;#x27;[福]&amp;#x27;,&amp;#x27;[烟花]&amp;#x27;,&amp;#x27;[爆竹]&amp;#x27;,&amp;#x27;[猪头]&amp;#x27;,&amp;#x27;[跳跳]&amp;#x27;,&amp;#x27;[发抖]&amp;#x27;,&amp;#x27;[转圈]&amp;#x27;
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/c632145d893cbbed8027f79b5d1bc079.png" src="https://cdn.sspai.com/2023/08/31/c632145d893cbbed8027f79b5d1bc079.png"/&gt;&lt;/figure&gt;&lt;p&gt;将上面处理好的表情元素定义为 stickers 列表，再通过字典推导式创一个含有 stickers 中元素，但是 value 全部为 0 的 stickers_dict 字典。接下来只要遍历聊天记录，遇到一个表情就让对应表情的计数 +1 即可。由于微信默认的表情里不包含 Emoji 表情，所以在代码要使用 stickers.extend() 函数去扩展 stickers 表情列表，将聊天过程中常用的 Emoji 表情都添加进去。&lt;strong&gt;此处读者甚至还可以根据自己的需求，添加想要统计的单词数量进去。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;此处为了输出这个表情字典，使用了 &lt;code&gt;json.dumps()&lt;/code&gt; 方法，指定了两个参数。&lt;code&gt;ensure_ascii&lt;/code&gt; 参数是为了能够让中文能够正常显示出来，如果不指定这个参数，看到的会是文字对应的 Unicode 码。&lt;code&gt;indent&lt;/code&gt; 设置了四个空格长度的缩进，方便阅读查看。如果读者在读完本篇文章之后，想要自行编写其他数据分析脚本，也可以使用这个方法去查看输出是否符合预期。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import json
    
stickers = [&amp;#x27;[微笑]&amp;#x27;,&amp;#x27;[撇嘴]&amp;#x27;,&amp;#x27;[色]&amp;#x27;,&amp;#x27;[发呆]&amp;#x27;,&amp;#x27;[得意]&amp;#x27;,&amp;#x27;[流泪]&amp;#x27;,&amp;#x27;[害羞]&amp;#x27;,&amp;#x27;[闭嘴]&amp;#x27;,&amp;#x27;[睡]&amp;#x27;,&amp;#x27;[大哭]&amp;#x27;,&amp;#x27;[尴尬]&amp;#x27;,&amp;#x27;[发怒]&amp;#x27;,&amp;#x27;[调皮]&amp;#x27;,&amp;#x27;[呲牙]&amp;#x27;,&amp;#x27;[惊讶]&amp;#x27;,&amp;#x27;[难过]&amp;#x27;,&amp;#x27;[囧]&amp;#x27;,&amp;#x27;[抓狂]&amp;#x27;,&amp;#x27;[吐]&amp;#x27;,&amp;#x27;[偷笑]&amp;#x27;,&amp;#x27;[愉快]&amp;#x27;,&amp;#x27;[白眼]&amp;#x27;,&amp;#x27;[傲慢]&amp;#x27;,&amp;#x27;[困]&amp;#x27;,&amp;#x27;[惊恐]&amp;#x27;,&amp;#x27;[憨笑]&amp;#x27;,&amp;#x27;[悠闲]&amp;#x27;,&amp;#x27;[咒骂]&amp;#x27;,&amp;#x27;[疑问]&amp;#x27;,&amp;#x27;[嘘]&amp;#x27;,&amp;#x27;[晕]&amp;#x27;,&amp;#x27;[衰]&amp;#x27;,&amp;#x27;[骷髅]&amp;#x27;,&amp;#x27;[敲打]&amp;#x27;,&amp;#x27;[再见]&amp;#x27;,&amp;#x27;[擦汗]&amp;#x27;,&amp;#x27;[抠鼻]&amp;#x27;,&amp;#x27;[鼓掌]&amp;#x27;,&amp;#x27;[坏笑]&amp;#x27;,&amp;#x27;[右哼哼]&amp;#x27;,&amp;#x27;[鄙视]&amp;#x27;,&amp;#x27;[委屈]&amp;#x27;,&amp;#x27;[快哭了]&amp;#x27;,&amp;#x27;[阴险]&amp;#x27;,&amp;#x27;[亲亲]&amp;#x27;,&amp;#x27;[可怜]&amp;#x27;,&amp;#x27;[笑脸]&amp;#x27;,&amp;#x27;[生病]&amp;#x27;,&amp;#x27;[脸红]&amp;#x27;,&amp;#x27;[破涕为笑]&amp;#x27;,&amp;#x27;[恐惧]&amp;#x27;,&amp;#x27;[失望]&amp;#x27;,&amp;#x27;[无语]&amp;#x27;,&amp;#x27;[嘿哈]&amp;#x27;,&amp;#x27;[捂脸]&amp;#x27;,&amp;#x27;[奸笑]&amp;#x27;,&amp;#x27;[机智]&amp;#x27;,&amp;#x27;[皱眉]&amp;#x27;,&amp;#x27;[耶]&amp;#x27;,&amp;#x27;[吃瓜]&amp;#x27;,&amp;#x27;[加油]&amp;#x27;,&amp;#x27;[汗]&amp;#x27;,&amp;#x27;[天啊]&amp;#x27;,&amp;#x27;[Emm]&amp;#x27;,&amp;#x27;[社会社会]&amp;#x27;,&amp;#x27;[旺柴]&amp;#x27;,&amp;#x27;[好的]&amp;#x27;,&amp;#x27;[打脸]&amp;#x27;,&amp;#x27;[哇]&amp;#x27;,&amp;#x27;[翻白眼]&amp;#x27;,&amp;#x27;[666]&amp;#x27;,&amp;#x27;[让我看看]&amp;#x27;,&amp;#x27;[叹气]&amp;#x27;,&amp;#x27;[苦涩]&amp;#x27;,&amp;#x27;[裂开]&amp;#x27;,&amp;#x27;[嘴唇]&amp;#x27;,&amp;#x27;[爱心]&amp;#x27;,&amp;#x27;[心碎]&amp;#x27;,&amp;#x27;[拥抱]&amp;#x27;,&amp;#x27;[强]&amp;#x27;,&amp;#x27;[弱]&amp;#x27;,&amp;#x27;[握手]&amp;#x27;,&amp;#x27;[胜利]&amp;#x27;,&amp;#x27;[抱拳]&amp;#x27;,&amp;#x27;[勾引]&amp;#x27;,&amp;#x27;[拳头]&amp;#x27;,&amp;#x27;[OK]&amp;#x27;,&amp;#x27;[合十]&amp;#x27;,&amp;#x27;[啤酒]&amp;#x27;,&amp;#x27;[咖啡]&amp;#x27;,&amp;#x27;[蛋糕]&amp;#x27;,&amp;#x27;[玫瑰]&amp;#x27;,&amp;#x27;[凋谢]&amp;#x27;,&amp;#x27;[菜刀]&amp;#x27;,&amp;#x27;[炸弹]&amp;#x27;,&amp;#x27;[便便]&amp;#x27;,&amp;#x27;[月亮]&amp;#x27;,&amp;#x27;[太阳]&amp;#x27;,&amp;#x27;[庆祝]&amp;#x27;,&amp;#x27;[礼物]&amp;#x27;,&amp;#x27;[红包]&amp;#x27;,&amp;#x27;[發]&amp;#x27;,&amp;#x27;[福]&amp;#x27;,&amp;#x27;[烟花]&amp;#x27;,&amp;#x27;[爆竹]&amp;#x27;,&amp;#x27;[猪头]&amp;#x27;,&amp;#x27;[跳跳]&amp;#x27;,&amp;#x27;[发抖]&amp;#x27;,&amp;#x27;[转圈]&amp;#x27;]
# 除了微信自带的表情，添加一些常用的 Emoji 表情，除此之外还可以添加一些想要统计的单词
stickers.extend([&amp;#x27;😂&amp;#x27;,&amp;#x27;🤣&amp;#x27;,&amp;#x27;🥰&amp;#x27;,&amp;#x27;😅&amp;#x27;,&amp;#x27;🥹&amp;#x27;,&amp;#x27;😘&amp;#x27;,&amp;#x27;🤩&amp;#x27;,&amp;#x27;🥺&amp;#x27;,&amp;#x27;😓&amp;#x27;,&amp;#x27;🙄&amp;#x27;,&amp;#x27;🤡&amp;#x27;, &amp;#x27;哈哈&amp;#x27;]) 
stickers_dict = {stickers: 0 for stickers in stickers}
    
print(json.dumps(stickers_dict, ensure_ascii=False, indent=4))
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/c34a3fe74980c9ec16cab359c8f3a161.png" src="https://cdn.sspai.com/2023/08/31/c34a3fe74980c9ec16cab359c8f3a161.png"/&gt;&lt;/figure&gt;&lt;h3&gt;遍历 JSON 统计表情出现次数&lt;/h3&gt;&lt;p&gt;读取数据，for 循环遍历数据，和上一个小节几乎一样的操作。唯一值得一提的就是 &lt;code&gt;count()&lt;/code&gt; 方法。&lt;code&gt;count()&lt;/code&gt; 方法可以统计某个字符串里包含了多少个指定字符。举个例子来说 &lt;code&gt;print(&amp;quot;11112345&amp;quot;.count(&amp;quot;1&amp;quot;))&lt;/code&gt; 的结果就是 4，因为 1 在字符串里出现了四次。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;data = open(&amp;#x27;/Users/james/Desktop/WeChatDB/db8/Chat_c361fce587751cedffb3e34d40fddb6b.json&amp;#x27;)
data = data.read()
data = json.loads(data)
    
# 循环所有的消息记录
for item in data:
    # 循环表情字典里的所有键
    for word in stickers_dict.keys():
        # 使用文本的 count 函数，计算里面包含了多少个 word 变量，然后加回去
        stickers_dict[word] += item[&amp;#x27;msgContent&amp;#x27;].count(word)
print(json.dumps(stickers_dict, ensure_ascii=False, indent=4))
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用这两层 for 循环处理完之后，就可以得到每个表情都发了多少次了。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/9d1fcea7d75967071ddda8a66aad6e6a.png" src="https://cdn.sspai.com/2023/08/31/9d1fcea7d75967071ddda8a66aad6e6a.png"/&gt;&lt;/figure&gt;&lt;p&gt;但是同时也发现了一些不足之处，有一部分表情从来都没发过，它们的计数是 0，没有统计意义需要直接剔除掉。只需要一行代码即可实现：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 剔除计数为 0 的表情
data = {key: value for key, value in stickers_dict.items() if value != 0}
    
print(json.dumps(data, ensure_ascii=False, indent=4))
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/f885963e68fd815bc1e3d49e5bcc5cdb.png" src="https://cdn.sspai.com/2023/08/31/f885963e68fd815bc1e3d49e5bcc5cdb.png"/&gt;&lt;/figure&gt;&lt;h3&gt;引入 pandas 生成 Excel&lt;/h3&gt;&lt;p&gt;经过上面的表情数量统计和数据清洗，现在已经得到了每个表情包都发了多少次的统计数量。现在只需要引入 pandas 将清洗干净的数据生成 Excel，代码层面的工作就大功告成了。&lt;/p&gt;&lt;p&gt;接下来这部分 pandas 的代码都是 ChatGPT 实现的，如果读者有自己的个性化筛选或者排序需求，也可以试试让 ChatGPT 实现。对于 pandas 这种有固定语法且资料丰富的开源库来说，使用 ChatGPT 来生成对应代码的效率和准确性还是比较高的。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import pandas as pd
# 使用 DataFrame.from_dict() 将字典转换为 DataFrame
df = pd.DataFrame.from_dict(data, orient=&amp;#x27;index&amp;#x27;, columns=[&amp;#x27;数量&amp;#x27;])
    
# 添加表情列
df[&amp;#x27;表情&amp;#x27;] = df.index
    
# 按数量降序排序
df = df.sort_values(by=&amp;#x27;数量&amp;#x27;, ascending=False)
    
# 重置索引
df = df[[&amp;#x27;表情&amp;#x27;, &amp;#x27;数量&amp;#x27;]]
df = df.reset_index(drop=True)
    
# 保存 DataFrame 到 Excel 文件
df.to_excel(&amp;#x27;~/Desktop/emoji_data.xlsx&amp;#x27;, index=False)
    
print(&amp;quot;数据已保存到 ~/Desktop/emoji_data.xlsx 文件中。&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;Number 生成横向柱状图&lt;/h3&gt;&lt;p&gt;打开桌面上的 emoji_data.xlsx 选中所有表情数据，切换到菜单栏上的插入菜单，插入二位横向条形图即可。但是 Excel 出来的图片效果达不到预期，笔者把数据复制了一份粘贴到了 Numbers 去生成横向条形图。如果读者是 Excel 高手，也可以在 Excel 里根据自己的喜欢进行处理。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/d6f877d97832481a3d4919b2b7bfe1cf.png" src="https://cdn.sspai.com/2023/08/31/d6f877d97832481a3d4919b2b7bfe1cf.png"/&gt;&lt;/figure&gt;&lt;p&gt;将数据复制到 Numbers 里，生成二维条形图，根据自己的喜欢修改一下颜色，添加必要的文字说明。此处为了做出的图表便于展示，只选择了前 30 条数据制作图表。&lt;/p&gt;&lt;p&gt;选中二维条形图，右键点击「拷贝」将二维条形图拷贝到系统剪切板。然后就可以将它粘贴到任意位置，例如粘贴到微信聊天发送框，或者打开预览 App 按下 command+N 从剪切板读取图片，然后将这张图片保存下来。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/060344be59e2c8d39f502c227cc8e2f2.png" src="https://cdn.sspai.com/2023/08/31/060344be59e2c8d39f502c227cc8e2f2.png"/&gt;&lt;/figure&gt;&lt;p&gt;刚在上面的步骤中，为了演示添加指定单词统计的功能，将「哈哈」这个单词添加到了统计数据里。如下图所示，「哈哈」这个单词加起来的数量，已经比前三个表情的总和还多了，说明这个群聊气氛还是比较欢乐的。&lt;/p&gt;&lt;p&gt;再看到旺柴表情包，在表情的统计数量里也是一骑绝尘，断崖式地领先于其他各个表情包。特地算了一下，旺柴表情包在所有表情包里发送占比 33% 😂&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/3ba21de274aca3bc3da790ccf11d6ffe.png" src="https://cdn.sspai.com/2023/08/31/3ba21de274aca3bc3da790ccf11d6ffe.png"/&gt;&lt;/figure&gt;&lt;h3&gt;排版设计优化&lt;/h3&gt;&lt;p&gt;在研究微信聊天记录数据分析的过程中，在少数派上看到 &lt;a href="https://sspai.com/post/58498" target="_blank"&gt;无需编程：制作 iMessage 年度数据报告&lt;/a&gt; 这篇文章，其中的几张图效果做得很不错。如果读有余力，可以参考这样的排版设计来设计最终的效果图。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/477a6c2b8bc9d66399f15761380a7226.png" src="https://cdn.sspai.com/2023/08/31/477a6c2b8bc9d66399f15761380a7226.png"/&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/5d1d978a3ed8909bf30d487fa42c1bf7.png" src="https://cdn.sspai.com/2023/08/31/5d1d978a3ed8909bf30d487fa42c1bf7.png"/&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/db9e559641a6b43635873bf33116d530.png" src="https://cdn.sspai.com/2023/08/31/db9e559641a6b43635873bf33116d530.png"/&gt;&lt;/figure&gt;&lt;h2&gt;时间分段聊天频率分析&lt;/h2&gt;&lt;h3&gt;前置知识&lt;/h3&gt;&lt;p&gt;关键词出现频率分析完了，接下来就可以对单位时间段内聊天频率进行分析了。在前置知识中已经介绍过了，消息的发送时间对应的是 msgCreateTime，它使用 Unix Time 表示。对于部分不太了解计算机知识的读者来说，此处有必要简单介绍一下什么是 Unix Time，简单说它就是代表了从 1970–01–01 08:00:00 到目前为止经过的秒数。&lt;/p&gt;&lt;p&gt;如果想要更直观地体会一下如何从 Unix Time 转换到方便阅读的日期文本，可用使用命令 &lt;code&gt;brew install coreutils&lt;/code&gt; 安装 GNU 核心工具包，然后就可以使用 gdate 命令来转换 Unix Time 了。&lt;/p&gt;&lt;p&gt;如下图所示 &lt;code&gt;@&lt;/code&gt; 后面跟上秒数即可看到转换之后的结果。使用&lt;code&gt;gdate +%s&lt;/code&gt; 也可以获取当前的 Unix Time，然后再使用 &lt;code&gt;gdate -d ``@1692789201&lt;/code&gt; 同样可以将时间转换回来。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/dd23710f8cf3272246c659695c80d67e.png" src="https://cdn.sspai.com/2023/08/31/dd23710f8cf3272246c659695c80d67e.png"/&gt;&lt;/figure&gt;&lt;h3&gt;统计时间块消息数量&lt;/h3&gt;&lt;p&gt;有了刚才制作词云和表情数量统计的经验，就可以照葫芦画瓢，写出获取所有消息发送时间的代码了。读取 JSON 文件，使用 &lt;code&gt;json.loads()&lt;/code&gt; 加载为 Python 的 JSON 对象。然后遍历每一条记录的 &lt;code&gt;msgCreateTime&lt;/code&gt; 打印出来即可。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!/usr/bin/env python3
import os
import json
import datetime
    
data = open(&amp;#x27;/Users/james/Desktop/WeChatDB/db2/Chat_3c0825dcf3b568028bcf00ee45656d60.json&amp;#x27;).read()
data = json.loads(data)
    
dict = {}
for item in data:
    # 获取消息发送时间
    unixtime = (item[&amp;#x27;msgCreateTime&amp;#x27;])
    print(unixtime)
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/b4788abee2d8ec2e38ebf8bd0cdfcc66.png" src="https://cdn.sspai.com/2023/08/31/b4788abee2d8ec2e38ebf8bd0cdfcc66.png"/&gt;&lt;/figure&gt;&lt;p&gt;获取到时间之后，还需要对它进行格式化处理，Python 内置了日期时间处理模块 datetime，可以直接调用来解析 Unix Time，可以看到现在打印出来的 value 变量已经是可阅读的「小时:分钟」格式了。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/5e5d4c7307cf35b86eb6ebfaab5dac92.png" src="https://cdn.sspai.com/2023/08/31/5e5d4c7307cf35b86eb6ebfaab5dac92.png"/&gt;&lt;/figure&gt;&lt;p&gt;接下来就是最重要的一个步骤：时刻点分区，把某些时刻分类到一个区间里。例如把 08:0008:29 这个时间段里发送的消息都算到 08:00 里面，把 08:3008:59 都算到 08:30 里面。&lt;/p&gt;&lt;p&gt;可以看到时间分区之后，每个时间段里一共发送了多少条消息。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/6929f5e7a57f2eef81f3bc3a3280767d.png" src="https://cdn.sspai.com/2023/08/31/6929f5e7a57f2eef81f3bc3a3280767d.png"/&gt;&lt;/figure&gt;&lt;p&gt;但是新的问题又来了，时间是分区好了，但是目前的分区是乱序的，需要再次处理一下，把它按照顺序整理成从 0000 到 2330 的格式。使用 &lt;code&gt;sorted()&lt;/code&gt; 方法对 &lt;code&gt;dict.items()&lt;/code&gt; 进行排序，使用 lambda 表达式指定使用第一个元素进行排序。这样处理之后在右侧就可以看到顺序的「时刻-消息数量」关系。&lt;/p&gt;&lt;figure&gt;&lt;img alt="" data-original="https://cdn.sspai.com/2023/08/31/article/2144ac9401bd527269bb748456500cc6" src="https://cdn.sspai.com/2023/08/31/article/2144ac9401bd527269bb748456500cc6"/&gt;&lt;/figure&gt;&lt;h3&gt;导入 maplotlib 生成图片&lt;/h3&gt;&lt;p&gt;经过上面的数据清洗、时刻分区和时刻排序之后，现在已经得到了「时刻-消息数量」关系字典，对于这样的 x-y 数据，使用 matplotlib 来生成二维柱状图是不错的选择。但是在此之前，还是和 wordcloud 一样的操作，需要配置一下中文字体，使得图片上能够正常显示中文。&lt;/p&gt;&lt;p&gt;此处配置中文字体的方式与 wordcloud 有所不同，matplotlib 有专门用于管理字体的程序。在「环境配置」小节中已经安装过了，只要初始化一下就可以使用，命令如下：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 初始化 mplfonts
mplfonts init
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果稍后发现依旧无法正常显示中文，还有另一种解决方式，通过 mplfonts 导入本地的其他中文字体。例如在项目目录下有一个 SIMSUN.ttf 字体文件，使用如下命令也可以添加这个字体。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 导入本地字体
mplfonts install --update SIMSUN.ttf
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;只需要以上简单的一条命令，即可完成中文字体的配置。maplotlib 这一部分的代码比较简单，直接上代码来看：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import matplotlib.pyplot as plt
    
# 导入字体管理模块
from mplfonts import use_font
#指定中文字体（这里的中文字体根据实际情况修改）
#use_font(&amp;#x27;SIMSUN&amp;#x27;)
use_font(&amp;#x27;Noto Serif CJK SC&amp;#x27;)
    
axis_x=[i[:2]+&amp;#x27;\n点\n&amp;#x27;+i[2:] for i in result]
axis_y=[result[i] for i in result]
    
plt.bar(axis_x,axis_y)
plt.xlabel(&amp;quot;时间段&amp;quot;)
plt.ylabel(&amp;quot;消息数量&amp;quot;)
plt.title(&amp;quot;蓝翼运动大众群&amp;quot;)
plt.show()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;运行 Python 程序即可生成时间段-消息数量的柱状图，点击下方最后一个保存按钮，即可将生成的图片保存到磁盘。&lt;/p&gt;&lt;p&gt;通过这张图可以看出，在中午饭点和晚饭之后这两个时间段里，大家的聊天活跃度是最高的。其次就是 22:0022:30 的时间段。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/4b4088c806022d2bb51a3504bc362960.png" src="https://cdn.sspai.com/2023/08/31/4b4088c806022d2bb51a3504bc362960.png"/&gt;&lt;/figure&gt;&lt;h2&gt;聊天频率热图&lt;/h2&gt;&lt;h3&gt;前置知识&lt;/h3&gt;&lt;p&gt;有了上面日期解析和字体设置的知识储备之后，就可以试着来挑战一下热力图了。对于数据分析不太了解的读者需要先直观地认识一下什么是热力图，&lt;a href="https://sspai.com/post/58498" target="_blank"&gt;无需编程：制作 iMessage 年度数据报告&lt;/a&gt; 这篇文章里有如下这样一张配图，数字越大颜色越深。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/0a5ac9e7c832b33d43c844f56d38480f.png" src="https://cdn.sspai.com/2023/08/31/0a5ac9e7c832b33d43c844f56d38480f.png"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;a href="http://tuzhidian.com/chart?id=5c56e4284a8c5e048189c6fe" target="_blank"&gt;热力图 - Heatmap&lt;/a&gt; 这篇文章里给热力图做了一个比较好的定义：热力图，是一种通过对色块着色来显示数据的统计图表。 绘图时，需指定颜色映射的规则。 例如，较大的值由较深的颜色表示，较小的值由较浅的颜色表示；较大的值由偏暖的颜色表示，较小的值由较冷的颜色表示。&lt;/p&gt;&lt;h3&gt;快速上手体验&lt;/h3&gt;&lt;p&gt;这一小节的内容就是带领读者，通过 Python 处理微信聊天记录，生成好友或者群聊的热力图。为了让读者有一个直观的代码体验，下面是一个简单的生成热力的代码，如果上面的环境配置正确，运行下面这段代码就可以看到对应的热力图效果。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!/usr/bin/env python3
import numpy as np
import matplotlib.pyplot as plt
# 导入字体管理模块
from mplfonts import use_font
#指定中文字体（这里的中文字体根据实际情况修改）
use_font(&amp;#x27;SIMSUN&amp;#x27;)
    
x_labels = [&amp;quot;周一&amp;quot;, &amp;quot;周二&amp;quot;, &amp;quot;周三&amp;quot;, &amp;quot;周四&amp;quot;, &amp;quot;周五&amp;quot;, &amp;quot;周六&amp;quot;, &amp;quot;周日&amp;quot;]
y_labels = [202327, 202328, 202329, 202330]
values = np.array([
        [0, 0, 0, 0, 0, 38, 0],
        [7, 3, 0, 0, 28, 0, 31],
        [20, 0, 0, 16, 0, 0, 0],
        [0, 0, 78, 10, 7, 0, 0]
])
    
    
fig, axe = plt.subplots(figsize=(8, 3))
axe.set_xticks(np.arange(len(x_labels)))
axe.set_yticks(np.arange(len(y_labels)))
axe.set_xticklabels(x_labels)
axe.set_yticklabels(y_labels)
im = axe.imshow(values, cmap=plt.cm.Greens)
axe.figure.colorbar(im, ax=axe)
plt.show()
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/1441d73a42120dd97744e729ad605326.png" src="https://cdn.sspai.com/2023/08/31/1441d73a42120dd97744e729ad605326.png"/&gt;&lt;/figure&gt;&lt;p&gt;通过运行上面这个快速上手的例子不难看出，只要传入对应的 &lt;code&gt;y_labels&lt;/code&gt; 和 &lt;code&gt;values&lt;/code&gt; 就可以绘制出自己的热力图。那么现在的问题就转变成了如何处理聊天记录数据，将数据转为换为下面这种形式：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Y 轴：哪一年的哪一周，即年和周数&lt;/li&gt;&lt;li&gt;Value 数据：星期几发了多少条消息&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;使用 Python 处理数据&lt;/h3&gt;&lt;p&gt;直接上代码，读取文件，读取 &lt;code&gt;msgCreateTime&lt;/code&gt; 的值，使用 datetime 库去解析 Unix Time，这是上一个小节的内容，此处不再赘述。但是值得注意的是，此处作者将 Unix Time 解析成了 &lt;code&gt;%Y%W&lt;/code&gt; 的格式。%Y 是用四位数字表示的年份，&lt;code&gt;%W&lt;/code&gt; 是用两位数字表示的周数，例如当前的写稿日期 2023 年 8 月 23 日，是今年的第 35 周，那就标记为 &lt;code&gt;202335&lt;/code&gt;。&lt;/p&gt;&lt;p&gt;在 &lt;code&gt;week&lt;/code&gt; 变量的后面加上了一个数字 1，这是因为 datetime 库里第一周是用 00 表示，此处加一让它变为 01 更加符合大众的计数习惯。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!/usr/bin/env python3
import os
import json
import datetime
    
data = open(&amp;#x27;/Users/james/Desktop/WeChatDB/db2/Chat_55ce213c2ad742d8ea91bf2c5ee282fb.json&amp;#x27;).read()
data = json.loads(data)
    
statistics_dict = {}
for item in data:
        unixtime = item.get(&amp;#x27;msgCreateTime&amp;#x27;)
        if isinstance(unixtime, int):
                # key 格式：年份 周数
                week = int(datetime.datetime.fromtimestamp(unixtime).strftime(&amp;#x27;%Y%W&amp;#x27;)) + 1
                print(week)
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/a483c08054ae78bf4c48eacbe4db584a.png" src="https://cdn.sspai.com/2023/08/31/a483c08054ae78bf4c48eacbe4db584a.png"/&gt;&lt;/figure&gt;&lt;p&gt;现在 Y 轴年份周数数据有了，接下来就是把星期几发了多少条聊天记录统计进去，此处可以用数组来存储消息计数。看到上面代码的第 9 行，定义了一个 &lt;code&gt;statistics_dict&lt;/code&gt; 字典。稍后就是要把计数以 &lt;code&gt;key-value&lt;/code&gt; 的形式存储进去，只是此处的 &lt;code&gt;value&lt;/code&gt; 是一个数组。&lt;/p&gt;&lt;p&gt;下面就是一个数据结果的例子。拿 &lt;code&gt;202328&lt;/code&gt; 这条数据来看，后面跟着 &lt;code&gt;[0, 0, 0, 0, 0, 38, 0]&lt;/code&gt;这样一个数组，代表周一发了 7 条消息，周二 3 条，周三周四 0 条，周五 28 条，周六 0 条，周末 31 条。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;{
    202328: [7, 3, 0, 0, 28, 0, 31],
    202329: [20, 0, 0, 16, 0, 0, 0],
    202330: [0, 0, 78, 10, 7, 0, 0]
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;接下来就是代码实现，因为上面定义的 &lt;code&gt;statistics_dict&lt;/code&gt; 里没有任何 key，如何直接去 set 这个 value 会报错找不到这个 key。所以要先判断一下当前循环的「年份周数」key 是否存在，如何不存在就先进行初始化，然后再赋值。下面这段代码中从 6 到 9 行就是「年份周数」key 的初始化。初始化完成之后，将对应天数的索引位置数值 +1。在 datetime 库中使用 &lt;code&gt;%w&lt;/code&gt; 来表示解析的日期是星期几，从 0–6 分别代表从周一到周末。&lt;/p&gt;&lt;p&gt;最后打印一下 &lt;code&gt;statistics_dict&lt;/code&gt; 字典，可以看到已经正确收集到了所有的统计数据。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;for item in data:
        unixtime = item.get(&amp;#x27;msgCreateTime&amp;#x27;)
        if isinstance(unixtime, int):
                # key 格式：年份.周
                week = int(datetime.datetime.fromtimestamp(unixtime).strftime(&amp;#x27;%Y%W&amp;#x27;)) + 1
                # 判断「年份周数」key 是否存在
                if statistics_dict.get(week) is None:
                        # 如果不存在，初始化这周的数据为全 0
                        statistics_dict[week] = [0, 0, 0, 0, 0, 0, 0]
                # 对应的天数 +1
                day = int(datetime.datetime.fromtimestamp(unixtime).strftime(&amp;#x27;%w&amp;#x27;))
                statistics_dict[week][day] = statistics_dict[week][day] + 1
print(statistics_dict)
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/1b31cb2d6e5e4e97c1ede9b3dc9377ba.png" src="https://cdn.sspai.com/2023/08/31/1b31cb2d6e5e4e97c1ede9b3dc9377ba.png"/&gt;&lt;/figure&gt;&lt;h3&gt;排序整理&lt;/h3&gt;&lt;p&gt;但是心细的读者可能也注意到了，此处输出字典依旧是乱序的。需要像「时间分段聊天频率分析」小节里一样，对数据进行排序处理。可以看到在排序之后，数据变成了元组 (tuple) 的列表形式。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;sort = sorted(statistics_dict.items(), key=lambda x:x[0])
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/bb862e1345520999b4d9b8dc052d74aa.png" src="https://cdn.sspai.com/2023/08/31/bb862e1345520999b4d9b8dc052d74aa.png"/&gt;&lt;/figure&gt;&lt;p&gt;回想一下在「快速上手体验」小节的分析，只要整理出了 Y 轴 和 value 的数据，就可以生成所需要的热力图。那就趁热打铁，直接循环这个列表，把里面的所有数据都追加到 &lt;code&gt;y_labels&lt;/code&gt; 和 &lt;code&gt;values&lt;/code&gt; 里即可，成功就在眼前！&lt;/p&gt;&lt;p&gt;直接上代码，将元组里第 0 个元素追加到 &lt;code&gt;y_labels&lt;/code&gt;，第 1 个元素追加到 &lt;code&gt;values&lt;/code&gt;，可以看到最终的结果符合预期。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/431cbde500073e4dcde92ce4dad4d1c7.png" src="https://cdn.sspai.com/2023/08/31/431cbde500073e4dcde92ce4dad4d1c7.png"/&gt;&lt;/figure&gt;&lt;h3&gt;整合代码 matplotlib 代码出效果图&lt;/h3&gt;&lt;p&gt;有了上面处理好的数据，再整合 matplotlib 就可以绘图了。此处有一点需要注意，&lt;code&gt;figsize = (15, 15)&lt;/code&gt; 是设置画布的大小。如果读者的聊天记录时间跨度比较大，比如说一年两年甚至三年，就需要把后面的数字适当地增加，扩大画布的高度让图片能够正常显示。代码最后一行调用 &lt;code&gt;plt.savefig(&amp;#x27;history.png&amp;#x27;)&lt;/code&gt; 把图片保存到当前目录下，名为 history.png 的图片，所以这段代码一定要先保存再运行。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 导入 matplotlib 绘图
import numpy as np
import matplotlib.pyplot as plt
from mplfonts import use_font
use_font(&amp;#x27;SimHei&amp;#x27;)
    
x_labels = [&amp;quot;周一&amp;quot;, &amp;quot;周二&amp;quot;, &amp;quot;周三&amp;quot;, &amp;quot;周四&amp;quot;, &amp;quot;周五&amp;quot;, &amp;quot;周六&amp;quot;, &amp;quot;周日&amp;quot;]
    
fig, axe = plt.subplots(figsize = (15, 15))
axe.set_xticks(np.arange(len(x_labels)))
axe.set_yticks(np.arange(len(y_labels)))
axe.set_xticklabels(x_labels)
axe.set_yticklabels(y_labels)
im = axe.imshow(values, cmap=plt.cm.Greens)
# 是否开启参考刻度，如果不需要开启，注释下面这行代码
axe.figure.colorbar(im, ax=axe)
plt.savefig(&amp;#x27;history.png&amp;#x27;)
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/1f610dfaa786068323b7493cf7731203.png" src="https://cdn.sspai.com/2023/08/31/1f610dfaa786068323b7493cf7731203.png"/&gt;&lt;/figure&gt;&lt;h3&gt;自定义颜色&lt;/h3&gt;&lt;p&gt;觉得绿色这样的配置不好看，想要自定义格子颜色要如何操作呢？看到 matplotlib 部分的下面这行代码，cmap 就指定了图片使用什么样的配色方案。例如作者比较喜欢的另一个配色方案是 &lt;code&gt;Wistia_r&lt;/code&gt;，那么只要把 &lt;code&gt;Greens&lt;/code&gt; 这个单词换成 &lt;code&gt;Wistia_r&lt;/code&gt; 即可，前面的 &lt;code&gt;cmap=plt.cm.&lt;/code&gt; 不需要去修改，下面几张效果图是作者比较喜欢的配色方案的展示。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;im = axe.imshow(values, cmap=plt.cm.Greens)
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/f476615240d0712266948fd2589ede14.png" src="https://cdn.sspai.com/2023/08/31/f476615240d0712266948fd2589ede14.png"/&gt;&lt;/figure&gt;&lt;p&gt;那么如何获取所有的配置方案呢？直接代码循环遍历即可。如果觉得这样的配色方案不够直观，还需要一个个去尝试，还可以参考下面这幅配色方案总览图，快速找到心仪的配色方案。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import json
import matplotlib.pyplot as plt
    
print(json.dumps(plt.colormaps(), indent=4))
# [&amp;#x27;magma&amp;#x27;, &amp;#x27;inferno&amp;#x27;, &amp;#x27;plasma&amp;#x27;, &amp;#x27;viridis&amp;#x27;, &amp;#x27;cividis&amp;#x27;, &amp;#x27;twilight&amp;#x27;, &amp;#x27;twilight_shifted&amp;#x27;, &amp;#x27;turbo&amp;#x27;, &amp;#x27;Blues&amp;#x27;, &amp;#x27;BrBG&amp;#x27;, &amp;#x27;BuGn&amp;#x27;, &amp;#x27;BuPu&amp;#x27;, &amp;#x27;CMRmap&amp;#x27;, &amp;#x27;GnBu&amp;#x27;, &amp;#x27;Greens&amp;#x27;, &amp;#x27;Greys&amp;#x27;, &amp;#x27;OrRd&amp;#x27;, &amp;#x27;Oranges&amp;#x27;, &amp;#x27;PRGn&amp;#x27;, &amp;#x27;PiYG&amp;#x27;, &amp;#x27;PuBu&amp;#x27;, &amp;#x27;PuBuGn&amp;#x27;, &amp;#x27;PuOr&amp;#x27;, &amp;#x27;PuRd&amp;#x27;, &amp;#x27;Purples&amp;#x27;, &amp;#x27;RdBu&amp;#x27;, &amp;#x27;RdGy&amp;#x27;, &amp;#x27;RdPu&amp;#x27;, &amp;#x27;RdYlBu&amp;#x27;, &amp;#x27;RdYlGn&amp;#x27;, &amp;#x27;Reds&amp;#x27;, &amp;#x27;Spectral&amp;#x27;, &amp;#x27;Wistia&amp;#x27;, &amp;#x27;YlGn&amp;#x27;, &amp;#x27;YlGnBu&amp;#x27;, &amp;#x27;YlOrBr&amp;#x27;, &amp;#x27;YlOrRd&amp;#x27;, &amp;#x27;afmhot&amp;#x27;, &amp;#x27;autumn&amp;#x27;, &amp;#x27;binary&amp;#x27;, &amp;#x27;bone&amp;#x27;, &amp;#x27;brg&amp;#x27;, &amp;#x27;bwr&amp;#x27;, &amp;#x27;cool&amp;#x27;, &amp;#x27;coolwarm&amp;#x27;, &amp;#x27;copper&amp;#x27;, &amp;#x27;cubehelix&amp;#x27;, &amp;#x27;flag&amp;#x27;, &amp;#x27;gist_earth&amp;#x27;, &amp;#x27;gist_gray&amp;#x27;, &amp;#x27;gist_heat&amp;#x27;, &amp;#x27;gist_ncar&amp;#x27;, &amp;#x27;gist_rainbow&amp;#x27;, &amp;#x27;gist_stern&amp;#x27;, &amp;#x27;gist_yarg&amp;#x27;, &amp;#x27;gnuplot&amp;#x27;, &amp;#x27;gnuplot2&amp;#x27;, &amp;#x27;gray&amp;#x27;, &amp;#x27;hot&amp;#x27;, &amp;#x27;hsv&amp;#x27;, &amp;#x27;jet&amp;#x27;, &amp;#x27;nipy_spectral&amp;#x27;, &amp;#x27;ocean&amp;#x27;, &amp;#x27;pink&amp;#x27;, &amp;#x27;prism&amp;#x27;, &amp;#x27;rainbow&amp;#x27;, &amp;#x27;seismic&amp;#x27;, &amp;#x27;spring&amp;#x27;, &amp;#x27;summer&amp;#x27;, &amp;#x27;terrain&amp;#x27;, &amp;#x27;winter&amp;#x27;, &amp;#x27;Accent&amp;#x27;, &amp;#x27;Dark2&amp;#x27;, &amp;#x27;Paired&amp;#x27;, &amp;#x27;Pastel1&amp;#x27;, &amp;#x27;Pastel2&amp;#x27;, &amp;#x27;Set1&amp;#x27;, &amp;#x27;Set2&amp;#x27;, &amp;#x27;Set3&amp;#x27;, &amp;#x27;tab10&amp;#x27;, &amp;#x27;tab20&amp;#x27;, &amp;#x27;tab20b&amp;#x27;, &amp;#x27;tab20c&amp;#x27;, &amp;#x27;magma_r&amp;#x27;, &amp;#x27;inferno_r&amp;#x27;, &amp;#x27;plasma_r&amp;#x27;, &amp;#x27;viridis_r&amp;#x27;, &amp;#x27;cividis_r&amp;#x27;, &amp;#x27;twilight_r&amp;#x27;, &amp;#x27;twilight_shifted_r&amp;#x27;, &amp;#x27;turbo_r&amp;#x27;, &amp;#x27;Blues_r&amp;#x27;, &amp;#x27;BrBG_r&amp;#x27;, &amp;#x27;BuGn_r&amp;#x27;, &amp;#x27;BuPu_r&amp;#x27;, &amp;#x27;CMRmap_r&amp;#x27;, &amp;#x27;GnBu_r&amp;#x27;, &amp;#x27;Greens_r&amp;#x27;, &amp;#x27;Greys_r&amp;#x27;, &amp;#x27;OrRd_r&amp;#x27;, &amp;#x27;Oranges_r&amp;#x27;, &amp;#x27;PRGn_r&amp;#x27;, &amp;#x27;PiYG_r&amp;#x27;, &amp;#x27;PuBu_r&amp;#x27;, &amp;#x27;PuBuGn_r&amp;#x27;, &amp;#x27;PuOr_r&amp;#x27;, &amp;#x27;PuRd_r&amp;#x27;, &amp;#x27;Purples_r&amp;#x27;, &amp;#x27;RdBu_r&amp;#x27;, &amp;#x27;RdGy_r&amp;#x27;, &amp;#x27;RdPu_r&amp;#x27;, &amp;#x27;RdYlBu_r&amp;#x27;, &amp;#x27;RdYlGn_r&amp;#x27;, &amp;#x27;Reds_r&amp;#x27;, &amp;#x27;Spectral_r&amp;#x27;, &amp;#x27;Wistia_r&amp;#x27;, &amp;#x27;YlGn_r&amp;#x27;, &amp;#x27;YlGnBu_r&amp;#x27;, &amp;#x27;YlOrBr_r&amp;#x27;, &amp;#x27;YlOrRd_r&amp;#x27;, &amp;#x27;afmhot_r&amp;#x27;, &amp;#x27;autumn_r&amp;#x27;, &amp;#x27;binary_r&amp;#x27;, &amp;#x27;bone_r&amp;#x27;, &amp;#x27;brg_r&amp;#x27;, &amp;#x27;bwr_r&amp;#x27;, &amp;#x27;cool_r&amp;#x27;, &amp;#x27;coolwarm_r&amp;#x27;, &amp;#x27;copper_r&amp;#x27;, &amp;#x27;cubehelix_r&amp;#x27;, &amp;#x27;flag_r&amp;#x27;, &amp;#x27;gist_earth_r&amp;#x27;, &amp;#x27;gist_gray_r&amp;#x27;, &amp;#x27;gist_heat_r&amp;#x27;, &amp;#x27;gist_ncar_r&amp;#x27;, &amp;#x27;gist_rainbow_r&amp;#x27;, &amp;#x27;gist_stern_r&amp;#x27;, &amp;#x27;gist_yarg_r&amp;#x27;, &amp;#x27;gnuplot_r&amp;#x27;, &amp;#x27;gnuplot2_r&amp;#x27;, &amp;#x27;gray_r&amp;#x27;, &amp;#x27;hot_r&amp;#x27;, &amp;#x27;hsv_r&amp;#x27;, &amp;#x27;jet_r&amp;#x27;, &amp;#x27;nipy_spectral_r&amp;#x27;, &amp;#x27;ocean_r&amp;#x27;, &amp;#x27;pink_r&amp;#x27;, &amp;#x27;prism_r&amp;#x27;, &amp;#x27;rainbow_r&amp;#x27;, &amp;#x27;seismic_r&amp;#x27;, &amp;#x27;spring_r&amp;#x27;, &amp;#x27;summer_r&amp;#x27;, &amp;#x27;terrain_r&amp;#x27;, &amp;#x27;winter_r&amp;#x27;, &amp;#x27;Accent_r&amp;#x27;, &amp;#x27;Dark2_r&amp;#x27;, &amp;#x27;Paired_r&amp;#x27;, &amp;#x27;Pastel1_r&amp;#x27;, &amp;#x27;Pastel2_r&amp;#x27;, &amp;#x27;Set1_r&amp;#x27;, &amp;#x27;Set2_r&amp;#x27;, &amp;#x27;Set3_r&amp;#x27;, &amp;#x27;tab10_r&amp;#x27;, &amp;#x27;tab20_r&amp;#x27;, &amp;#x27;tab20b_r&amp;#x27;, &amp;#x27;tab20c_r&amp;#x27;]
&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/5a51ad2d7b78aa06d57e3d1fb70e698e.png" src="https://cdn.sspai.com/2023/08/31/5a51ad2d7b78aa06d57e3d1fb70e698e.png"/&gt;&lt;/figure&gt;&lt;h2&gt;总结&lt;/h2&gt;&lt;p&gt;本文以破解微信聊天数据库为出发点，导出聊天记录之后，使用 Python 结合 jieba、numpy、matplotlib 等工具对聊天记录进行数据分析。得到了一些比较有趣的数据，或者制作出了一些有意义的图片。&lt;/p&gt;&lt;p&gt;本文一共有 4 个例子，如果读者能够将这几个例子都理解透了，也可以根据自己的想法，实现一些更有意思的数据分析工作。除了数据分析之外，如果读者在 AIGC 方面有所涉略，还可以参考文章 &lt;a href="https://sspai.com/post/79230" target="_blank"&gt;用 10 万条微信聊天记录和 280 篇博客文章，我克隆了一个数字版自己&lt;/a&gt;，将自己的好友聊天记录数据清洗出来，然后用同样的方法训练一个类似自己思想的聊天机器人。&lt;/p&gt;&lt;p&gt;本文抛砖引玉，希望有更多读者，以不同的视角来解析微信聊天记录。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关联阅读：&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&amp;gt; 下载少数派 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;客户端 &lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号 &lt;/a&gt;，了解更妙的数字生活 🍃&lt;/p&gt;&lt;p&gt;&amp;gt; 想申请成为少数派作者？&lt;a href="https://sspai.com/apply/writing" target="_blank"&gt;冲！&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><author>JamesHopbourn</author><guid>https://sspai.com/post/82577</guid><pubDate>Thu, 31 Aug 2023 03:37:31 GMT</pubDate></item><item><title>派早报：SDC23 大会时间确认、PS Plus 上调订阅价等</title><link>https://sspai.com/post/82574</link><description>&lt;div&gt;&lt;h2&gt;你可能错过的新鲜事&lt;/h2&gt;&lt;h3&gt;三星确认 SDC23 大会召开时间&lt;/h3&gt;&lt;p&gt;8 月 30 日，三星公司宣布将于 10 月 5 日在美国旧金山举办 2023 年三星开发者大会（Samsung Developer Conference 2023，简称「SDC23」）。本届大会将聚焦三星电子旗下的 SmartThings、Bixby、Knox 及 Tizen 等子品牌或产品。&lt;a href="https://www.samsungdeveloperconference.com/" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/article/4645d84fa667d25200fffde3811527d1" src="https://cdn.sspai.com/2023/08/31/article/4645d84fa667d25200fffde3811527d1"/&gt;&lt;figcaption&gt;活动宣传图，图片来自新闻源&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;美图发布 AI 数字人生成工具 DreamAvatar&lt;/h3&gt;&lt;p&gt;8 月 30 日，美图公司发布 AI 数字人生成工具 DreamAvatar，用户可以上传带有人物的视频素材，DreamAvatar 可以将其替换为 AI 演员，动作与真人同步。目前 DreamAvatar 支持最长 10 秒的 AI 角色替换，共有 11 款数字人可选。&lt;a href="https://www.pingwest.com/w/287652" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/article/f7a00d214a3cce9fa828eecb9dc7f0df" src="https://cdn.sspai.com/2023/08/31/article/f7a00d214a3cce9fa828eecb9dc7f0df"/&gt;&lt;figcaption&gt;产品宣传海报，图片来自新闻源&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;深港交通一卡通正式发行&lt;/h3&gt;&lt;p&gt;8 月 30 日，「湾区融合 通享全国」深港一卡通上线发布会在深圳福田地铁站举行，正式推出深港交通一卡通产品，用户持此卡即可在香港及内地的 327 个城市畅行。该卡由深圳通及八达通联合发行，卡内同时包含深圳通电子钱包（符合交通运输部全国交通一卡通标准）和八达通电子钱包，分别使用人民币和港币充值即可使用。&lt;a href="https://www.sznews.com/news/content/2023-08/30/content_30441626.htm" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/article/5a51ef96ab13e6e3370ff4a44f2e7eef" src="https://cdn.sspai.com/2023/08/31/article/5a51ef96ab13e6e3370ff4a44f2e7eef"/&gt;&lt;figcaption&gt;卡片外观图，图片来自新闻源&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;PS Plus 服务将上调订阅价格&lt;/h3&gt;&lt;p&gt;8 月 30 日，索尼公司宣布，PlayStation Plus 的订阅价格将从 9 月 6 日起进行调整。根据索尼公布的新价格来看，各档位的年度订阅价均有 20 至 40 美元左右的上调幅度。&lt;a href="https://blog.playstation.com/2023/08/30/playstation-plus-monthly-games-for-september-saints-row-black-desert-traveler-edition-generation-zero/" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/article/d512280b43be8940c3fa51b0f1badcc4" src="https://cdn.sspai.com/2023/08/31/article/d512280b43be8940c3fa51b0f1badcc4"/&gt;&lt;figcaption&gt;各档位新价格图，图片截取自新闻源&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Ayaneo 发布「鲲」Windows 掌机&lt;/h3&gt;&lt;p&gt;8 月 29 日，Ayaneo 品牌推出旗舰级 Windows 掌机「鲲」（KUN）。鲲搭载 AMD Ryzen 7840U 芯片及 8.4 英寸的 IPS 屏幕，拥有 75Wh 电池，支持 Windows Hello 人脸识别，最高 TDP 性能释放可达 54W。产品售价 7399 元起，目前已开启预售。&lt;a href="https://ayaneo.com.cn/goods/512" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/31/ff0806750bc05e7f4ff657aa09a81a74.png" src="https://cdn.sspai.com/2023/08/31/ff0806750bc05e7f4ff657aa09a81a74.png"/&gt;&lt;figcaption&gt;产品外观及核心参数图，图片来自新闻源&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;完美世界 CS:GO 竞技平台将关闭付费通道&lt;/h3&gt;&lt;p&gt;近日，完美世界公司宣布，旗下的 CS:GO 竞技平台将于 9 月关闭付费通道，未来将实现全免费运营。付费通道关闭后，当前会员权益和功能还会继续生效；非会员上线即可免费领取平台 7 选 2 限时权益礼包；8 月 21 日前所有已付费老会员上线即可免费领取更多会员时长。完美世界方面表示，在进入免费运营阶段后，平台将致力于完善匹配机制和反作弊系统。&lt;a href="https://www.gcores.com/articles/170228" target="_blank"&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;少数派的近期动态&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Context 众筹火热进行中，低至 53 折、会员可享额外优惠。&lt;a href="https://sspai.com/post/82252" target="_blank"&gt;&lt;strong&gt;前往了解&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt; | &lt;/strong&gt;&lt;a href="https://sspai.com/bullet/1692689059" target="_blank"&gt;&lt;strong&gt;有奖讨论&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;少数派从科隆游戏展现场参观归来。阅读&lt;a href="https://sspai.com/post/82466" target="_blank"&gt;&lt;strong&gt;参展札记&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;友台《两颗皮蛋》（皮蛋漫游记）与少数派创始人老麦的对谈已上线。&lt;a href="https://sspai.com/post/82453" target="_blank"&gt;&lt;strong&gt;前往收听&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;入华 30 周年之际，我们参观了 Apple 智惠教育中心。&lt;a href="https://sspai.com/post/82407" target="_blank"&gt;&lt;strong&gt;一起看看&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;开学季三重优惠买栏目：985 快闪礼包、优惠翻倍、还有栏目史低价。&lt;a href="https://sspai.com/post/82520" target="_blank"&gt;&lt;strong&gt;快来享折扣&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;你可能错过的好文章&lt;/h2&gt;&lt;p&gt;&amp;gt; 下载 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;少数派 2.0 客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，解锁全新阅读体验 📰&lt;/p&gt;&lt;p&gt;&amp;gt; 实用、好用的 &lt;a href="https://sspai.com/mall" target="_blank"&gt;正版软件&lt;/a&gt;，少数派为你呈现 🚀&lt;/p&gt;&lt;/div&gt;</description><author>少数派编辑部</author><guid>https://sspai.com/post/82574</guid><pubDate>Thu, 31 Aug 2023 00:47:48 GMT</pubDate></item><item><title>从杂乱到有序：如何利用位置记忆技巧提高生活和工作效率</title><link>https://sspai.com/post/81586</link><description>&lt;div&gt;&lt;p&gt;&lt;strong&gt;Matrix 首页推荐&lt;/strong&gt; &lt;/p&gt;&lt;p&gt;&lt;a href="https://sspai.com/matrix" target="_blank"&gt;Matrix&lt;/a&gt; 是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。&lt;/p&gt;&lt;p&gt;文章代表作者个人观点，少数派仅对标题和排版略作修改。&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;想象一下，我们工作下班后回家，一开门把钥匙放在左边的鞋柜上，打开柜子门拿出倒是第二层的拖鞋。往前走再左拐走进客厅，把外套以及公文包挂在客厅角落的架子上，坐在沙发上，自然而然地拿着茶几上的遥控器打开前面的电视......&lt;/p&gt;&lt;p&gt;有没有感觉，一切都是很顺利自然的，每个细节我们好像都能记住，在整个过程中我们所提到的东西都跟位置信息有关系，于是，位置记忆也成了一种非常有效的记忆方法。&lt;/p&gt;&lt;p&gt;不知道你有没有看过《神探夏洛克》这部剧，在剧中总是有一个不断出现的场景是神探夏洛克·福尔摩斯在一幢房子里面，打开一间间房间去寻找他想要的东西。事实上这只存在于他的大脑之中，里面存放了他所有与办案相关的信息，就像我们前面讲的那样依靠房间的位置自然而然地记忆和查找这些信息。说到这样的人，我还能想起一个人，大家应该都很熟悉——食人者汉尼拔。这位可怕的连环杀手使用了一座巨大、精致、虚拟的宫殿图像，通过房间以及物品来记住各种事情。&lt;/p&gt;&lt;p&gt;这些就是他们的记忆宫殿，这是虚拟的，因为他们从未真正住在这座宫殿中。而这种记忆方法也叫做位置记忆法。&lt;/p&gt;&lt;p&gt;可能有人会说，我们本来记忆东西本身不就好了，现在再结合空间记忆岂不是增大我们的记忆负担？而事实上，现今我们所熟知的记忆大师，大多数都会利用这种方法记东西。并且这种记忆方法由来已久，早在公元前 500 年左右的古希腊就存在了。据说这是一个叫西摩尼得斯的诗人发现的。&lt;/p&gt;&lt;p&gt;一天，西摩尼得斯来到一位贵族家里参加宴会。宴会上，大家谈笑风生，西摩尼得斯还朗诵了一首自己创作的诗来表达对宴会主人的尊敬。不久，门口来了两位年轻人，要求西摩尼得斯出门与他们见面，于是他就离开了宴会厅。但是，命运总是充满惊喜，然而，就在他出门的一瞬间，宴会厅突然倒塌，宴会主人和所有的宾客都被埋在废墟下面，只有西摩尼得斯侥幸逃脱了这场灾难。当亲朋好友来到宴会现场安葬死者时，他们发现死者的面容已经全非，无法相认，于是他根据自己记忆中宾客们在宴会上所处的位置，然后对照所有尸体的位置，将所有的人都辨认出来，使他们得以安葬。西摩尼得斯将这个方法命名为「位置记忆法」。&lt;/p&gt;&lt;h2&gt;什么是位置记忆&lt;/h2&gt;&lt;p&gt;这种记忆方法的原理是将记忆对象与想象中的建筑、房间和家具建立联系，再通过回想这些想象物来回忆记忆对象，从而实现对记忆对象的有序记忆。&lt;/p&gt;&lt;p&gt;在我们的印象中，记忆是一种很神秘的东西，我们不知道它是如何运作的，而我们的社会又是非常重视能够记住大量信息的人。并且在一定程度上，一个人拥有良好的记忆力被视为天才，这种天分好像后天无法得到，而事实上，这是可以的。&lt;/p&gt;&lt;p&gt;一般来说人们的记忆保持不变，但是可以通过一些技巧来得到提升。&lt;/p&gt;&lt;p&gt;比如可以通过语音循环的方法或者成为一个领域的专家可以提高对于特定领域知识的记忆。&lt;/p&gt;&lt;p&gt;还有分块记忆，比如：记忆一串数字 1224200001012001，我们能把这些数字拆分成 12/24/2000 和 01/01/2001，信息仍然是一样的，但却变得容易了许多，因为我们把一整个信息组合成更容易记住的&lt;strong&gt;块。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;此外还有阐述性编码，即是通过感官信息来帮助记忆，比如说气味、视觉刺激等等。&lt;/p&gt;&lt;p&gt;一项关于单词考试的实验显示位置记忆能够有效对于单词的记忆，并且对于长期记忆也有明显效果。当记忆从短期变成长期的时候，我们的体内的记忆储存就由通过海马体来存储变成通过产生新的神经元来形成更稳定的记忆。&lt;/p&gt;&lt;p&gt;通过这种现象，研究人员可以通过观察使用位置记忆法的记忆者的大脑变化来发现位置记忆法使用的时候所涉及的脑区区域——包括内侧颞叶、外侧前额叶皮层、脾后皮质、脑干和小脑，这些区域中和记忆相关的部分。&lt;/p&gt;&lt;p&gt;因此在对于超级记忆者的脑扫描研究发现，90% 的被试都使用了位置记忆法，并且脑区中与空间知觉相关的部位被激活。&lt;/p&gt;&lt;p&gt;对于这项技能带来如此好的效果的一个说法是，在早期我们的祖先就是需要记忆一些关键信息与空间位置的关系，才能够生存下来。例如：哪里可以找到事物，哪里有危险……因此，位置记忆法就这样慢慢地存在于我们的记忆之中，而当下由于手机、计算机以及纸笔等工具的出现使我们的这项技能慢慢沉睡。&lt;/p&gt;&lt;h2&gt;为何要普及位置记忆&lt;/h2&gt;&lt;p&gt;在当今电子设备普及的时代，人们似乎淡忘了记忆的重要性，多数学校也缺乏对于这些技巧的培训或训练。&lt;/p&gt;&lt;p&gt;首先我想说的是，位置记忆法是一个很重要也很好的技能，特别是对于现阶段学生的学习。位置记忆对于学生的学术研究（毕竟记忆是学术活动中的一个重要的工具）以及成绩的提高都有显著的作用。&lt;/p&gt;&lt;p&gt;为什么我们要学习提高我们的记忆力，即使我们随时都能拿到书本和智能手机？原因很简单：因为你的记忆实际上可以帮助你取得更多成就。尽管我们能够将知识储存在手机以及笔记本等一些外部位置，但是对于这些外部知识的提取也需要用到记忆，在解决问题的时候我们也需要用到记忆来帮助我们确认相应问题所对应的解决方法存在的位置。这些时候，外部位置的信息提取速度，远不及我们内部的记忆宫殿的作用大。&lt;/p&gt;&lt;p&gt;在一个课堂上，教授演示位置记忆法（MoL）来帮助学生了解和应用这种记忆技巧。而后的研究结果表明，学生在使用 MoL 时能够显著提高对于序列列表的记忆能力，并且能够在日常生活中频繁使用这种记忆技巧。这种方法的练习不仅可以提高学生的记忆能力，还能增强他们的元认知能力，因此总的来说这种记忆方法可以提高学生的学习效果。&lt;/p&gt;&lt;p&gt;在实验中，教授让学生来记忆一份杂货清单，在实验前后进行了记忆测试以及问卷调查。学生可以在学校内选择一些熟悉的地点（例如教学楼、图书馆、食堂、宿舍等）根据自己的喜好来创建记忆宫殿。他们可以在地图上标出这些地点，并且通过每个地点与相应的杂货来利用地图记忆杂货清单。&lt;/p&gt;&lt;p&gt;当然，对于成年人以及老年人来说，并不是不需要这些方法。对于记忆的练习还能有效防止老年痴呆以及阿尔茨海默症。&lt;/p&gt;&lt;p&gt;根据实验所在的文献，文中提到了三种记忆测量方法，分别是 strict serial recall、lenient serial recall 和 nonserial recall。具体操作过程如下：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;strict serial recall（严格顺序回忆）：学生被要求在听到一个由 12 个杂货物品组成的列表后，尽量按照正确的顺序回忆这些物品。学生完成回忆任务后，自行评分，计算得分。每个正确回忆的物品位置得 1 分，最高得分为 12 分。&lt;/li&gt;&lt;li&gt;lenient serial recall（宽松顺序回忆）：学生同样被要求在听到一个由 12 个杂货物品组成的列表后，尽量按照正确的相对顺序回忆这些物品。例如，如果「苹果」在位置 3 而不是位置 4，但在前一个物品之后的正确顺序中，这也被视为正确。学生完成回忆任务后，自行评分，计算得分。每个正确回忆的物品相对位置得 1 分，最高得分为 12 分。&lt;/li&gt;&lt;li&gt;nonserial recall（非顺序回忆）：学生被要求在听到一个由 12 个杂货物品组成的列表后，尽量回忆这些物品，不考虑它们的顺序。学生完成回忆任务后，自行评分，计算得分。每个正确回忆的物品得 1 分，最高得分为 12 分。以上是三种记忆测量方法的具体操作过程。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;结果表明，学生们在所有三种记忆测量方法上的记忆能力都有所提高。也就是说位置记忆法可以有效提高学生对于 12 个物品的串联记忆能力。这个结果意味着，教授和实践记忆技巧可以帮助学生提高记忆能力，而 MoL 是一种有效的记忆技巧。这个研究还表明，大学生可能对于记忆技巧的了解和使用不足，需要更多的教育和实践。&lt;/p&gt;&lt;h2&gt;如何使用位置记忆法&lt;/h2&gt;&lt;p&gt;记忆是一个需要极致专注的过程，因此我们需要提高我们的注意力。基于此，我们要清除额外的思想，活在当下。我在&lt;a href="https://sspai.com/post/80746" target="_blank"&gt;进入精英状态的钥匙——深度工作&lt;/a&gt;中讲到过这些，首先我们不能让思绪朝不同方向发展，比如说在记忆的时候会被突然而来的电子邮件以及手机信息干扰。一个很好的起点就是停止多任务处理，根据神经科学专家的说法，多任务实际上会使我们的思考速度减慢50%并且增加我们犯错的几率。&lt;/p&gt;&lt;p&gt;我在以前的文章中讲到过&lt;strong&gt;任务切换耗散&lt;/strong&gt;这个概念，这个指的是当我们在同时处理多个任务的时候，我们的认知能力会在切换任务的时候消耗掉，也就是说，我们处理两件事平均分配到的注意力比一次只做一件事的要少一点，这是因为在任务切换的时候我们消耗掉了一部分注意力。&lt;/p&gt;&lt;p&gt;一个我认为可行的建议是通过给自己一个目标，防止你的思维漫游。这样，你就可以轻松地提醒自己，你为什么想要专注于某件事。我们都知道&lt;a href="https://sspai.com/post/80746" target="_blank"&gt;商人的特点是具有很强的目标感&lt;/a&gt;，为了赚到钱，他们会把所有精力都放在最关键的目标上，然后围着目标设定一系列实现方法，让自己迅速达成目标。&lt;/p&gt;&lt;p&gt;还有一个方法也能让你更加专注——好奇心。人们总好对自己好奇以及感兴趣的事物付出更多的精力，如果把目标、兴趣、好奇结合在一起，就构成了 PIC 规则。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;目标（Purpose）给你学习的理由。以学习编程语言为例，你的目的可以是为你的家人建立一个网站。&lt;/li&gt;&lt;li&gt;一旦你找到了一个目标，问自己一些问题，这样你就可以对你选择学习的东西感到感兴趣（Interested）；&lt;/li&gt;&lt;li&gt;和好奇（Curious）。 「这与我的生活有关吗？」或「我可以在工作中使用这个吗？」都是很好的开始。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;记忆宫殿是一种利用位置来记忆事物的方式，就像电脑硬盘一样，它有许多不同的房间，每个房间里有特征物，用来存储信息，就像电脑中的文件夹一样。这些特征物的位置可以是物理世界中真实的空间，比如家里的桌子或花瓶；也可以是抽象的，比如一篇文章或一本书，里面的句子可以作为特征物，用来记忆单词。因此，记忆宫殿并非神奇，而是一种用来编码和处理信息的方式。难怪老师们总是让我们背课文，因为这样能够让我们将枯燥无聊的单词记在生动有趣的句子和文章中。&lt;/p&gt;&lt;p&gt;位置记忆的过程可以分为三个步骤：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;查找（find）：找定起始位置，在脑海中激活该位置的存在形象。&lt;/li&gt;&lt;li&gt;移动（move）：不断从一个位置移动到另一个位置，同时记住扫描的位置。&lt;/li&gt;&lt;li&gt;检索（retrieve）：解码位置——物品关联的关系，并且检索物品名称。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;扫描是指在方法定位法中，被试需要在一系列空间位置中扫描，以找到特定的位置或物品。扫描是由移动过程完成的，该过程过程是一个迭代的过程，每次迭代都会生成下一个位置。扫描是一个顺序执行的过程，即逐个位置地扫描，每个位置的扫描时间是固定的。&lt;/p&gt;&lt;p&gt;研究显示，检索过程几乎没有错误的意思是，在使用位置记忆方法时，检索错误的程度较低。这表明位置记忆方法的可靠性较高，因为在这种方法中，检索过程是最终检索目标位置的过程，如果这个过程出现错误，就会导致记忆失败。因此，这个结果表明位置记忆方法是一种有效的记忆技巧。&lt;/p&gt;&lt;p&gt;一个好的建议是给自己设一个目标，时时刻刻提醒自己要专注，防止我们的思维漫游，这样我们既能轻松提醒自己为什么要专注于某件事情。&lt;/p&gt;&lt;h3&gt;跟我一起尝试位置记忆法&lt;/h3&gt;&lt;p&gt;接下来我来更加框架化地讲一下，首先花几分钟尽可能按顺序记住下面这些事物，你能记得多少？&lt;/p&gt;&lt;p&gt;鱼，地毯，香烟，铅笔，汉堡包，电话，足球，雨伞，钥匙，胡子，打字机，汽车轮胎，餐盘，耳朵，枕头，船，苹果树，牙刷，项链，一瓶啤酒。&lt;/p&gt;&lt;p&gt;大多数人不能记住超过九个，实际上没有人能记住超过十个。大多数人通过一遍又一遍重复背诵这个列表，如果时间够长的话，他们可能可以全部记住。&lt;/p&gt;&lt;p&gt;记忆的关键不在于学习的过程，而在于回忆。人类的大脑可以储存大量的信息，而在大多数情况下，我们不能那么容易直接从我们大脑中提取信息。&lt;/p&gt;&lt;p&gt;位置记忆法我们要构建记忆宫殿，那么我们要记忆的一切基本都要以视觉化的形式展示出来，因此对于物品的记忆我们首先要「视觉化」，这是一个很关键的一部分。&lt;/p&gt;&lt;p&gt;视觉化一定要做到以下几点：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;让图像越荒谬越好：我们的大脑对越离奇不寻常的图像的记忆能力越强，因此我们只要看到，我们就很难忘记。&lt;/li&gt;&lt;li&gt;在脑海中看到：我们要先在脑海中看过这个东西，我们才能记得这个东西、对这个东西印象更深刻。&lt;/li&gt;&lt;li&gt;让图像尽可能生动：我们可以近距离的观察他，然后动用所有感官，构造一个富含这些细节的场景。这不是一个静态图片，更像是一个视频剪辑或动画，我们可以任意角度地观察它。&lt;/li&gt;&lt;li&gt;让自己也存在于图像当中：你在这些场景中表现的越活跃，就越容易记住他们，感觉自然，把自己置身于这些场景。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;当你把自己置身于这些场景中时，你也有一种独特的可能性去给它们添加感官细节。你的场景是否包括一个苹果？在你的脑海中，看到你正在咬一口苹果。具体点。这是什么苹果？一个深红色的甜苹果？绿色的，酸的？咬一口，「感受」它的感觉。&lt;/p&gt;&lt;p&gt;接下来就是一个一个记住这些对象。&lt;/p&gt;&lt;p&gt;鱼和地毯，这是一个荒谬的联系。想象一下，你脚踩在一块由鱼缝制而成的地毯上，感受到油腻腻的鱼在你脚下。关上你的眼睛，真正去感受这个荒谬的画面。接下来，我们把地毯和香烟联系起来，处理图像，扩展它，感受地毯有多重。想象一下，你把这个地毯香烟放进嘴里，感受到它的质感。最后，把香烟和铅笔联系起来，写字的时候，用的是一根长长的、冒烟的香烟。把香烟做得比普通香烟大一点，你就会看到自己在吸地毯香烟。&lt;strong&gt;记住，让你的想象力发挥到极致，列出一系列荒谬的联系，用生动的图像去记忆它们，最后一定要去测试它们，看看它们的成效。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;如果你完成了上面的两个步骤，那么你已经算是初窥门道了。位置记忆法的关键在于&lt;strong&gt;存储空间关系的建立&lt;/strong&gt;，以下步骤可供参考。&lt;/p&gt;&lt;p&gt;首先选择一个自己&lt;strong&gt;熟悉的场景&lt;/strong&gt;（当然，自己完全建构的也行，只是初学者会比较困难），并在脑海中将其图像化作为我们的宫殿。&lt;/p&gt;&lt;p&gt;接着为了让我们的记忆更加有序，方便信息存储与提取，我们可以按照一个&lt;strong&gt;固有的路径&lt;/strong&gt;去巡视我们的宫殿。&lt;/p&gt;&lt;p&gt;接着在各个房间里找一些&lt;strong&gt;特征物&lt;/strong&gt;来作为锚定点连接我们分散的记忆，以便更好地进行回忆时的引导。这些特征物可以是家具、装饰品、窗户等等，只要能够在我们的宫殿中起到记忆的定位作用即可。比如，在宫殿的第一个房间，我们可以选择一张画作作为我们的第一个锚定点。接下来，在第二个房间，我们可以选择一件摆放在柜子上的瓷器作为第二个锚定点。这样，每当我们想要回忆起第一个房间的记忆时，只需要通过第一个锚定点回忆起它的位置，再顺着路径找到第二个锚定点即可。&lt;/p&gt;&lt;p&gt;为了进一步增强记忆效果，我们还可以给每个锚定点赋予一些特别的&lt;strong&gt;意义&lt;/strong&gt;或者以&lt;strong&gt;故事&lt;/strong&gt;的方式进行串联。例如，在第一个锚定点的画作中，我们可以选择一幅代表着重要的家庭时刻的图片，然后在第二个锚定点的瓷器上，我们可以选择一件象征着成功与进步的物品。通过这样的方式，不仅能够增加记忆的生动性和情感联结，还能够帮助我们更好地记忆和串联不同的信息。&lt;/p&gt;&lt;p&gt;对房子的每个房间，我们决定使用哪些物品/家具作为特征物。这是一开始就决定的事情。这些永远不会改变。每个特征物就像一个车站/公共汽车站，当我们在心里走过房子的房间时，我们总是以相同的顺序走来走去。这使得穿过我们的房子的旅程是连续的。&lt;/p&gt;&lt;p&gt;对于记忆内容，我想我们一定要一种夸张、荒谬的联想方式与特征物建立联系，就像我前文所说视觉化要越荒谬越好一样，我们的大脑更容易记住那些新奇好玩的事物。&lt;/p&gt;&lt;p&gt;每一个房间里的路径都是固定的。如果从左到右穿过房间时，沙发放在灯前，然后是电视机，然后是书架，那么这就是我们永远「走过」记忆宫殿的路线。物品的放置方式与现实生活房间中的放置方式完全相同，并且在使用记忆宫殿时，我们需要以相同的方向从左到右走过这些房间。当然，当我们穿过房子的房间时，所有物体/特征物都会以固定的顺序弹出它们所属的位置。&lt;/p&gt;&lt;h2&gt;补充技巧&lt;/h2&gt;&lt;h3&gt;记忆名字&lt;/h3&gt;&lt;p&gt;首先，构建生动的图像可以帮助我们记住他人的名字。举例来说，假设有一个叫做「Baker」的人，我们会想到一个面包师在烤箱前揉面团的场景，而不仅仅是他的名字。这将触发我们的大脑形成写实的记忆，从而更容易记住他的名字。&lt;/p&gt;&lt;p&gt;其次，四个 C 的方法可以帮助我们有效地记忆新的名字。首先是「集中」（Concentrate），要大声说出这个人的名字，并重复它。然后是「创造」（Create），像「Baker」的例子一样，用生动的图像创造出这个名字。第三步是「连接」（Connect），将这个图像与这个人的面部特征或其他显著特点进行连接。比如有个同事叫 Janice，她有冰冷的蓝眼睛，那就想象冰柱从她的眼睛里飞出。最后一步是「持续使用」（Continuous use），意指要经常性地回顾并使用这些名字，比如可以把这个人的名字写在日记中，或将他们添加到你的社交媒体联系人中，这样可以帮助你更好地记住这些名字。&lt;/p&gt;&lt;p&gt;总结上述方法，我们可以看到这是一个非常有效的策略来提高我们记忆别人名字的能力，通过使用生动的图像，集中注意力，创造记忆，连接记忆点和持续使用，我们可以更好地记住每一个遇见的人的名字。&lt;/p&gt;&lt;h3&gt;记忆数字&lt;/h3&gt;&lt;p&gt;图形化和故事化的方式来记忆一串随机数字：5489206。在这个例子中，为了将数字转化为一个可记忆的故事，我们首先给每个数字分配一个唯一的图像：例如，为了记住数字 5，我们可以想象一个鱼钩；数字 4 可以与旗子相关联；8 可以想象成葫芦，9 是小花猫，2 是小黄鸭；0 是太阳帽，6 是勺子。&lt;/p&gt;&lt;p&gt;然后，我们将这些图像放在一个熟悉的环境中进行编码，例如，在你的卧室里。在这个环境中，每个数字图像都与环境中的对象相互作用：例如，你可能会想象床分开并出现了一个鱼钩（5），然后旗子（4）在一旁挥动。这个鱼钩钓起了一个葫芦（8），葫芦跌落并吓醒了书桌上的小花猫（9）。然后小花猫撞到衣柜，衣柜被打开，流出了水，小黄鸭（2）在里面游泳。而你戴着太阳帽（0）乘坐勺子形状的船（6）去追小黄鸭。&lt;/p&gt;&lt;p&gt;通过这种方式，我们将一串无意义的数字转化为一个有趣的、图像丰富的故事，使得我们更容易记住这串数字。这种方法混合了图像、故事和环境因素，使记忆过程更具吸引力和形象化，从而提高记忆效果。&lt;/p&gt;&lt;h3&gt;记忆冗长文本&lt;/h3&gt;&lt;p&gt;一种记住冗长文本的有效方法是利用图像和情感化策略。首先，将信息情绪化，利用你的创造力把它变成一个栩栩如生的影像或故事。例如，你在学习西班牙语单词「pollo」（意为「鸡」）。你可以想象自己骑着一只庞大的鸡玩马球，这样就永远不会忘记这个单词。同样，如果你想记住澳大利亚首都堪培拉（Canberra），尝试想象一只袋鼠（KANgaroo）正在吃浆果（BERRies）。&lt;/p&gt;&lt;p&gt;为了使你的图想象显得更加生动且难以忘却，你可以使用「SEE」方法：感官（Senses），夸张（Exaggeration），和活力（Energize）。信息通过我们的感官进入我们的大脑。所以，试图记住「horse」这个词时，你可能想象其皮肤的质地，它的气味，甚至它的口感。创建出一个多感官的影像比记忆单凭五个字⺟要容易得多。&lt;/p&gt;&lt;p&gt;构建这个影像时，应该尽量夸张。你更可能记住穿着燕尾服的巨大粉红马，而不是普通的马。逻辑在这里并不重要，关键是创造出有趣且夸张的影像。性感或有趣的图像尤其有效，因为这些是我们的大脑最容易记住的类型。&lt;/p&gt;&lt;p&gt;然后要给你的图像注入活力。比如，你可能会想象一匹马全速冲向日落，相比静静站在马厩里的马应该更吸引你的注意力。加入动作可以使需要记忆的信息更加生动。&lt;/p&gt;&lt;p&gt;你也可以将情绪分配给要记忆的诗歌或散文。例如，奥地利记忆大师科琳娜·德拉什尔用感情代替图像来记忆长诗。她把诗歌分成几部分，并为每一节分配一个特定的情绪，把原本抽象的文字变得充满情感，通过情感来串联起诗歌的不同部分，让其变得更易于记忆。例如，对于描绘春天的部分，她可能会将其与坠入爱河的感觉相联系，而对于带有愤怒情绪的部分，她可能会将其与冬天的形象联系起来。&lt;/p&gt;&lt;p&gt;总的来说，通过利用你的想象力以及将情绪融入记忆过程，可以让要记住的信息变得更加生动且易于记忆。&lt;/p&gt;&lt;h2&gt;补充：VR 辅助&lt;/h2&gt;&lt;p&gt;随着位置记忆在记忆方法中的逐渐崭露头角，近些年来，人们也想方设法的通过一些外部工具来锻炼这种能力。人们在使用位置记忆法来记忆的时候，遇到的最大的挑战是，该法需要个体具有较强的空间想象力、创造力以及良好的视觉化能力，从而通过想象构建一个形象鲜明、稳定且具有一定复杂性的建筑物，这对初学者来说尤为困难。&lt;/p&gt;&lt;p&gt;已有的研究显示，VR 辅助记忆宫殿法对学生记忆能力提高的效果优于经典记忆宫殿法，并且学生的记忆能力随着训练强度的增加或训练时间的延长，均能显著提升并达到稳定状态。随着训练强度的增加和训练时间的延长，学生运用 VR 辅助记忆功能宫殿法的能力均能提高，更高强度的训练能使学生记忆能力在更短时间内达到最佳状态。&lt;/p&gt;&lt;p&gt;VR（虚拟现实）技术辅助的记忆宫殿方法已证明能显著提升记忆能力，因此，为其在多种场合的操作提供了可能。如，学生，无论学术水平或专业背景如何，都可以使用 VR 技术打造自己的记忆宫殿，以快速有效地记住术语、命名和专业知识。对记忆比赛选手而言，他们可以借助该方法创建包含丰富主题和大量记忆点的虚拟环境来应对各种记忆比赛挑战。另外，使用 VR 辅助的记忆宫殿策略也可用于治疗那些因年龄或神经性疾病带来的记忆问题，成为他们康复训练的有效工具。&lt;/p&gt;&lt;p&gt;尽管 VR 辅助的记忆宫殿方法有很多优点，但仍存在一些挑战。首先，VR 技术的成本相对较高，并未达到计算机、智能手机以及平板电脑等设备的普及水平，这在一定程度上限制了该方法的广泛应用。其次，一部分学生在使用 VR 设备时可能会出现眩晕和恶心的不适感，这降低了他们使用这种方法的意愿。当然了，随着科技的发展，我们可以期待能有更便宜、用户体验更好的 VR 设备的出现，从而解决这些问题。&lt;/p&gt;&lt;h2&gt;总结&lt;/h2&gt;&lt;p&gt;通过复习，我们能够防止自己遗忘学习的信息。当你完成学校教育后的两年时间里，据研究发现，你大概只记住了相当于三周时长的课程内容，也因此，没有进行记忆训练，忘记大部分学习过的内容是十分常见的情况。总的来说，没有将学习内容通过复习反复加以巩固，所有的学习努力很可能会白白浪费。&lt;/p&gt;&lt;p&gt;每次当你重温掌握的信息时，该信息在你大脑中的印象就会加深。因此，为确保你永远记得所学的内容，你应试图延长每次复习的间隔。比如，新学的内容应在一天、三天、七天后等进行复习，然后在两个月和三个月后再复习两次。&lt;/p&gt;&lt;p&gt;&lt;a href="https://sspai.com/post/80746" target="_blank"&gt;减少在社交媒体上的时间，保持专注于当前任务，你会发现获取新信息变得更加容易。很快，你就会发现，通过使用自己学到的记忆技巧，你甚至不需要写下每周的购物清单！&lt;/a&gt;&lt;/p&gt;&lt;p&gt;例如，查看电子邮件、在社交媒体上回应消息——这些通常都是表层工作，是一类非认知要求、经常在分心状态下执行的后勤任务。它们可能让人感觉良好，但是在一天结束的时候，并没有太多实质性的产出。&lt;/p&gt;&lt;p&gt;最后，我们也不能忽视记忆方法的缺点，例如，创建和记忆「记忆宫殿」需要花费不少的时间和精力，因此也许并不适合快速记忆大量信息的情况。另外，这需要较强的想象力和视觉化能力，不是每个人都能轻易掌握。然而这种记忆法的优点也是显而易见的，它是一种经过测试，被证实有效的记忆辅助技巧，帮助我们记住包括数字、名字、事件等各类信息。此外，通过构建有趣的故事和场景，这种记忆法有助于我们理解和记忆信息，同时还能提升我们的想象力和创造力。就诸如教育和日常生活这样的领域，它也可以发挥广泛的应用。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;参考资料&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Foer, J. (2011). &lt;i&gt;Moonwalking with Einstein : a journey through memory and the mind&lt;/i&gt;. Allen Lane.&lt;/li&gt;&lt;li&gt;Horsley, K., &amp;amp; Tck Publishing. (2016). &lt;i&gt;Unlimited memory : how to use advanced learning strategies to learn faster, remember more and be more productive&lt;/i&gt;. Tck Publishing.&lt;/li&gt;&lt;li&gt;Konnikova, M. (2014). &lt;i&gt;Mastermind&lt;/i&gt;. Canongate.&lt;/li&gt;&lt;li&gt;Lea, G. (1975). Chronometric analysis of the method of loci. &lt;i&gt;Journal of Experimental Psychology: Human Perception and Performance&lt;/i&gt;, &lt;i&gt;1&lt;/i&gt;(2), 95–104. &lt;a href="https://doi.org/10.1037/0096-1523.1.2.95" target="_blank"&gt;https://doi.org/10.1037/0096-1523.1.2.95&lt;/a&gt;&lt;/li&gt;&lt;li&gt;McCabe, J. A. (2015). Location, Location, Location! Demonstrating the Mnemonic Benefit of the Method of Loci. &lt;i&gt;Teaching of Psychology&lt;/i&gt;, &lt;i&gt;42&lt;/i&gt;(2), 169–173. &lt;a href="https://doi.org/10.1177/0098628315573143" target="_blank"&gt;https://doi.org/10.1177/0098628315573143&lt;/a&gt;&lt;/li&gt;&lt;li&gt;刘博豪,宋润东,赵荣辉,李启鑫,程广浩,高嘉蔚... &amp;amp; 王涛.(2021).虚拟现实辅助的记忆宫殿法对大学生记忆力的影响. 中国医学教育技术(05),620-626. doi:10.13566/j.cnki.cmet.cn61-1317/g4.202105020.&lt;/li&gt;&lt;li&gt;左泽.神奇的记忆宫殿——位置记忆法【J】.大科技(科学之谜).2014(10):48-49&lt;/li&gt;&lt;li&gt;影歌.我们能像福尔摩斯一样拥有记忆宫殿吗【J】.方圆.2016(05):64-65&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;gt; 下载少数派 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，了解更多的新玩意 🆒&lt;/p&gt;&lt;p&gt;&amp;gt; 特惠、好用的硬件产品，尽在 &lt;a href="https://shop549593764.taobao.com/?spm=a230r.7195193.1997079397.2.2ddc7e0bPqKQHc" target="_blank"&gt;少数派 sspai 官方店铺 &lt;/a&gt;🛒&lt;/p&gt;&lt;/div&gt;</description><author>愚人哲</author><guid>https://sspai.com/post/81586</guid><pubDate>Wed, 30 Aug 2023 09:24:12 GMT</pubDate></item><item><title>每个人都需要的「第三方授权登录」查询与解绑指南</title><link>https://sspai.com/post/82550</link><description>&lt;div&gt;&lt;p&gt;长久以来，随着我们使用的网络服务越来越多，每一次注册时都要不厌其烦的填写各种个人信息甚至已经变成了一项单纯的体力劳动。与此同时，每个人手中的各类互联网账号数量自然也是水涨船高，想要准确、安全的记忆和储存这些关乎各种个人隐私的数据也逐渐成为了一门生意，近期更是涌现了比如通行密钥（Passkey）这样的新标准，尝试从新的角度来决解这个繁杂的注册和登录问题。&lt;/p&gt;&lt;figure&gt;&lt;img data-original="https://cdn.sspai.com/2023/08/30/91f03cef0f4ed558f812129d3543b202.jpg" src="https://cdn.sspai.com/2023/08/30/91f03cef0f4ed558f812129d3543b202.jpg"/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;关联阅读：&lt;/strong&gt;&lt;a href="https://sspai.com/post/77376" target="_blank"&gt;无密码、更安全的未来，你该如何登录？通行密钥上手体验&lt;/a&gt;&lt;/p&gt;&lt;p&gt;不过比起新兴的 Passkey 规范，针对这个账号问题，其实还有一个更为我们所熟知的替代品——第三方账号授权登录。虽然你可能没有听说过 OAuth 2.0 ，但这个基于 2006 年成立的 OAuth 联盟提出的授权标准的的确确已经陪伴了我们十年了——上至 Sign in with Apple、下到微信登录小程序，里面其实都能看到 OAuth 协议的影子，并且我们每个人都已经在或多或少的使用它了。&lt;/p&gt;&lt;p&gt;使用这些主流的软件账号体系进行授权登录，以及直接关联创建账号，对于亟需新用户的中小规模服务商来说是一笔划算的买卖，最显著的原因莫过于这样可以极大的简化注册流程、变相提升用户转化率。但是对于我们这样的终端用户而言，授权登录却更像是一把双刃剑：一方面，简化的注册流程的确提高了我们的效率，不必再满浏览器的寻找还没有被自己用来注册过的邮箱；但是另一方面，快捷无感的注册流程也为个人隐私泄露埋下了隐患，毕竟这里原本就是在《使用协议》和《授权协议》里玩文字游戏的绝佳场所。在很多情况下，我们其实是不清楚自己究竟授权出去了哪些权利的。&lt;/p&gt;&lt;p&gt;正因如此，能够及时且透彻的了解自己做过哪些授权登录，究竟授权了哪些信息和权限，并且最重要的——了解怎样撤销授权实际上是保护个人信息安全的重中之重。&lt;/p&gt;&lt;h2&gt;国外御三家&lt;/h2&gt;&lt;h3&gt;Apple&lt;/h3&gt;&lt;p&gt;在个人隐私保护方面，Apple 一直是动作比较积极的，甚至前一阵还在投放过甄子丹老师领衔主演的广告片宣传自己的隐私保护。而伴随着 2019 年 Sign in with Apple 功能的推出，Apple 正式为 Apple ID 拓展了第三方代理登录的功能，并且得益于 Apple 强大的生态号召力，为 Apple ID 登录提供支持软件和网站的范围在过去四年间迅速扩大——更难得的是，很多国产软件也相继提供了支持。&lt;/p&gt;&lt;figure&gt;&lt;img alt="SXDxbiRDMo0snpxvJGWcEHqlnPe" data-original="https://cdn.sspai.com/editor/u_/cjnb07db34tel7u5qvo0" src="https://cdn.sspai.com/editor/u_/cjnb07db34tel7u5qvo0"/&gt;&lt;/figure&gt;&lt;p&gt;与此同时，Apple 为 Sign in with Apple 提供了非常透明的管理方式。除了在已经登录了 Apple ID 的设备上可以在账号管理页面中的「登录与安全」里调整之外，也可以直接在 appleid.apple.com 上面使用网页端管理。对于每一个使用了 Sign in with Apple 注册和登录的网络服务，Apple 会记录授权登录的时间、执行邮件转发的虚拟邮箱，以及非常明确的中止授权（解绑）按钮：&lt;/p&gt;&lt;figure&gt;&lt;img alt="OxJMbWHGYoxkUMx2X3lclgBonPf" data-original="https://cdn.sspai.com/editor/u_/cjnb07lb34tel7u5qvog" src="https://cdn.sspai.com/editor/u_/cjnb07lb34tel7u5qvog"/&gt;&lt;figcaption&gt;取决于系统版本，这个管理窗口的样式也可能有一些细微差别&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Google&lt;/h3&gt;&lt;p&gt;相比起 Sign in with Apple ，Google 自己的授权登录功能 Sign in with Google 的知名度在国内则显而易见的不是很高。但如果你正在使用 Twitter&lt;sup&gt;1&lt;/sup&gt;、Pinterest、Medium 之类的平台的话，在创建新账号的时候就可以看到使用 Google 账号的选项了：&lt;/p&gt;&lt;figure&gt;&lt;img alt="NkBCb0zdeooVaHxpSa2cwG4Ynud" data-original="https://cdn.sspai.com/editor/u_/cjnb07tb34tel4rd8m10" src="https://cdn.sspai.com/editor/u_/cjnb07tb34tel4rd8m10"/&gt;&lt;/figure&gt;&lt;p&gt;与 Sign in with Apple 略有不同的是，除了直接通过 Google 账号邮箱创建账号之外，Sign in with Google 在适配的 app 或者网站中也可以扩展到提供 Google Drive 或者 Google 相册的访问。同时，它的使用场景也不仅仅是注册新账号，许多 Play Store 上面的游戏会选择接入 Google Play Games 服务、直接将 Google 账号作为游戏存档同步和奖杯系统的依据（类似依靠 iCloud 同步的 Game Center ）——换句话说，Sign in with Google 的被授权登录方能够接触到的账号信息相比 Apple 多了不少。&lt;/p&gt;&lt;p&gt;同样的，想要检查和管理这些账号授权的话，Google 也提供了 Android 设备中的 Google 账号管理和网页两种入口：在 myaccount.google.com 中进入「数据与隐私」界面，就可以找到所有你授权过的第三方 app 与服务（Your connections to third-party apps and services），点击进入详情之后就可以看到它们获得了哪些授权、获得日期、这些权限的具体内容，并且可以一键撤销。&lt;/p&gt;&lt;figure&gt;&lt;img alt="TD1EbXitroFRE5xYZVCc21MgnUb" data-original="https://cdn.sspai.com/editor/u_/cjnb08db34tel4rd8m1g" src="https://cdn.sspai.com/editor/u_/cjnb08db34tel4rd8m1g"/&gt;&lt;figcaption&gt;比如这个订阅管理软件就被授权使用 Google Drive 备份和同步&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Microsoft&lt;/h3&gt;&lt;p&gt;比起 Apple 和 Google ，微软账号的第三方授权使用场景不是那么丰富，反而是在通过第三方邮件客户端中登录 Outlook 邮箱、或者一些可以关联到 OneNote 的 RSS 客户端或是连接到 OneDrive 的第三方应用使用的比较多。对于微软账号，最方便的管理方式就是直接在微软账号的 &lt;a href="https://account.live.com/consent/Manage" target="_blank"&gt;网页管理界面&lt;/a&gt; 上操作了。&lt;/p&gt;&lt;figure&gt;&lt;img alt="OG1RbC6KyoPfaPxxYWycMnpknbG" data-original="https://cdn.sspai.com/editor/u_/cjnb08lb34temvgn26og" src="https://cdn.sspai.com/editor/u_/cjnb08lb34temvgn26og"/&gt;&lt;/figure&gt;&lt;p&gt;在曾经授权过的 app 的界面里，微软会列出你授权使用的具体信息、授权时间和最后使用的时间，以及撤销授权的开关，无需二次确认即可直接移除权限。&lt;/p&gt;&lt;figure&gt;&lt;img alt="MZJibYLfmohDWTxYCVEcDfP3nPh" data-original="https://cdn.sspai.com/editor/u_/cjnb08tb34tel7u5qvp0" src="https://cdn.sspai.com/editor/u_/cjnb08tb34tel7u5qvp0"/&gt;&lt;/figure&gt;&lt;h3&gt;Facebook (Meta)&lt;/h3&gt;&lt;p&gt;众所周知，御三家指的其实是四所公司 🌝 。&lt;/p&gt;&lt;p&gt;从前两年的高调改名，到扎克伯格的低分辨率截图，再到最近 Thread 横空出世以及八角笼决斗，Meta 公司这几年「不务正业」的氛围似乎越来越浓了。不过哪怕 CEO 和元宇宙都不靠谱，包括 Facebook、Instagram 和 WhatsApp 在内的 Meta 软件生态依然是不容小觑的。此外，由于 Facebook 相比前面三家拥有明显的强社交属性，它同样也成为了很多游戏愿意支持的账号系统。&lt;/p&gt;&lt;figure&gt;&lt;img alt="CFxkbRHCMooPBcx58zbcYheXn2f" data-original="https://cdn.sspai.com/editor/u_/cjnb095b34tel4rd8m20" src="https://cdn.sspai.com/editor/u_/cjnb095b34tel4rd8m20"/&gt;&lt;/figure&gt;&lt;p&gt;想要管理用 Facebook 账号授权过的第三方服务的话，可以在 Facebook app 或者网页版的设置中进入「Apps and websites」，里面会列出你授权的具体信息，比如用户名、邮箱、性别信息或者生日等等，同时还给出了一些更加细分的调整项——你可以选择续期，禁用通知甚至是本次授权的可见性（比如向你的好友展示你用 Facebook 账号登录了 Pinterest ）——当然，也可以简单干脆的一键撤销授权。&lt;/p&gt;&lt;figure&gt;&lt;img alt="YgAdbdDfHoJVwBxN5mmc2t10ncZ" data-original="https://cdn.sspai.com/editor/u_/cjnb09lb34telve6qrdg" src="https://cdn.sspai.com/editor/u_/cjnb09lb34telve6qrdg"/&gt;&lt;/figure&gt;&lt;h2&gt;简中三小龙&lt;/h2&gt;&lt;h3&gt;QQ 与微信&lt;/h3&gt;&lt;p&gt;作为国内网络环境中授权登录的大头，QQ 和微信在第三方授权的管理上还算透明。虽然不一定提供了 Apple 或者 Google 那样便捷的网页管理入口（至少 QQ 可以通过 &lt;a href="https://connect.qq.com" target="_blank"&gt;QQ 互联&lt;/a&gt; 来管理），但是在对应的 app 内操作还是相对直观的：&lt;/p&gt;&lt;figure&gt;&lt;img alt="LDLWbvah5odi6wxlgQpcDTzFneg" data-original="https://cdn.sspai.com/editor/u_/cjnb09tb34temvgn26p0" src="https://cdn.sspai.com/editor/u_/cjnb09tb34temvgn26p0"/&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img alt="Opu2bDjdVoxljAxUWF9cxA9enLd" data-original="https://cdn.sspai.com/editor/u_/cjnb0a5b34temvgn26pg" src="https://cdn.sspai.com/editor/u_/cjnb0a5b34temvgn26pg"/&gt;&lt;figcaption&gt;这里使用的是 TIM ，在 QQ app 中的路径相同&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;然而，虽然管理便捷，但仍然有一个部分是我们无法忽视的：微信小程序。比起使用微信号登录第三方 app ，微信对于使用微信账号授权登录小程序的态度可以说相当的模糊和暧昧——虽然登录小程序很方便、登录同时也可以选择是否要隐藏自己的昵称和头像，但是后续想要对这些授权进行管理却麻烦很多。&lt;/p&gt;&lt;p&gt;对于这些乱七八糟的小东西而言，在微信 app 顶部的小程序界面直接把小程序删除是不会清除掉里面的相关数据的。除了在一部分比较良心的小程序里面可以直接相关的账号信息管理之外，我们想要调整微信账号对于小程序的授权，本质上只有一种方法：&lt;/p&gt;&lt;figure&gt;&lt;img alt="TDZmboHgaoggUuxs5Z7cZQTZnsz" data-original="https://cdn.sspai.com/editor/u_/cjnb0alb34tel4rd8m2g" src="https://cdn.sspai.com/editor/u_/cjnb0alb34tel4rd8m2g"/&gt;&lt;/figure&gt;&lt;p&gt;但小程序开发者会不会完全删除你的相关信息呢？至少根据微信官方提供的 &lt;a href="https://developers.weixin.qq.com/miniprogram/dev/framework/security.html#" target="_blank"&gt;小程序开发指引&lt;/a&gt; ，以及微信开放社区中的 &lt;a href="https://developers.weixin.qq.com/community/develop/doc/000c2ec3e148d093024e5374651800" target="_blank"&gt;一些问答&lt;/a&gt; 来看，删除与否依然最终是开发者决定的、微信官方不会强制执行：&lt;/p&gt;&lt;figure&gt;&lt;img alt="K2cDbQox7oxscCxFfascJbSqnVg" data-original="https://cdn.sspai.com/editor/u_/cjnb0atb34tel7u5qvpg" src="https://cdn.sspai.com/editor/u_/cjnb0atb34tel7u5qvpg"/&gt;&lt;/figure&gt;&lt;p&gt;对于这样的情况，只能建议以后在授权微信账号登录小程序的时候，一定要考虑清楚了再给。&lt;/p&gt;&lt;h3&gt;支付宝&lt;/h3&gt;&lt;p&gt;支付宝，或者说整个阿里系应用的账号授权管理，同样因为相互授权和支付宝小程序的加入而变得相当混乱。不过至少对于支付宝来说，管理授权信息的方式相比微信还是更直观一些，你可以在支付宝 app 的「设置 - 隐私 - 个人信息授权管理」中对绝大多数你使用支付宝账户登录的第三方 app（比如高德地图）和支付宝小程序（比如楼下沙县小吃的点餐二维码）进行管理：&lt;/p&gt;&lt;figure&gt;&lt;img alt="WMyYb26tsoXkrGxFoRkc0zTsnng" data-original="https://cdn.sspai.com/editor/u_/cjnb0b5b34tel7u5qvq0" src="https://cdn.sspai.com/editor/u_/cjnb0b5b34tel7u5qvq0"/&gt;&lt;figcaption&gt;可惜还是没有批量选择和撤权&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2&gt;其他服务商&lt;/h2&gt;&lt;h3&gt;新浪微博&lt;/h3&gt;&lt;p&gt;如果说前面的那些大服务商至少还有个态度可言的话，新浪微博对于第三方登录授权的管理「虽然称不上是简洁明了吧，至少也可以说是胡搅蛮缠」。想要查看和修改使用微博账号授权登录过的第三方服务，新浪在这里给你留下的路上可谓是：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;大坑套小坑，小坑套老坑，坑里还有水，水里藏着钉&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;因为此时最大的问题，并不是管理的路径有多么曲折，而是新浪微博现在完全不允许你查看和撤销授权登录记录了。此前，你还可以通过登录网页版微博，在个人主页的「我的应用」界面下对调整登录过的第三方 app ，但是在某一次网页版更新之后，新浪直接去除了这个入口：&lt;/p&gt;&lt;figure&gt;&lt;img alt="GFmcbZuagozug5xsOBFcHVDWnMh" data-original="https://cdn.sspai.com/editor/u_/cjnb0bdb34tel7u5qvqg" src="https://cdn.sspai.com/editor/u_/cjnb0bdb34tel7u5qvqg"/&gt;&lt;figcaption&gt;最左为一份 2019 年的百度知道回答，此时管理界面仍然可见；右侧为目前的微博网页版界面&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;不过新浪微博也算是个「端起碗来吃肉、放下筷子骂娘」的数典忘祖的典范了，其各种强推移动端 app 弃网页版于不顾的行为简直沁竹难书。那么按理说第三方授权管理如果在网页端找不到，在移动端 app 上面一定得有个管理入口了吧？&lt;/p&gt;&lt;p&gt;新浪说：&lt;strong&gt;我不仅能骂娘，我还要砸锅&lt;/strong&gt;：&lt;/p&gt;&lt;figure&gt;&lt;img alt="BNK7b6eFOonsZWx6j2Tc3abOnKg" data-original="https://cdn.sspai.com/editor/u_/cjnb0c5b34tel4rd8m30" src="https://cdn.sspai.com/editor/u_/cjnb0c5b34tel4rd8m30"/&gt;&lt;/figure&gt;&lt;p&gt;我们不知道新浪是从哪里获得的勇气，因为连微信这种历来喜欢胡搅蛮缠的家伙在第三方授权登录的管理上都没有端出这样一副架子。只能说以后在登录 app 的时候，千万不要选用微博账号做授权。&lt;/p&gt;&lt;h3&gt;豆瓣&lt;/h3&gt;&lt;p&gt;豆瓣本身对于其他账号系统的授权登录虽然支持范围不广——至今也就只有微信和微博——但是对于管理豆瓣账号的登录授权还是留下了空间的。与前面新浪微博的态度截然相反，你在豆瓣的手机 app 上反而看不到用豆瓣授权登录过的第三方服务，而是需要回到 &lt;a href="https://www.douban.com" target="_blank"&gt;网页版豆瓣&lt;/a&gt; 上，在「我的账号 - 账号管理 - 第三方应用授权」下面才能找到相对应的管理界面：&lt;/p&gt;&lt;figure&gt;&lt;img alt="A93NbWNu6opZntxytdvcrdvonjb" data-original="https://cdn.sspai.com/editor/u_/cjnb0cdb34temvgn26q0" src="https://cdn.sspai.com/editor/u_/cjnb0cdb34temvgn26q0"/&gt;&lt;/figure&gt;&lt;h3&gt;百度&lt;/h3&gt;&lt;p&gt;国内互联网三大家 BAT 中的「B」是如何从百度变成字节跳动（ByteDance）的，大家想必都能说出一二，随着百度在各个服务领域的受挫，时至今日仍然被高频率使用的似乎也就剩下百度网盘了，使用百度账号的授权登录自然也随之式微，目前基本上只拘泥于百度系内的 app 登录了。你可以在百度账号的设置页面中进入「授权管理」来调整第三方登录的授权。&lt;/p&gt;&lt;figure&gt;&lt;img alt="A8EBbdoC1oc57nxHQETcB2xpn8c" data-original="https://cdn.sspai.com/editor/u_/cjnb0clb34telve6qre0" src="https://cdn.sspai.com/editor/u_/cjnb0clb34telve6qre0"/&gt;&lt;/figure&gt;&lt;h3&gt;抖音&lt;/h3&gt;&lt;p&gt;说起字节跳动，支持抖音账号授权登录的 app 规模其实比想象中的还大一些——修图软件「醒图」和剪辑工具「剪映」都支持通过抖音账号直接登录，并且以此提供了一些收藏夹同步之类的联动功能。对于抖音账号的授权管理，你可以在 app 内的「账号与安全 - 授权管理」中查看和修改。&lt;/p&gt;&lt;figure&gt;&lt;img alt="Pc5QbFryao2A80xWMVjcpEYdnjc" data-original="https://cdn.sspai.com/editor/u_/cjnb0ctb34tel7u5qvr0" src="https://cdn.sspai.com/editor/u_/cjnb0ctb34tel7u5qvr0"/&gt;&lt;/figure&gt;&lt;h2&gt;授权管理的本质仍然是安全意识&lt;/h2&gt;&lt;p&gt;无感授权第三方登录这件事情可以说极大的简化了我们接触和使用新服务的流程，同时也很容易让我们对于类似的授权失去警惕。虽然在很多时候，「授权登录」并不会像语焉不详的用户协议那样不允许就不让你用，但这样四通八达的账号体系背后，很容易在不经意间流露出去的依然是我们自己的隐私——因为在很多时候，我们自己都没有意识到自己的网络账号在日积月累中留下了多少可以被分析的个人信息。及时对这些信息进行筛选和管理，是从源头上防止个人信息被滥用的关键一步。&lt;/p&gt;&lt;p&gt;如果你愿意更加深入的了解这一套基于 OAuth 的账号授权体系，可以参看来自 Cloudflare 的科普文章&lt;a href="https://www.cloudflare.com/zh-cn/learning/access-management/what-is-oauth/" target="_blank"&gt;《什么是 OAuth？》&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;gt; 下载 &lt;a href="https://sspai.com/page/client" target="_blank"&gt;少数派 2.0 客户端&lt;/a&gt;、关注 &lt;a href="https://sspai.com/s/J71e" target="_blank"&gt;少数派公众号&lt;/a&gt;，解锁全新阅读体验 📰&lt;/p&gt;&lt;p&gt;&amp;gt; 实用、好用的 &lt;a href="https://sspai.com/mall" target="_blank"&gt;正版软件&lt;/a&gt;，少数派为你呈现 🚀&lt;/p&gt;&lt;/div&gt;</description><author>PostMeridy</author><guid>https://sspai.com/post/82550</guid><pubDate>Wed, 30 Aug 2023 07:00:00 GMT</pubDate></item></channel></rss>